{
	"id": "951486fec977e8023da5ea4904ee84ec",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.27",
	"solcLongVersion": "0.8.27+commit.40a35a09",
	"input": {
		"language": "Solidity",
		"sources": {
			"TinTinCourse/AMM/amm.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.19;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\n/*\r\n    实现一个基于常数乘积的 AMM 流动性池\r\n\r\n    自动做市商（Automated Market Maker，AMM）是一种智能合约，它允许数字资产之间的去中心化交易。AMM 的引入开创了一种全新的交易方式，无需传统的买家和卖家进行订单匹配，而是通过一种预设的数学公式（比如，常数乘积公式）创建一个流动性池，使得用户可以随时进行交易。\r\n\r\n    本练习只要求实现一个 WETH 的流动性池，初始化时确定另一种 ERC20 代币。\r\n\r\n    PS：可以参考 Uniswap V2 版本\r\n*/\r\ncontract AMM is ERC20 {\r\n    // 代币合约\r\n    IERC20 public token0;\r\n    IERC20 public token1;\r\n\r\n    // 代币储备量\r\n    uint public reserve0;\r\n    uint public reserve1;\r\n    \r\n    // 事件 \r\n    event Mint(address indexed sender, uint amount0, uint amount1);\r\n    event Burn(address indexed sender, uint amount0, uint amount1);\r\n    event Swap(\r\n        address indexed sender,\r\n        uint amountIn,\r\n        address tokenIn,\r\n        uint amountOut,\r\n        address tokenOut\r\n        );\r\n\r\n    // 构造器，初始化代币地址\r\n    constructor(IERC20 _token0, IERC20 _token1) ERC20(\"SimpleSwap\", \"SS\") {\r\n        token0 = _token0;\r\n        token1 = _token1;\r\n    }\r\n\r\n    // 取两个数的最小值\r\n    function min(uint x, uint y) internal pure returns (uint z) {\r\n        z = x < y ? x : y;\r\n    }\r\n\r\n    // 计算平方根 babylonian method (https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method)\r\n    function sqrt(uint y) internal pure returns (uint z) {\r\n        if (y > 3) {\r\n            z = y;\r\n            uint x = y / 2 + 1;\r\n            while (x < z) {\r\n                z = x;\r\n                x = (y / x + x) / 2;\r\n            }\r\n        } else if (y != 0) {\r\n            z = 1;\r\n        }\r\n    }\r\n\r\n    // 添加流动性，转进代币，铸造LP\r\n    // 如果首次添加，铸造的LP数量 = sqrt(amount0 * amount1)\r\n    // 如果非首次，铸造的LP数量 = min(amount0/reserve0, amount1/reserve1)* totalSupply_LP\r\n    // @param amount0Desired 添加的token0数量\r\n    // @param amount1Desired 添加的token1数量\r\n    function addLiquidity(uint amount0Desired, uint amount1Desired) public returns(uint liquidity){\r\n        // 将添加的流动性转入Swap合约，需事先给Swap合约授权\r\n        token0.transferFrom(msg.sender, address(this), amount0Desired);\r\n        token1.transferFrom(msg.sender, address(this), amount1Desired);\r\n        // 计算添加的流动性\r\n        uint _totalSupply = totalSupply();\r\n        if (_totalSupply == 0) {\r\n            // 如果是第一次添加流动性，铸造 L = sqrt(x * y) 单位的LP（流动性提供者）代币\r\n            liquidity = sqrt(amount0Desired * amount1Desired);\r\n        } else {\r\n            // 如果不是第一次添加流动性，按添加代币的数量比例铸造LP，取两个代币更小的那个比例\r\n            liquidity = min(amount0Desired * _totalSupply / reserve0, amount1Desired * _totalSupply /reserve1);\r\n        }\r\n\r\n        // 检查铸造的LP数量\r\n        require(liquidity > 0, 'INSUFFICIENT_LIQUIDITY_MINTED');\r\n\r\n        // 更新储备量\r\n        reserve0 = token0.balanceOf(address(this));\r\n        reserve1 = token1.balanceOf(address(this));\r\n\r\n        // 给流动性提供者铸造LP代币，代表他们提供的流动性\r\n        _mint(msg.sender, liquidity);\r\n        \r\n        emit Mint(msg.sender, amount0Desired, amount1Desired);\r\n    }\r\n\r\n    // 移除流动性，销毁LP，转出代币\r\n    // 转出数量 = (liquidity / totalSupply_LP) * reserve\r\n    // @param liquidity 移除的流动性数量\r\n    function removeLiquidity(uint liquidity) external returns (uint amount0, uint amount1) {\r\n        // 获取余额\r\n        uint balance0 = token0.balanceOf(address(this));\r\n        uint balance1 = token1.balanceOf(address(this));\r\n        // 按LP的比例计算要转出的代币数量\r\n        uint _totalSupply = totalSupply();\r\n        amount0 = liquidity * balance0 / _totalSupply;\r\n        amount1 = liquidity * balance1 / _totalSupply;\r\n        // 检查代币数量\r\n        require(amount0 > 0 && amount1 > 0, 'INSUFFICIENT_LIQUIDITY_BURNED');\r\n        // 销毁LP\r\n        _burn(msg.sender, liquidity);\r\n        // 转出代币\r\n        token0.transfer(msg.sender, amount0);\r\n        token1.transfer(msg.sender, amount1);\r\n        // 更新储备量\r\n        reserve0 = token0.balanceOf(address(this));\r\n        reserve1 = token1.balanceOf(address(this));\r\n\r\n        emit Burn(msg.sender, amount0, amount1);\r\n    }\r\n\r\n    // 给定一个资产的数量和代币对的储备，计算交换另一个代币的数量\r\n    // 由于乘积恒定\r\n    // 交换前: k = x * y\r\n    // 交换后: k = (x + delta_x) * (y + delta_y)\r\n    // 可得 delta_y = - delta_x * y / (x + delta_x)\r\n    // 正/负号代表转入/转出\r\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) public pure returns (uint amountOut) {\r\n        require(amountIn > 0, 'INSUFFICIENT_AMOUNT');\r\n        require(reserveIn > 0 && reserveOut > 0, 'INSUFFICIENT_LIQUIDITY');\r\n        amountOut = amountIn * reserveOut / (reserveIn + amountIn);\r\n    }\r\n\r\n    // swap代币\r\n    // @param amountIn 用于交换的代币数量\r\n    // @param tokenIn 用于交换的代币合约地址\r\n    // @param amountOutMin 交换出另一种代币的最低数量\r\n    function swap(uint amountIn, IERC20 tokenIn, uint amountOutMin) external returns (uint amountOut, IERC20 tokenOut){\r\n        require(amountIn > 0, 'INSUFFICIENT_OUTPUT_AMOUNT');\r\n        require(tokenIn == token0 || tokenIn == token1, 'INVALID_TOKEN');\r\n        \r\n        uint balance0 = token0.balanceOf(address(this));\r\n        uint balance1 = token1.balanceOf(address(this));\r\n\r\n        if(tokenIn == token0){\r\n            // 如果是token0交换token1\r\n            tokenOut = token1;\r\n            // 计算能交换出的token1数量\r\n            amountOut = getAmountOut(amountIn, balance0, balance1);\r\n            require(amountOut > amountOutMin, 'INSUFFICIENT_OUTPUT_AMOUNT');\r\n            // 进行交换\r\n            tokenIn.transferFrom(msg.sender, address(this), amountIn);\r\n            tokenOut.transfer(msg.sender, amountOut);\r\n        }else{\r\n            // 如果是token1交换token0\r\n            tokenOut = token0;\r\n            // 计算能交换出的token1数量\r\n            amountOut = getAmountOut(amountIn, balance1, balance0);\r\n            require(amountOut > amountOutMin, 'INSUFFICIENT_OUTPUT_AMOUNT');\r\n            // 进行交换\r\n            tokenIn.transferFrom(msg.sender, address(this), amountIn);\r\n            tokenOut.transfer(msg.sender, amountOut);\r\n        }\r\n\r\n        // 更新储备量\r\n        reserve0 = token0.balanceOf(address(this));\r\n        reserve1 = token1.balanceOf(address(this));\r\n\r\n        emit Swap(msg.sender, amountIn, address(tokenIn), amountOut, address(tokenOut));\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TinTinCourse/AMM/amm.sol": {
				"AMM": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token0",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "_token1",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "tokenOut",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Desired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Desired",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserve0",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserve1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "tokenOut",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TinTinCourse/AMM/amm.sol\":705:7090  contract AMM is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"TinTinCourse/AMM/amm.sol\":1256:1388  constructor(IERC20 _token0, IERC20 _token1) ERC20(\"SimpleSwap\", \"SS\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xb4, 0x053696d706c655377617)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x02\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xf0, 0x5353)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_9\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n  pop\n    /* \"TinTinCourse/AMM/amm.sol\":1337:1343  token0 */\n  0x05\n    /* \"TinTinCourse/AMM/amm.sol\":1337:1353  token0 = _token0 */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap5\n  dup6\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"TinTinCourse/AMM/amm.sol\":1364:1370  token1 */\n  0x06\n    /* \"TinTinCourse/AMM/amm.sol\":1364:1380  token1 = _token1 */\n  dup1\n  sload\n  swap4\n  swap1\n  swap5\n  and\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"TinTinCourse/AMM/amm.sol\":705:7090  contract AMM is ERC20 {... */\n  jump(tag_18)\n    /* \"#utility.yul\":14:199   */\ntag_12:\n    /* \"#utility.yul\":101:114   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":143:174   */\n  dup2\n  and\n    /* \"#utility.yul\":133:175   */\n  dup2\n  eq\n    /* \"#utility.yul\":123:193   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":189:190   */\n  0x00\n    /* \"#utility.yul\":186:187   */\n  0x00\n    /* \"#utility.yul\":179:191   */\n  revert\n    /* \"#utility.yul\":123:193   */\ntag_20:\n    /* \"#utility.yul\":14:199   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":204:541   */\ntag_3:\n    /* \"#utility.yul\":311:317   */\n  0x00\n    /* \"#utility.yul\":319:325   */\n  0x00\n    /* \"#utility.yul\":372:374   */\n  0x40\n    /* \"#utility.yul\":360:369   */\n  dup4\n    /* \"#utility.yul\":351:358   */\n  dup6\n    /* \"#utility.yul\":347:370   */\n  sub\n    /* \"#utility.yul\":343:375   */\n  slt\n    /* \"#utility.yul\":340:392   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":388:389   */\n  0x00\n    /* \"#utility.yul\":385:386   */\n  0x00\n    /* \"#utility.yul\":378:390   */\n  revert\n    /* \"#utility.yul\":340:392   */\ntag_22:\n    /* \"#utility.yul\":411:459   */\n  tag_23\n    /* \"#utility.yul\":449:458   */\n  dup4\n    /* \"#utility.yul\":411:459   */\n  tag_12\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":401:459   */\n  swap2\n  pop\n    /* \"#utility.yul\":478:535   */\n  tag_24\n    /* \"#utility.yul\":531:533   */\n  0x20\n    /* \"#utility.yul\":520:529   */\n  dup5\n    /* \"#utility.yul\":516:534   */\n  add\n    /* \"#utility.yul\":478:535   */\n  tag_12\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":468:535   */\n  swap1\n  pop\n    /* \"#utility.yul\":204:541   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":546:673   */\ntag_13:\n    /* \"#utility.yul\":607:617   */\n  0x4e487b71\n    /* \"#utility.yul\":602:605   */\n  0xe0\n    /* \"#utility.yul\":598:618   */\n  shl\n    /* \"#utility.yul\":595:596   */\n  0x00\n    /* \"#utility.yul\":588:619   */\n  mstore\n    /* \"#utility.yul\":638:642   */\n  0x41\n    /* \"#utility.yul\":635:636   */\n  0x04\n    /* \"#utility.yul\":628:643   */\n  mstore\n    /* \"#utility.yul\":662:666   */\n  0x24\n    /* \"#utility.yul\":659:660   */\n  0x00\n    /* \"#utility.yul\":652:667   */\n  revert\n    /* \"#utility.yul\":678:1058   */\ntag_14:\n    /* \"#utility.yul\":757:758   */\n  0x01\n    /* \"#utility.yul\":753:765   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":800:812   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":821:882   */\n  tag_27\n  jumpi\n    /* \"#utility.yul\":875:879   */\n  0x7f\n    /* \"#utility.yul\":867:873   */\n  dup3\n    /* \"#utility.yul\":863:880   */\n  and\n    /* \"#utility.yul\":853:880   */\n  swap2\n  pop\n    /* \"#utility.yul\":821:882   */\ntag_27:\n    /* \"#utility.yul\":928:930   */\n  0x20\n    /* \"#utility.yul\":920:926   */\n  dup3\n    /* \"#utility.yul\":917:931   */\n  lt\n    /* \"#utility.yul\":897:915   */\n  dup2\n    /* \"#utility.yul\":894:932   */\n  sub\n    /* \"#utility.yul\":891:1052   */\n  tag_28\n  jumpi\n    /* \"#utility.yul\":974:984   */\n  0x4e487b71\n    /* \"#utility.yul\":969:972   */\n  0xe0\n    /* \"#utility.yul\":965:985   */\n  shl\n    /* \"#utility.yul\":962:963   */\n  0x00\n    /* \"#utility.yul\":955:986   */\n  mstore\n    /* \"#utility.yul\":1009:1013   */\n  0x22\n    /* \"#utility.yul\":1006:1007   */\n  0x04\n    /* \"#utility.yul\":999:1014   */\n  mstore\n    /* \"#utility.yul\":1037:1041   */\n  0x24\n    /* \"#utility.yul\":1034:1035   */\n  0x00\n    /* \"#utility.yul\":1027:1042   */\n  revert\n    /* \"#utility.yul\":891:1052   */\ntag_28:\n  pop\n    /* \"#utility.yul\":678:1058   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1189:1707   */\ntag_16:\n    /* \"#utility.yul\":1291:1293   */\n  0x1f\n    /* \"#utility.yul\":1286:1289   */\n  dup3\n    /* \"#utility.yul\":1283:1294   */\n  gt\n    /* \"#utility.yul\":1280:1701   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":1327:1332   */\n  dup1\n    /* \"#utility.yul\":1324:1325   */\n  0x00\n    /* \"#utility.yul\":1317:1333   */\n  mstore\n    /* \"#utility.yul\":1371:1375   */\n  0x20\n    /* \"#utility.yul\":1368:1369   */\n  0x00\n    /* \"#utility.yul\":1358:1376   */\n  keccak256\n    /* \"#utility.yul\":1441:1443   */\n  0x1f\n    /* \"#utility.yul\":1429:1439   */\n  dup5\n    /* \"#utility.yul\":1425:1444   */\n  add\n    /* \"#utility.yul\":1422:1423   */\n  0x05\n    /* \"#utility.yul\":1418:1445   */\n  shr\n    /* \"#utility.yul\":1412:1416   */\n  dup2\n    /* \"#utility.yul\":1408:1446   */\n  add\n    /* \"#utility.yul\":1477:1481   */\n  0x20\n    /* \"#utility.yul\":1465:1475   */\n  dup6\n    /* \"#utility.yul\":1462:1482   */\n  lt\n    /* \"#utility.yul\":1459:1506   */\n  iszero\n  tag_32\n  jumpi\n  pop\n    /* \"#utility.yul\":1500:1504   */\n  dup1\n    /* \"#utility.yul\":1459:1506   */\ntag_32:\n    /* \"#utility.yul\":1555:1557   */\n  0x1f\n    /* \"#utility.yul\":1550:1553   */\n  dup5\n    /* \"#utility.yul\":1546:1558   */\n  add\n    /* \"#utility.yul\":1543:1544   */\n  0x05\n    /* \"#utility.yul\":1539:1559   */\n  shr\n    /* \"#utility.yul\":1533:1537   */\n  dup3\n    /* \"#utility.yul\":1529:1560   */\n  add\n    /* \"#utility.yul\":1519:1560   */\n  swap2\n  pop\n    /* \"#utility.yul\":1610:1691   */\ntag_33:\n    /* \"#utility.yul\":1628:1630   */\n  dup2\n    /* \"#utility.yul\":1621:1626   */\n  dup2\n    /* \"#utility.yul\":1618:1631   */\n  lt\n    /* \"#utility.yul\":1610:1691   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1687:1688   */\n  0x00\n    /* \"#utility.yul\":1673:1689   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1654:1655   */\n  0x01\n    /* \"#utility.yul\":1643:1656   */\n  add\n    /* \"#utility.yul\":1610:1691   */\n  jump(tag_33)\ntag_35:\n    /* \"#utility.yul\":1614:1617   */\n  pop\n  pop\n    /* \"#utility.yul\":1280:1701   */\ntag_31:\n    /* \"#utility.yul\":1189:1707   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1883:3182   */\ntag_8:\n    /* \"#utility.yul\":2003:2013   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2025:2055   */\n  dup2\n  gt\n    /* \"#utility.yul\":2022:2078   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2058:2076   */\n  tag_39\n  tag_13\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":2087:2184   */\n  tag_40\n    /* \"#utility.yul\":2177:2183   */\n  dup2\n    /* \"#utility.yul\":2137:2175   */\n  tag_41\n    /* \"#utility.yul\":2169:2173   */\n  dup5\n    /* \"#utility.yul\":2163:2174   */\n  sload\n    /* \"#utility.yul\":2137:2175   */\n  tag_14\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":2131:2135   */\n  dup5\n    /* \"#utility.yul\":2087:2184   */\n  tag_16\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":2233:2237   */\n  0x20\n    /* \"#utility.yul\":2264:2266   */\n  0x1f\n    /* \"#utility.yul\":2253:2267   */\n  dup3\n  gt\n    /* \"#utility.yul\":2281:2282   */\n  0x01\n    /* \"#utility.yul\":2276:2925   */\n  dup2\n  eq\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2969:2970   */\n  0x00\n    /* \"#utility.yul\":2986:2992   */\n  dup4\n    /* \"#utility.yul\":2983:3072   */\n  iszero\n  tag_44\n  jumpi\n  pop\n    /* \"#utility.yul\":3038:3057   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":3032:3058   */\n  mload\n    /* \"#utility.yul\":2983:3072   */\ntag_44:\n  not(0x00)\n    /* \"#utility.yul\":1840:1841   */\n  0x03\n    /* \"#utility.yul\":1836:1847   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1832:1856   */\n  shr\n    /* \"#utility.yul\":1828:1857   */\n  not\n    /* \"#utility.yul\":1818:1858   */\n  and\n    /* \"#utility.yul\":1864:1865   */\n  0x01\n    /* \"#utility.yul\":1860:1871   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":1815:1872   */\n  or\n    /* \"#utility.yul\":3085:3166   */\n  dup5\n  sstore\n    /* \"#utility.yul\":2246:3176   */\n  jump(tag_35)\n    /* \"#utility.yul\":2276:2925   */\ntag_43:\n    /* \"#utility.yul\":1136:1137   */\n  0x00\n    /* \"#utility.yul\":1129:1143   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":1173:1177   */\n  0x20\n    /* \"#utility.yul\":1160:1178   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2312:2332   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":2430:2652   */\ntag_47:\n    /* \"#utility.yul\":2444:2451   */\n  dup3\n    /* \"#utility.yul\":2441:2442   */\n  dup2\n    /* \"#utility.yul\":2438:2452   */\n  lt\n    /* \"#utility.yul\":2430:2652   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":2526:2545   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2520:2546   */\n  mload\n    /* \"#utility.yul\":2505:2547   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2633:2637   */\n  0x20\n    /* \"#utility.yul\":2618:2638   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2586:2587   */\n  0x01\n    /* \"#utility.yul\":2574:2588   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":2460:2472   */\n  add\n    /* \"#utility.yul\":2430:2652   */\n  jump(tag_47)\ntag_49:\n    /* \"#utility.yul\":2434:2437   */\n  pop\n    /* \"#utility.yul\":2680:2686   */\n  dup5\n    /* \"#utility.yul\":2671:2678   */\n  dup3\n    /* \"#utility.yul\":2668:2687   */\n  lt\n    /* \"#utility.yul\":2665:2866   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":2741:2760   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2735:2761   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2824:2825   */\n  0x03\n    /* \"#utility.yul\":2820:2834   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":2836:2839   */\n  0xf8\n    /* \"#utility.yul\":2816:2840   */\n  and\n    /* \"#utility.yul\":2812:2849   */\n  shr\n    /* \"#utility.yul\":2808:2850   */\n  not\n    /* \"#utility.yul\":2793:2851   */\n  and\n    /* \"#utility.yul\":2778:2852   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2665:2866   */\ntag_50:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2912:2913   */\n  0x01\n    /* \"#utility.yul\":2896:2910   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2892:2914   */\n  add\n    /* \"#utility.yul\":2879:2915   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1883:3182   */\n  jump\t// out\ntag_18:\n    /* \"TinTinCourse/AMM/amm.sol\":705:7090  contract AMM is ERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"TinTinCourse/AMM/amm.sol\":705:7090  contract AMM is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x443cb4bc\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x9c8f9f23\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x9c8f9f23\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x9cd441da\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd21220a7\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      revert(0x00, 0x00)\n    tag_21:\n      dup1\n      0x443cb4bc\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5a76f25e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      revert(0x00, 0x00)\n    tag_20:\n      dup1\n      0x18160ddd\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x43264349\n      eq\n      tag_10\n      jumpi\n      revert(0x00, 0x00)\n    tag_22:\n      dup1\n      0x054d50d4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0dfe1681\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"TinTinCourse/AMM/amm.sol\":5035:5351  function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) public pure returns (uint amountOut) {... */\n    tag_3:\n      tag_23\n      tag_24\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n        /* \"#utility.yul\":631:656   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":619:621   */\n      0x20\n        /* \"#utility.yul\":604:622   */\n      add\n        /* \"TinTinCourse/AMM/amm.sol\":5035:5351  function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) public pure returns (uint amountOut) {... */\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_33\n      tag_34\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n        /* \"#utility.yul\":1763:1777   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1756:1778   */\n      iszero\n        /* \"#utility.yul\":1738:1779   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1726:1728   */\n      0x20\n        /* \"#utility.yul\":1711:1729   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_27\n        /* \"#utility.yul\":1598:1785   */\n      jump\n        /* \"TinTinCourse/AMM/amm.sol\":755:775  IERC20 public token0 */\n    tag_6:\n      sload(0x05)\n      tag_39\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_39:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1968:2000   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1950:2001   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1938:1940   */\n      0x20\n        /* \"#utility.yul\":1923:1941   */\n      add\n        /* \"TinTinCourse/AMM/amm.sol\":755:775  IERC20 public token0 */\n      tag_27\n        /* \"#utility.yul\":1790:2007   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      jump(tag_23)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_33\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"#utility.yul\":2667:2703   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2655:2657   */\n      0x20\n        /* \"#utility.yul\":2640:2658   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      tag_27\n        /* \"#utility.yul\":2525:2709   */\n      jump\n        /* \"TinTinCourse/AMM/amm.sol\":5555:7087  function swap(uint amountIn, IERC20 tokenIn, uint amountOutMin) external returns (uint amountOut, IERC20 tokenOut){... */\n    tag_10:\n      tag_55\n      tag_56\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3408:3433   */\n      swap3\n      dup4\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3469:3501   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3464:3466   */\n      0x20\n        /* \"#utility.yul\":3449:3467   */\n      dup4\n      add\n        /* \"#utility.yul\":3442:3502   */\n      mstore\n        /* \"#utility.yul\":3381:3399   */\n      add\n        /* \"TinTinCourse/AMM/amm.sol\":5555:7087  function swap(uint amountIn, IERC20 tokenIn, uint amountOutMin) external returns (uint amountOut, IERC20 tokenOut){... */\n      tag_27\n        /* \"#utility.yul\":3220:3508   */\n      jump\n        /* \"TinTinCourse/AMM/amm.sol\":835:855  uint public reserve0 */\n    tag_11:\n      tag_23\n      sload(0x07)\n      dup2\n      jump\n        /* \"TinTinCourse/AMM/amm.sol\":862:882  uint public reserve1 */\n    tag_12:\n      tag_23\n      sload(0x08)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_23\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_14:\n      tag_29\n      tag_73\n      jump\t// in\n        /* \"TinTinCourse/AMM/amm.sol\":3805:4729  function removeLiquidity(uint liquidity) external returns (uint amount0, uint amount1) {... */\n    tag_15:\n      tag_75\n      tag_76\n      calldatasize\n      0x04\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4170:4195   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":4226:4228   */\n      0x20\n        /* \"#utility.yul\":4211:4229   */\n      dup4\n      add\n        /* \"#utility.yul\":4204:4238   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4143:4161   */\n      add\n        /* \"TinTinCourse/AMM/amm.sol\":3805:4729  function removeLiquidity(uint liquidity) external returns (uint amount0, uint amount1) {... */\n      tag_27\n        /* \"#utility.yul\":3996:4244   */\n      jump\n        /* \"TinTinCourse/AMM/amm.sol\":2299:3635  function addLiquidity(uint amount0Desired, uint amount1Desired) public returns(uint liquidity){... */\n    tag_16:\n      tag_23\n      tag_82\n      calldatasize\n      0x04\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_17:\n      tag_33\n      tag_87\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n        /* \"TinTinCourse/AMM/amm.sol\":782:802  IERC20 public token1 */\n    tag_18:\n      sload(0x06)\n      tag_39\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_19:\n      tag_23\n      tag_94\n      calldatasize\n      0x04\n      tag_95\n      jump\t// in\n    tag_94:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"TinTinCourse/AMM/amm.sol\":5035:5351  function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) public pure returns (uint amountOut) {... */\n    tag_26:\n        /* \"TinTinCourse/AMM/amm.sol\":5126:5140  uint amountOut */\n      0x00\n        /* \"TinTinCourse/AMM/amm.sol\":5172:5173  0 */\n      0x00\n        /* \"TinTinCourse/AMM/amm.sol\":5161:5169  amountIn */\n      dup5\n        /* \"TinTinCourse/AMM/amm.sol\":5161:5173  amountIn > 0 */\n      gt\n        /* \"TinTinCourse/AMM/amm.sol\":5153:5197  require(amountIn > 0, 'INSUFFICIENT_AMOUNT') */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5195:5197   */\n      0x20\n        /* \"TinTinCourse/AMM/amm.sol\":5153:5197  require(amountIn > 0, 'INSUFFICIENT_AMOUNT') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5177:5198   */\n      mstore\n        /* \"#utility.yul\":5234:5236   */\n      0x13\n        /* \"#utility.yul\":5214:5232   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5207:5237   */\n      mstore\n      shl(0x6a, 0x125394d551919250d251539517d05353d55395)\n        /* \"#utility.yul\":5253:5271   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5246:5295   */\n      mstore\n        /* \"#utility.yul\":5312:5330   */\n      0x64\n      add\n        /* \"TinTinCourse/AMM/amm.sol\":5153:5197  require(amountIn > 0, 'INSUFFICIENT_AMOUNT') */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"TinTinCourse/AMM/amm.sol\":5228:5229  0 */\n      0x00\n        /* \"TinTinCourse/AMM/amm.sol\":5216:5225  reserveIn */\n      dup4\n        /* \"TinTinCourse/AMM/amm.sol\":5216:5229  reserveIn > 0 */\n      gt\n        /* \"TinTinCourse/AMM/amm.sol\":5216:5247  reserveIn > 0 && reserveOut > 0 */\n      dup1\n      iszero\n      tag_102\n      jumpi\n      pop\n        /* \"TinTinCourse/AMM/amm.sol\":5246:5247  0 */\n      0x00\n        /* \"TinTinCourse/AMM/amm.sol\":5233:5243  reserveOut */\n      dup3\n        /* \"TinTinCourse/AMM/amm.sol\":5233:5247  reserveOut > 0 */\n      gt\n        /* \"TinTinCourse/AMM/amm.sol\":5216:5247  reserveIn > 0 && reserveOut > 0 */\n    tag_102:\n        /* \"TinTinCourse/AMM/amm.sol\":5208:5274  require(reserveIn > 0 && reserveOut > 0, 'INSUFFICIENT_LIQUIDITY') */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5543:5545   */\n      0x20\n        /* \"TinTinCourse/AMM/amm.sol\":5208:5274  require(reserveIn > 0 && reserveOut > 0, 'INSUFFICIENT_LIQUIDITY') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5525:5546   */\n      mstore\n        /* \"#utility.yul\":5582:5584   */\n      0x16\n        /* \"#utility.yul\":5562:5580   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5555:5585   */\n      mstore\n      shl(0x50, 0x494e53554646494349454e545f4c4951554944495459)\n        /* \"#utility.yul\":5601:5619   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5594:5646   */\n      mstore\n        /* \"#utility.yul\":5663:5681   */\n      0x64\n      add\n        /* \"TinTinCourse/AMM/amm.sol\":5208:5274  require(reserveIn > 0 && reserveOut > 0, 'INSUFFICIENT_LIQUIDITY') */\n      tag_100\n        /* \"#utility.yul\":5341:5687   */\n      jump\n        /* \"TinTinCourse/AMM/amm.sol\":5208:5274  require(reserveIn > 0 && reserveOut > 0, 'INSUFFICIENT_LIQUIDITY') */\n    tag_103:\n        /* \"TinTinCourse/AMM/amm.sol\":5322:5342  reserveIn + amountIn */\n      tag_106\n        /* \"TinTinCourse/AMM/amm.sol\":5334:5342  amountIn */\n      dup5\n        /* \"TinTinCourse/AMM/amm.sol\":5322:5331  reserveIn */\n      dup5\n        /* \"TinTinCourse/AMM/amm.sol\":5322:5342  reserveIn + amountIn */\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"TinTinCourse/AMM/amm.sol\":5297:5318  amountIn * reserveOut */\n      tag_108\n        /* \"TinTinCourse/AMM/amm.sol\":5308:5318  reserveOut */\n      dup4\n        /* \"TinTinCourse/AMM/amm.sol\":5297:5305  amountIn */\n      dup7\n        /* \"TinTinCourse/AMM/amm.sol\":5297:5318  amountIn * reserveOut */\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"TinTinCourse/AMM/amm.sol\":5297:5343  amountIn * reserveOut / (reserveIn + amountIn) */\n      tag_110\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n        /* \"TinTinCourse/AMM/amm.sol\":5285:5343  amountOut = amountIn * reserveOut / (reserveIn + amountIn) */\n      swap5\n        /* \"TinTinCourse/AMM/amm.sol\":5035:5351  function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) public pure returns (uint amountOut) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_115\n      swap1\n      tag_114\n      jump\t// in\n    tag_115:\n      dup1\n      iszero\n      tag_116\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_117\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_116)\n    tag_117:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_118:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_118\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_116:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_122\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_119:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_129:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TinTinCourse/AMM/amm.sol\":5555:7087  function swap(uint amountIn, IERC20 tokenIn, uint amountOutMin) external returns (uint amountOut, IERC20 tokenOut){... */\n    tag_58:\n        /* \"TinTinCourse/AMM/amm.sol\":5637:5651  uint amountOut */\n      0x00\n        /* \"TinTinCourse/AMM/amm.sol\":5653:5668  IERC20 tokenOut */\n      0x00\n        /* \"TinTinCourse/AMM/amm.sol\":5699:5700  0 */\n      0x00\n        /* \"TinTinCourse/AMM/amm.sol\":5688:5696  amountIn */\n      dup6\n        /* \"TinTinCourse/AMM/amm.sol\":5688:5700  amountIn > 0 */\n      gt\n        /* \"TinTinCourse/AMM/amm.sol\":5680:5731  require(amountIn > 0, 'INSUFFICIENT_OUTPUT_AMOUNT') */\n      tag_133\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_135\n      jump\t// in\n    tag_133:\n        /* \"TinTinCourse/AMM/amm.sol\":5761:5767  token0 */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TinTinCourse/AMM/amm.sol\":5750:5767  tokenIn == token0 */\n      dup6\n      dup2\n      and\n        /* \"TinTinCourse/AMM/amm.sol\":5761:5767  token0 */\n      swap2\n      and\n        /* \"TinTinCourse/AMM/amm.sol\":5750:5767  tokenIn == token0 */\n      eq\n      dup1\n        /* \"TinTinCourse/AMM/amm.sol\":5750:5788  tokenIn == token0 || tokenIn == token1 */\n      tag_136\n      jumpi\n      pop\n        /* \"TinTinCourse/AMM/amm.sol\":5782:5788  token1 */\n      sload(0x06)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TinTinCourse/AMM/amm.sol\":5771:5788  tokenIn == token1 */\n      dup6\n      dup2\n      and\n        /* \"TinTinCourse/AMM/amm.sol\":5782:5788  token1 */\n      swap2\n      and\n        /* \"TinTinCourse/AMM/amm.sol\":5771:5788  tokenIn == token1 */\n      eq\n        /* \"TinTinCourse/AMM/amm.sol\":5750:5788  tokenIn == token0 || tokenIn == token1 */\n    tag_136:\n        /* \"TinTinCourse/AMM/amm.sol\":5742:5806  require(tokenIn == token0 || tokenIn == token1, 'INVALID_TOKEN') */\n      tag_137\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7291:7293   */\n      0x20\n        /* \"TinTinCourse/AMM/amm.sol\":5742:5806  require(tokenIn == token0 || tokenIn == token1, 'INVALID_TOKEN') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7273:7294   */\n      mstore\n        /* \"#utility.yul\":7330:7332   */\n      0x0d\n        /* \"#utility.yul\":7310:7328   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7303:7333   */\n      mstore\n      shl(0x99, 0x24a72b20a624a22faa27a5a2a7)\n        /* \"#utility.yul\":7349:7367   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7342:7385   */\n      mstore\n        /* \"#utility.yul\":7402:7420   */\n      0x64\n      add\n        /* \"TinTinCourse/AMM/amm.sol\":5742:5806  require(tokenIn == token0 || tokenIn == token1, 'INVALID_TOKEN') */\n      tag_100\n        /* \"#utility.yul\":7089:7426   */\n      jump\n        /* \"TinTinCourse/AMM/amm.sol\":5742:5806  require(tokenIn == token0 || tokenIn == token1, 'INVALID_TOKEN') */\n    tag_137:\n        /* \"TinTinCourse/AMM/amm.sol\":5843:5849  token0 */\n      sload(0x05)\n        /* \"TinTinCourse/AMM/amm.sol\":5843:5874  token0.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"TinTinCourse/AMM/amm.sol\":5868:5872  this */\n      address\n        /* \"TinTinCourse/AMM/amm.sol\":5843:5874  token0.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1950:2001   */\n      mstore\n        /* \"TinTinCourse/AMM/amm.sol\":5827:5840  uint balance0 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TinTinCourse/AMM/amm.sol\":5843:5849  token0 */\n      and\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":5843:5859  token0.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1923:1941   */\n      0x24\n      add\n        /* \"TinTinCourse/AMM/amm.sol\":5843:5874  token0.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_143\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_143:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_144\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n        /* \"TinTinCourse/AMM/amm.sol\":5901:5907  token1 */\n      sload(0x06)\n        /* \"TinTinCourse/AMM/amm.sol\":5901:5932  token1.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"TinTinCourse/AMM/amm.sol\":5926:5930  this */\n      address\n        /* \"TinTinCourse/AMM/amm.sol\":5901:5932  token1.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1950:2001   */\n      mstore\n        /* \"TinTinCourse/AMM/amm.sol\":5827:5874  uint balance0 = token0.balanceOf(address(this)) */\n      swap2\n      swap3\n      pop\n        /* \"TinTinCourse/AMM/amm.sol\":5885:5898  uint balance1 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TinTinCourse/AMM/amm.sol\":5901:5907  token1 */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":5901:5917  token1.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1923:1941   */\n      0x24\n      add\n        /* \"TinTinCourse/AMM/amm.sol\":5901:5932  token1.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_148\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_148:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_149\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_149:\n        /* \"TinTinCourse/AMM/amm.sol\":5959:5965  token0 */\n      sload(0x05)\n        /* \"TinTinCourse/AMM/amm.sol\":5885:5932  uint balance1 = token1.balanceOf(address(this)) */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TinTinCourse/AMM/amm.sol\":5959:5965  token0 */\n      swap1\n      dup2\n      and\n        /* \"TinTinCourse/AMM/amm.sol\":5948:5965  tokenIn == token0 */\n      swap1\n      dup8\n      and\n      sub\n        /* \"TinTinCourse/AMM/amm.sol\":5945:6852  if(tokenIn == token0){... */\n      tag_150\n      jumpi\n        /* \"TinTinCourse/AMM/amm.sol\":6036:6042  token1 */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n      swap3\n      pop\n        /* \"TinTinCourse/AMM/amm.sol\":6119:6161  getAmountOut(amountIn, balance0, balance1) */\n      tag_151\n        /* \"TinTinCourse/AMM/amm.sol\":6132:6140  amountIn */\n      dup8\n        /* \"TinTinCourse/AMM/amm.sol\":6142:6150  balance0 */\n      dup4\n        /* \"TinTinCourse/AMM/amm.sol\":6152:6160  balance1 */\n      dup4\n        /* \"TinTinCourse/AMM/amm.sol\":6119:6131  getAmountOut */\n      tag_26\n        /* \"TinTinCourse/AMM/amm.sol\":6119:6161  getAmountOut(amountIn, balance0, balance1) */\n      jump\t// in\n    tag_151:\n        /* \"TinTinCourse/AMM/amm.sol\":6107:6161  amountOut = getAmountOut(amountIn, balance0, balance1) */\n      swap4\n      pop\n        /* \"TinTinCourse/AMM/amm.sol\":6196:6208  amountOutMin */\n      dup5\n        /* \"TinTinCourse/AMM/amm.sol\":6184:6193  amountOut */\n      dup5\n        /* \"TinTinCourse/AMM/amm.sol\":6184:6208  amountOut > amountOutMin */\n      gt\n        /* \"TinTinCourse/AMM/amm.sol\":6176:6239  require(amountOut > amountOutMin, 'INSUFFICIENT_OUTPUT_AMOUNT') */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_135\n      jump\t// in\n    tag_152:\n        /* \"TinTinCourse/AMM/amm.sol\":6283:6340  tokenIn.transferFrom(msg.sender, address(this), amountIn) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TinTinCourse/AMM/amm.sol\":6283:6303  tokenIn.transferFrom */\n      dup8\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":6283:6340  tokenIn.transferFrom(msg.sender, address(this), amountIn) */\n      tag_154\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":6304:6314  msg.sender */\n      caller\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":6324:6328  this */\n      address\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":6331:6339  amountIn */\n      dup13\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":6283:6340  tokenIn.transferFrom(msg.sender, address(this), amountIn) */\n      0x04\n      add\n      tag_155\n      jump\t// in\n    tag_154:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_157\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_157:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_158\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      pop\n        /* \"TinTinCourse/AMM/amm.sol\":6355:6395  tokenOut.transfer(msg.sender, amountOut) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"TinTinCourse/AMM/amm.sol\":6373:6383  msg.sender */\n      caller\n        /* \"TinTinCourse/AMM/amm.sol\":6355:6395  tokenOut.transfer(msg.sender, amountOut) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8660:8711   */\n      mstore\n        /* \"#utility.yul\":8727:8745   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":8720:8754   */\n      dup6\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TinTinCourse/AMM/amm.sol\":6355:6372  tokenOut.transfer */\n      dup5\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":8633:8651   */\n      0x44\n      add\n        /* \"TinTinCourse/AMM/amm.sol\":6355:6395  tokenOut.transfer(msg.sender, amountOut) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_163\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_163:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_164\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_164:\n      pop\n        /* \"TinTinCourse/AMM/amm.sol\":5945:6852  if(tokenIn == token0){... */\n      jump(tag_165)\n    tag_150:\n        /* \"TinTinCourse/AMM/amm.sol\":6481:6487  token0 */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n      swap3\n      pop\n        /* \"TinTinCourse/AMM/amm.sol\":6564:6606  getAmountOut(amountIn, balance1, balance0) */\n      tag_166\n        /* \"TinTinCourse/AMM/amm.sol\":6577:6585  amountIn */\n      dup8\n        /* \"TinTinCourse/AMM/amm.sol\":6587:6595  balance1 */\n      dup3\n        /* \"TinTinCourse/AMM/amm.sol\":6597:6605  balance0 */\n      dup5\n        /* \"TinTinCourse/AMM/amm.sol\":6564:6576  getAmountOut */\n      tag_26\n        /* \"TinTinCourse/AMM/amm.sol\":6564:6606  getAmountOut(amountIn, balance1, balance0) */\n      jump\t// in\n    tag_166:\n        /* \"TinTinCourse/AMM/amm.sol\":6552:6606  amountOut = getAmountOut(amountIn, balance1, balance0) */\n      swap4\n      pop\n        /* \"TinTinCourse/AMM/amm.sol\":6641:6653  amountOutMin */\n      dup5\n        /* \"TinTinCourse/AMM/amm.sol\":6629:6638  amountOut */\n      dup5\n        /* \"TinTinCourse/AMM/amm.sol\":6629:6653  amountOut > amountOutMin */\n      gt\n        /* \"TinTinCourse/AMM/amm.sol\":6621:6684  require(amountOut > amountOutMin, 'INSUFFICIENT_OUTPUT_AMOUNT') */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_135\n      jump\t// in\n    tag_167:\n        /* \"TinTinCourse/AMM/amm.sol\":6728:6785  tokenIn.transferFrom(msg.sender, address(this), amountIn) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TinTinCourse/AMM/amm.sol\":6728:6748  tokenIn.transferFrom */\n      dup8\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":6728:6785  tokenIn.transferFrom(msg.sender, address(this), amountIn) */\n      tag_169\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":6749:6759  msg.sender */\n      caller\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":6769:6773  this */\n      address\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":6776:6784  amountIn */\n      dup13\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":6728:6785  tokenIn.transferFrom(msg.sender, address(this), amountIn) */\n      0x04\n      add\n      tag_155\n      jump\t// in\n    tag_169:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_171\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_171:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_172\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_172:\n      pop\n        /* \"TinTinCourse/AMM/amm.sol\":6800:6840  tokenOut.transfer(msg.sender, amountOut) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"TinTinCourse/AMM/amm.sol\":6818:6828  msg.sender */\n      caller\n        /* \"TinTinCourse/AMM/amm.sol\":6800:6840  tokenOut.transfer(msg.sender, amountOut) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8660:8711   */\n      mstore\n        /* \"#utility.yul\":8727:8745   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":8720:8754   */\n      dup6\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TinTinCourse/AMM/amm.sol\":6800:6817  tokenOut.transfer */\n      dup5\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":8633:8651   */\n      0x44\n      add\n        /* \"TinTinCourse/AMM/amm.sol\":6800:6840  tokenOut.transfer(msg.sender, amountOut) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_175\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_175:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_176\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_176:\n      pop\n        /* \"TinTinCourse/AMM/amm.sol\":5945:6852  if(tokenIn == token0){... */\n    tag_165:\n        /* \"TinTinCourse/AMM/amm.sol\":6903:6909  token0 */\n      sload(0x05)\n        /* \"TinTinCourse/AMM/amm.sol\":6903:6934  token0.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"TinTinCourse/AMM/amm.sol\":6928:6932  this */\n      address\n        /* \"TinTinCourse/AMM/amm.sol\":6903:6934  token0.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1950:2001   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TinTinCourse/AMM/amm.sol\":6903:6909  token0 */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":6903:6919  token0.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1923:1941   */\n      0x24\n      add\n        /* \"TinTinCourse/AMM/amm.sol\":6903:6934  token0.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_179\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_179:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_180\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_180:\n        /* \"TinTinCourse/AMM/amm.sol\":6892:6900  reserve0 */\n      0x07\n        /* \"TinTinCourse/AMM/amm.sol\":6892:6934  reserve0 = token0.balanceOf(address(this)) */\n      sstore\n        /* \"TinTinCourse/AMM/amm.sol\":6956:6962  token1 */\n      sload(0x06)\n        /* \"TinTinCourse/AMM/amm.sol\":6956:6987  token1.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"TinTinCourse/AMM/amm.sol\":6981:6985  this */\n      address\n        /* \"TinTinCourse/AMM/amm.sol\":6956:6987  token1.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1950:2001   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TinTinCourse/AMM/amm.sol\":6956:6962  token1 */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":6956:6972  token1.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1923:1941   */\n      0x24\n      add\n        /* \"TinTinCourse/AMM/amm.sol\":6956:6987  token1.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_183\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_183:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_184\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_184:\n        /* \"TinTinCourse/AMM/amm.sol\":6945:6953  reserve1 */\n      0x08\n        /* \"TinTinCourse/AMM/amm.sol\":6945:6987  reserve1 = token1.balanceOf(address(this)) */\n      sstore\n        /* \"TinTinCourse/AMM/amm.sol\":7005:7079  Swap(msg.sender, amountIn, address(tokenIn), amountOut, address(tokenOut)) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":8996:9021   */\n      dup9\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9057:9089   */\n      dup1\n      dup10\n      and\n        /* \"#utility.yul\":9052:9054   */\n      0x20\n        /* \"#utility.yul\":9037:9055   */\n      dup4\n      add\n        /* \"#utility.yul\":9030:9090   */\n      mstore\n        /* \"#utility.yul\":9106:9124   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":9099:9133   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":9169:9201   */\n      swap1\n      dup5\n      and\n        /* \"#utility.yul\":9164:9166   */\n      0x60\n        /* \"#utility.yul\":9149:9167   */\n      dup3\n      add\n        /* \"#utility.yul\":9142:9202   */\n      mstore\n        /* \"TinTinCourse/AMM/amm.sol\":7010:7020  msg.sender */\n      caller\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":7005:7079  Swap(msg.sender, amountIn, address(tokenIn), amountOut, address(tokenOut)) */\n      0x24043855bfbfea0ccea141e5a73d7116bf0bfe083ea900a791f4b407ff03e525\n      swap1\n        /* \"#utility.yul\":8983:8986   */\n      0x80\n        /* \"#utility.yul\":8968:8987   */\n      add\n        /* \"TinTinCourse/AMM/amm.sol\":7005:7079  Swap(msg.sender, amountIn, address(tokenIn), amountOut, address(tokenOut)) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"TinTinCourse/AMM/amm.sol\":5669:7087  {... */\n      pop\n      pop\n        /* \"TinTinCourse/AMM/amm.sol\":5555:7087  function swap(uint amountIn, IERC20 tokenIn, uint amountOutMin) external returns (uint amountOut, IERC20 tokenOut){... */\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n        /* \"TinTinCourse/AMM/amm.sol\":3805:4729  function removeLiquidity(uint liquidity) external returns (uint amount0, uint amount1) {... */\n    tag_78:\n        /* \"TinTinCourse/AMM/amm.sol\":3944:3950  token0 */\n      sload(0x05)\n        /* \"TinTinCourse/AMM/amm.sol\":3944:3975  token0.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"TinTinCourse/AMM/amm.sol\":3969:3973  this */\n      address\n        /* \"TinTinCourse/AMM/amm.sol\":3944:3975  token0.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1950:2001   */\n      mstore\n        /* \"TinTinCourse/AMM/amm.sol\":3864:3876  uint amount0 */\n      0x00\n      swap2\n      dup3\n      swap2\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TinTinCourse/AMM/amm.sol\":3944:3950  token0 */\n      and\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":3944:3960  token0.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1923:1941   */\n      0x24\n      add\n        /* \"TinTinCourse/AMM/amm.sol\":3944:3975  token0.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_197\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_197:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_198\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_198:\n        /* \"TinTinCourse/AMM/amm.sol\":4002:4008  token1 */\n      sload(0x06)\n        /* \"TinTinCourse/AMM/amm.sol\":4002:4033  token1.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"TinTinCourse/AMM/amm.sol\":4027:4031  this */\n      address\n        /* \"TinTinCourse/AMM/amm.sol\":4002:4033  token1.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1950:2001   */\n      mstore\n        /* \"TinTinCourse/AMM/amm.sol\":3928:3975  uint balance0 = token0.balanceOf(address(this)) */\n      swap2\n      swap3\n      pop\n        /* \"TinTinCourse/AMM/amm.sol\":3986:3999  uint balance1 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TinTinCourse/AMM/amm.sol\":4002:4008  token1 */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":4002:4018  token1.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1923:1941   */\n      0x24\n      add\n        /* \"TinTinCourse/AMM/amm.sol\":4002:4033  token1.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_201\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_201:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_202\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_202:\n        /* \"TinTinCourse/AMM/amm.sol\":3986:4033  uint balance1 = token1.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"TinTinCourse/AMM/amm.sol\":4101:4118  uint _totalSupply */\n      0x00\n        /* \"TinTinCourse/AMM/amm.sol\":4121:4134  totalSupply() */\n      tag_203\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      jump\n        /* \"TinTinCourse/AMM/amm.sol\":4121:4134  totalSupply() */\n    tag_203:\n        /* \"TinTinCourse/AMM/amm.sol\":4101:4134  uint _totalSupply = totalSupply() */\n      swap1\n      pop\n      dup1\n        /* \"TinTinCourse/AMM/amm.sol\":4155:4175  liquidity * balance0 */\n      tag_204\n        /* \"TinTinCourse/AMM/amm.sol\":4167:4175  balance0 */\n      dup5\n        /* \"TinTinCourse/AMM/amm.sol\":4155:4164  liquidity */\n      dup9\n        /* \"TinTinCourse/AMM/amm.sol\":4155:4175  liquidity * balance0 */\n      tag_109\n      jump\t// in\n    tag_204:\n        /* \"TinTinCourse/AMM/amm.sol\":4155:4190  liquidity * balance0 / _totalSupply */\n      tag_205\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_205:\n        /* \"TinTinCourse/AMM/amm.sol\":4145:4190  amount0 = liquidity * balance0 / _totalSupply */\n      swap5\n      pop\n        /* \"TinTinCourse/AMM/amm.sol\":4234:4246  _totalSupply */\n      dup1\n        /* \"TinTinCourse/AMM/amm.sol\":4211:4231  liquidity * balance1 */\n      tag_206\n        /* \"TinTinCourse/AMM/amm.sol\":4223:4231  balance1 */\n      dup4\n        /* \"TinTinCourse/AMM/amm.sol\":4211:4220  liquidity */\n      dup9\n        /* \"TinTinCourse/AMM/amm.sol\":4211:4231  liquidity * balance1 */\n      tag_109\n      jump\t// in\n    tag_206:\n        /* \"TinTinCourse/AMM/amm.sol\":4211:4246  liquidity * balance1 / _totalSupply */\n      tag_207\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_207:\n        /* \"TinTinCourse/AMM/amm.sol\":4201:4246  amount1 = liquidity * balance1 / _totalSupply */\n      swap4\n      pop\n        /* \"TinTinCourse/AMM/amm.sol\":4306:4307  0 */\n      0x00\n        /* \"TinTinCourse/AMM/amm.sol\":4296:4303  amount0 */\n      dup6\n        /* \"TinTinCourse/AMM/amm.sol\":4296:4307  amount0 > 0 */\n      gt\n        /* \"TinTinCourse/AMM/amm.sol\":4296:4322  amount0 > 0 && amount1 > 0 */\n      dup1\n      iszero\n      tag_208\n      jumpi\n      pop\n        /* \"TinTinCourse/AMM/amm.sol\":4321:4322  0 */\n      0x00\n        /* \"TinTinCourse/AMM/amm.sol\":4311:4318  amount1 */\n      dup5\n        /* \"TinTinCourse/AMM/amm.sol\":4311:4322  amount1 > 0 */\n      gt\n        /* \"TinTinCourse/AMM/amm.sol\":4296:4322  amount0 > 0 && amount1 > 0 */\n    tag_208:\n        /* \"TinTinCourse/AMM/amm.sol\":4288:4356  require(amount0 > 0 && amount1 > 0, 'INSUFFICIENT_LIQUIDITY_BURNED') */\n      tag_209\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9415:9417   */\n      0x20\n        /* \"TinTinCourse/AMM/amm.sol\":4288:4356  require(amount0 > 0 && amount1 > 0, 'INSUFFICIENT_LIQUIDITY_BURNED') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9397:9418   */\n      mstore\n        /* \"#utility.yul\":9454:9456   */\n      0x1d\n        /* \"#utility.yul\":9434:9452   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9427:9457   */\n      mstore\n        /* \"#utility.yul\":9493:9524   */\n      0x494e53554646494349454e545f4c49515549444954595f4255524e4544000000\n        /* \"#utility.yul\":9473:9491   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9466:9525   */\n      mstore\n        /* \"#utility.yul\":9542:9560   */\n      0x64\n      add\n        /* \"TinTinCourse/AMM/amm.sol\":4288:4356  require(amount0 > 0 && amount1 > 0, 'INSUFFICIENT_LIQUIDITY_BURNED') */\n      tag_100\n        /* \"#utility.yul\":9213:9566   */\n      jump\n        /* \"TinTinCourse/AMM/amm.sol\":4288:4356  require(amount0 > 0 && amount1 > 0, 'INSUFFICIENT_LIQUIDITY_BURNED') */\n    tag_209:\n        /* \"TinTinCourse/AMM/amm.sol\":4388:4416  _burn(msg.sender, liquidity) */\n      tag_212\n        /* \"TinTinCourse/AMM/amm.sol\":4394:4404  msg.sender */\n      caller\n        /* \"TinTinCourse/AMM/amm.sol\":4406:4415  liquidity */\n      dup8\n        /* \"TinTinCourse/AMM/amm.sol\":4388:4393  _burn */\n      tag_213\n        /* \"TinTinCourse/AMM/amm.sol\":4388:4416  _burn(msg.sender, liquidity) */\n      jump\t// in\n    tag_212:\n        /* \"TinTinCourse/AMM/amm.sol\":4452:4458  token0 */\n      sload(0x05)\n        /* \"TinTinCourse/AMM/amm.sol\":4452:4488  token0.transfer(msg.sender, amount0) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"TinTinCourse/AMM/amm.sol\":4468:4478  msg.sender */\n      caller\n        /* \"TinTinCourse/AMM/amm.sol\":4452:4488  token0.transfer(msg.sender, amount0) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8660:8711   */\n      mstore\n        /* \"#utility.yul\":8727:8745   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":8720:8754   */\n      dup8\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TinTinCourse/AMM/amm.sol\":4452:4458  token0 */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":4452:4467  token0.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":8633:8651   */\n      0x44\n      add\n        /* \"TinTinCourse/AMM/amm.sol\":4452:4488  token0.transfer(msg.sender, amount0) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_216\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_216:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_217\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_217:\n      pop\n        /* \"TinTinCourse/AMM/amm.sol\":4499:4505  token1 */\n      sload(0x06)\n        /* \"TinTinCourse/AMM/amm.sol\":4499:4535  token1.transfer(msg.sender, amount1) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"TinTinCourse/AMM/amm.sol\":4515:4525  msg.sender */\n      caller\n        /* \"TinTinCourse/AMM/amm.sol\":4499:4535  token1.transfer(msg.sender, amount1) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8660:8711   */\n      mstore\n        /* \"#utility.yul\":8727:8745   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":8720:8754   */\n      dup7\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TinTinCourse/AMM/amm.sol\":4499:4505  token1 */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":4499:4514  token1.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":8633:8651   */\n      0x44\n      add\n        /* \"TinTinCourse/AMM/amm.sol\":4499:4535  token1.transfer(msg.sender, amount1) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_220\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_220:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_221\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_221:\n      pop\n        /* \"TinTinCourse/AMM/amm.sol\":4585:4591  token0 */\n      sload(0x05)\n        /* \"TinTinCourse/AMM/amm.sol\":4585:4616  token0.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"TinTinCourse/AMM/amm.sol\":4610:4614  this */\n      address\n        /* \"TinTinCourse/AMM/amm.sol\":4585:4616  token0.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1950:2001   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TinTinCourse/AMM/amm.sol\":4585:4591  token0 */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":4585:4601  token0.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1923:1941   */\n      0x24\n      add\n        /* \"TinTinCourse/AMM/amm.sol\":4585:4616  token0.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_224\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_224:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_225\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_225:\n        /* \"TinTinCourse/AMM/amm.sol\":4574:4582  reserve0 */\n      0x07\n        /* \"TinTinCourse/AMM/amm.sol\":4574:4616  reserve0 = token0.balanceOf(address(this)) */\n      sstore\n        /* \"TinTinCourse/AMM/amm.sol\":4638:4644  token1 */\n      sload(0x06)\n        /* \"TinTinCourse/AMM/amm.sol\":4638:4669  token1.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"TinTinCourse/AMM/amm.sol\":4663:4667  this */\n      address\n        /* \"TinTinCourse/AMM/amm.sol\":4638:4669  token1.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1950:2001   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TinTinCourse/AMM/amm.sol\":4638:4644  token1 */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":4638:4654  token1.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1923:1941   */\n      0x24\n      add\n        /* \"TinTinCourse/AMM/amm.sol\":4638:4669  token1.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_228\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_228:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_229\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_229:\n        /* \"TinTinCourse/AMM/amm.sol\":4627:4635  reserve1 */\n      0x08\n        /* \"TinTinCourse/AMM/amm.sol\":4627:4669  reserve1 = token1.balanceOf(address(this)) */\n      sstore\n        /* \"TinTinCourse/AMM/amm.sol\":4687:4721  Burn(msg.sender, amount0, amount1) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4170:4195   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":4226:4228   */\n      0x20\n        /* \"#utility.yul\":4211:4229   */\n      dup2\n      add\n        /* \"#utility.yul\":4204:4238   */\n      dup7\n      swap1\n      mstore\n        /* \"TinTinCourse/AMM/amm.sol\":4692:4702  msg.sender */\n      caller\n      swap2\n        /* \"TinTinCourse/AMM/amm.sol\":4687:4721  Burn(msg.sender, amount0, amount1) */\n      0x49995e5dd6158cf69ad3e9777c46755a1a826a446c6416992167462dad033b2a\n      swap2\n        /* \"#utility.yul\":4143:4161   */\n      add\n        /* \"TinTinCourse/AMM/amm.sol\":4687:4721  Burn(msg.sender, amount0, amount1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"TinTinCourse/AMM/amm.sol\":3892:4729  {... */\n      pop\n      pop\n      pop\n        /* \"TinTinCourse/AMM/amm.sol\":3805:4729  function removeLiquidity(uint liquidity) external returns (uint amount0, uint amount1) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"TinTinCourse/AMM/amm.sol\":2299:3635  function addLiquidity(uint amount0Desired, uint amount1Desired) public returns(uint liquidity){... */\n    tag_84:\n        /* \"TinTinCourse/AMM/amm.sol\":2485:2491  token0 */\n      sload(0x05)\n        /* \"TinTinCourse/AMM/amm.sol\":2485:2547  token0.transferFrom(msg.sender, address(this), amount0Desired) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"TinTinCourse/AMM/amm.sol\":2378:2392  uint liquidity */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TinTinCourse/AMM/amm.sol\":2485:2491  token0 */\n      and\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":2485:2504  token0.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":2485:2547  token0.transferFrom(msg.sender, address(this), amount0Desired) */\n      tag_232\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":2505:2515  msg.sender */\n      caller\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":2525:2529  this */\n      address\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":2532:2546  amount0Desired */\n      dup9\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":2485:2547  token0.transferFrom(msg.sender, address(this), amount0Desired) */\n      0x04\n      add\n      tag_155\n      jump\t// in\n    tag_232:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_234\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_234:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_235\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_235:\n      pop\n        /* \"TinTinCourse/AMM/amm.sol\":2558:2564  token1 */\n      sload(0x06)\n        /* \"TinTinCourse/AMM/amm.sol\":2558:2620  token1.transferFrom(msg.sender, address(this), amount1Desired) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TinTinCourse/AMM/amm.sol\":2558:2564  token1 */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":2558:2577  token1.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":2558:2620  token1.transferFrom(msg.sender, address(this), amount1Desired) */\n      tag_236\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":2578:2588  msg.sender */\n      caller\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":2598:2602  this */\n      address\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":2605:2619  amount1Desired */\n      dup8\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":2558:2620  token1.transferFrom(msg.sender, address(this), amount1Desired) */\n      0x04\n      add\n      tag_155\n      jump\t// in\n    tag_236:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_238\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_238:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_239\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_239:\n      pop\n        /* \"TinTinCourse/AMM/amm.sol\":2668:2685  uint _totalSupply */\n      0x00\n        /* \"TinTinCourse/AMM/amm.sol\":2688:2701  totalSupply() */\n      tag_240\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      jump\n        /* \"TinTinCourse/AMM/amm.sol\":2688:2701  totalSupply() */\n    tag_240:\n        /* \"TinTinCourse/AMM/amm.sol\":2668:2701  uint _totalSupply = totalSupply() */\n      swap1\n      pop\n        /* \"TinTinCourse/AMM/amm.sol\":2716:2728  _totalSupply */\n      dup1\n        /* \"TinTinCourse/AMM/amm.sol\":2732:2733  0 */\n      0x00\n        /* \"TinTinCourse/AMM/amm.sol\":2716:2733  _totalSupply == 0 */\n      sub\n        /* \"TinTinCourse/AMM/amm.sol\":2712:3192  if (_totalSupply == 0) {... */\n      tag_241\n      jumpi\n        /* \"TinTinCourse/AMM/amm.sol\":2879:2916  sqrt(amount0Desired * amount1Desired) */\n      tag_242\n        /* \"TinTinCourse/AMM/amm.sol\":2884:2915  amount0Desired * amount1Desired */\n      tag_243\n        /* \"TinTinCourse/AMM/amm.sol\":2901:2915  amount1Desired */\n      dup5\n        /* \"TinTinCourse/AMM/amm.sol\":2884:2898  amount0Desired */\n      dup7\n        /* \"TinTinCourse/AMM/amm.sol\":2884:2915  amount0Desired * amount1Desired */\n      tag_109\n      jump\t// in\n    tag_243:\n        /* \"TinTinCourse/AMM/amm.sol\":2879:2883  sqrt */\n      tag_244\n        /* \"TinTinCourse/AMM/amm.sol\":2879:2916  sqrt(amount0Desired * amount1Desired) */\n      jump\t// in\n    tag_242:\n        /* \"TinTinCourse/AMM/amm.sol\":2867:2916  liquidity = sqrt(amount0Desired * amount1Desired) */\n      swap2\n      pop\n        /* \"TinTinCourse/AMM/amm.sol\":2712:3192  if (_totalSupply == 0) {... */\n      jump(tag_245)\n    tag_241:\n        /* \"TinTinCourse/AMM/amm.sol\":3130:3138  reserve0 */\n      sload(0x07)\n        /* \"TinTinCourse/AMM/amm.sol\":3094:3180  min(amount0Desired * _totalSupply / reserve0, amount1Desired * _totalSupply /reserve1) */\n      tag_246\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":3098:3127  amount0Desired * _totalSupply */\n      tag_247\n        /* \"TinTinCourse/AMM/amm.sol\":3115:3127  _totalSupply */\n      dup4\n        /* \"TinTinCourse/AMM/amm.sol\":3098:3112  amount0Desired */\n      dup8\n        /* \"TinTinCourse/AMM/amm.sol\":3098:3127  amount0Desired * _totalSupply */\n      tag_109\n      jump\t// in\n    tag_247:\n        /* \"TinTinCourse/AMM/amm.sol\":3098:3138  amount0Desired * _totalSupply / reserve0 */\n      tag_248\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_248:\n        /* \"TinTinCourse/AMM/amm.sol\":3171:3179  reserve1 */\n      sload(0x08)\n        /* \"TinTinCourse/AMM/amm.sol\":3140:3169  amount1Desired * _totalSupply */\n      tag_249\n        /* \"TinTinCourse/AMM/amm.sol\":3157:3169  _totalSupply */\n      dup5\n        /* \"TinTinCourse/AMM/amm.sol\":3140:3154  amount1Desired */\n      dup8\n        /* \"TinTinCourse/AMM/amm.sol\":3140:3169  amount1Desired * _totalSupply */\n      tag_109\n      jump\t// in\n    tag_249:\n        /* \"TinTinCourse/AMM/amm.sol\":3140:3179  amount1Desired * _totalSupply /reserve1 */\n      tag_250\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_250:\n        /* \"TinTinCourse/AMM/amm.sol\":3094:3097  min */\n      tag_251\n        /* \"TinTinCourse/AMM/amm.sol\":3094:3180  min(amount0Desired * _totalSupply / reserve0, amount1Desired * _totalSupply /reserve1) */\n      jump\t// in\n    tag_246:\n        /* \"TinTinCourse/AMM/amm.sol\":3082:3180  liquidity = min(amount0Desired * _totalSupply / reserve0, amount1Desired * _totalSupply /reserve1) */\n      swap2\n      pop\n        /* \"TinTinCourse/AMM/amm.sol\":2712:3192  if (_totalSupply == 0) {... */\n    tag_245:\n        /* \"TinTinCourse/AMM/amm.sol\":3260:3261  0 */\n      0x00\n        /* \"TinTinCourse/AMM/amm.sol\":3248:3257  liquidity */\n      dup3\n        /* \"TinTinCourse/AMM/amm.sol\":3248:3261  liquidity > 0 */\n      gt\n        /* \"TinTinCourse/AMM/amm.sol\":3240:3295  require(liquidity > 0, 'INSUFFICIENT_LIQUIDITY_MINTED') */\n      tag_252\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9773:9775   */\n      0x20\n        /* \"TinTinCourse/AMM/amm.sol\":3240:3295  require(liquidity > 0, 'INSUFFICIENT_LIQUIDITY_MINTED') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9755:9776   */\n      mstore\n        /* \"#utility.yul\":9812:9814   */\n      0x1d\n        /* \"#utility.yul\":9792:9810   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9785:9815   */\n      mstore\n        /* \"#utility.yul\":9851:9882   */\n      0x494e53554646494349454e545f4c49515549444954595f4d494e544544000000\n        /* \"#utility.yul\":9831:9849   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9824:9883   */\n      mstore\n        /* \"#utility.yul\":9900:9918   */\n      0x64\n      add\n        /* \"TinTinCourse/AMM/amm.sol\":3240:3295  require(liquidity > 0, 'INSUFFICIENT_LIQUIDITY_MINTED') */\n      tag_100\n        /* \"#utility.yul\":9571:9924   */\n      jump\n        /* \"TinTinCourse/AMM/amm.sol\":3240:3295  require(liquidity > 0, 'INSUFFICIENT_LIQUIDITY_MINTED') */\n    tag_252:\n        /* \"TinTinCourse/AMM/amm.sol\":3347:3353  token0 */\n      sload(0x05)\n        /* \"TinTinCourse/AMM/amm.sol\":3347:3378  token0.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"TinTinCourse/AMM/amm.sol\":3372:3376  this */\n      address\n        /* \"TinTinCourse/AMM/amm.sol\":3347:3378  token0.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1950:2001   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TinTinCourse/AMM/amm.sol\":3347:3353  token0 */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":3347:3363  token0.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1923:1941   */\n      0x24\n      add\n        /* \"TinTinCourse/AMM/amm.sol\":3347:3378  token0.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_257\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_257:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_258\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_258:\n        /* \"TinTinCourse/AMM/amm.sol\":3336:3344  reserve0 */\n      0x07\n        /* \"TinTinCourse/AMM/amm.sol\":3336:3378  reserve0 = token0.balanceOf(address(this)) */\n      sstore\n        /* \"TinTinCourse/AMM/amm.sol\":3400:3406  token1 */\n      sload(0x06)\n        /* \"TinTinCourse/AMM/amm.sol\":3400:3431  token1.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"TinTinCourse/AMM/amm.sol\":3425:3429  this */\n      address\n        /* \"TinTinCourse/AMM/amm.sol\":3400:3431  token1.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1950:2001   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"TinTinCourse/AMM/amm.sol\":3400:3406  token1 */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":3400:3416  token1.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1923:1941   */\n      0x24\n      add\n        /* \"TinTinCourse/AMM/amm.sol\":3400:3431  token1.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_261\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_261:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_262\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_262:\n        /* \"TinTinCourse/AMM/amm.sol\":3389:3397  reserve1 */\n      0x08\n        /* \"TinTinCourse/AMM/amm.sol\":3389:3431  reserve1 = token1.balanceOf(address(this)) */\n      sstore\n        /* \"TinTinCourse/AMM/amm.sol\":3525:3553  _mint(msg.sender, liquidity) */\n      tag_263\n        /* \"TinTinCourse/AMM/amm.sol\":3531:3541  msg.sender */\n      caller\n        /* \"TinTinCourse/AMM/amm.sol\":3543:3552  liquidity */\n      dup4\n        /* \"TinTinCourse/AMM/amm.sol\":3525:3530  _mint */\n      tag_264\n        /* \"TinTinCourse/AMM/amm.sol\":3525:3553  _mint(msg.sender, liquidity) */\n      jump\t// in\n    tag_263:\n        /* \"TinTinCourse/AMM/amm.sol\":3579:3627  Mint(msg.sender, amount0Desired, amount1Desired) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4170:4195   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":4226:4228   */\n      0x20\n        /* \"#utility.yul\":4211:4229   */\n      dup2\n      add\n        /* \"#utility.yul\":4204:4238   */\n      dup6\n      swap1\n      mstore\n        /* \"TinTinCourse/AMM/amm.sol\":3584:3594  msg.sender */\n      caller\n      swap2\n        /* \"TinTinCourse/AMM/amm.sol\":3579:3627  Mint(msg.sender, amount0Desired, amount1Desired) */\n      0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\n      swap2\n        /* \"#utility.yul\":4143:4161   */\n      add\n        /* \"TinTinCourse/AMM/amm.sol\":3579:3627  Mint(msg.sender, amount0Desired, amount1Desired) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"TinTinCourse/AMM/amm.sol\":2393:3635  {... */\n      pop\n        /* \"TinTinCourse/AMM/amm.sol\":2299:3635  function addLiquidity(uint amount0Desired, uint amount1Desired) public returns(uint liquidity){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_122\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_272\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_273\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_280\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10149:10181   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10131:10182   */\n      mstore\n        /* \"#utility.yul\":10198:10216   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":10191:10225   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":10241:10259   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":10234:10268   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":10104:10122   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_100\n        /* \"#utility.yul\":9929:10274   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_280\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_273\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_280:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_282\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1950:2001   */\n      mstore\n        /* \"#utility.yul\":1923:1941   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      tag_100\n        /* \"#utility.yul\":1790:2007   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_282:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_284\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1950:2001   */\n      mstore\n        /* \"#utility.yul\":1923:1941   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      tag_100\n        /* \"#utility.yul\":1790:2007   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_272\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_287\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_213:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_289\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1950:2001   */\n      mstore\n        /* \"#utility.yul\":1923:1941   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      tag_100\n        /* \"#utility.yul\":1790:2007   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_291\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_287\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n    tag_291:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"TinTinCourse/AMM/amm.sol\":1659:1962  function sqrt(uint y) internal pure returns (uint z) {... */\n    tag_244:\n        /* \"TinTinCourse/AMM/amm.sol\":1704:1710  uint z */\n      0x00\n        /* \"TinTinCourse/AMM/amm.sol\":1731:1732  3 */\n      0x03\n        /* \"TinTinCourse/AMM/amm.sol\":1727:1728  y */\n      dup3\n        /* \"TinTinCourse/AMM/amm.sol\":1727:1732  y > 3 */\n      gt\n        /* \"TinTinCourse/AMM/amm.sol\":1723:1955  if (y > 3) {... */\n      iszero\n      tag_293\n      jumpi\n      pop\n        /* \"TinTinCourse/AMM/amm.sol\":1753:1754  y */\n      dup1\n        /* \"TinTinCourse/AMM/amm.sol\":1769:1775  uint x */\n      0x00\n        /* \"TinTinCourse/AMM/amm.sol\":1778:1783  y / 2 */\n      tag_294\n        /* \"TinTinCourse/AMM/amm.sol\":1782:1783  2 */\n      0x02\n        /* \"TinTinCourse/AMM/amm.sol\":1753:1754  y */\n      dup4\n        /* \"TinTinCourse/AMM/amm.sol\":1778:1783  y / 2 */\n      tag_111\n      jump\t// in\n    tag_294:\n        /* \"TinTinCourse/AMM/amm.sol\":1778:1787  y / 2 + 1 */\n      tag_295\n      swap1\n        /* \"TinTinCourse/AMM/amm.sol\":1786:1787  1 */\n      0x01\n        /* \"TinTinCourse/AMM/amm.sol\":1778:1787  y / 2 + 1 */\n      tag_107\n      jump\t// in\n    tag_295:\n        /* \"TinTinCourse/AMM/amm.sol\":1769:1787  uint x = y / 2 + 1 */\n      swap1\n      pop\n        /* \"TinTinCourse/AMM/amm.sol\":1802:1894  while (x < z) {... */\n    tag_296:\n        /* \"TinTinCourse/AMM/amm.sol\":1813:1814  z */\n      dup2\n        /* \"TinTinCourse/AMM/amm.sol\":1809:1810  x */\n      dup2\n        /* \"TinTinCourse/AMM/amm.sol\":1809:1814  x < z */\n      lt\n        /* \"TinTinCourse/AMM/amm.sol\":1802:1894  while (x < z) {... */\n      iszero\n      tag_297\n      jumpi\n        /* \"TinTinCourse/AMM/amm.sol\":1839:1840  x */\n      swap1\n      pop\n      dup1\n        /* \"TinTinCourse/AMM/amm.sol\":1877:1878  2 */\n      0x02\n        /* \"TinTinCourse/AMM/amm.sol\":1839:1840  x */\n      dup2\n        /* \"TinTinCourse/AMM/amm.sol\":1864:1869  y / x */\n      tag_298\n        /* \"TinTinCourse/AMM/amm.sol\":1839:1840  x */\n      dup2\n        /* \"TinTinCourse/AMM/amm.sol\":1864:1865  y */\n      dup7\n        /* \"TinTinCourse/AMM/amm.sol\":1864:1869  y / x */\n      tag_111\n      jump\t// in\n    tag_298:\n        /* \"TinTinCourse/AMM/amm.sol\":1864:1873  y / x + x */\n      tag_299\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_299:\n        /* \"TinTinCourse/AMM/amm.sol\":1863:1878  (y / x + x) / 2 */\n      tag_300\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_300:\n        /* \"TinTinCourse/AMM/amm.sol\":1859:1878  x = (y / x + x) / 2 */\n      swap1\n      pop\n        /* \"TinTinCourse/AMM/amm.sol\":1802:1894  while (x < z) {... */\n      jump(tag_296)\n    tag_297:\n        /* \"TinTinCourse/AMM/amm.sol\":1734:1905  {... */\n      pop\n        /* \"TinTinCourse/AMM/amm.sol\":1659:1962  function sqrt(uint y) internal pure returns (uint z) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"TinTinCourse/AMM/amm.sol\":1723:1955  if (y > 3) {... */\n    tag_293:\n        /* \"TinTinCourse/AMM/amm.sol\":1915:1921  y != 0 */\n      dup2\n      iszero\n        /* \"TinTinCourse/AMM/amm.sol\":1911:1955  if (y != 0) {... */\n      tag_302\n      jumpi\n      pop\n        /* \"TinTinCourse/AMM/amm.sol\":1942:1943  1 */\n      0x01\n        /* \"TinTinCourse/AMM/amm.sol\":1911:1955  if (y != 0) {... */\n    tag_302:\n        /* \"TinTinCourse/AMM/amm.sol\":1659:1962  function sqrt(uint y) internal pure returns (uint z) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"TinTinCourse/AMM/amm.sol\":1429:1525  function min(uint x, uint y) internal pure returns (uint z) {... */\n    tag_251:\n        /* \"TinTinCourse/AMM/amm.sol\":1481:1487  uint z */\n      0x00\n        /* \"TinTinCourse/AMM/amm.sol\":1508:1509  y */\n      dup2\n        /* \"TinTinCourse/AMM/amm.sol\":1504:1505  x */\n      dup4\n        /* \"TinTinCourse/AMM/amm.sol\":1504:1509  x < y */\n      lt\n        /* \"TinTinCourse/AMM/amm.sol\":1504:1517  x < y ? x : y */\n      tag_304\n      jumpi\n        /* \"TinTinCourse/AMM/amm.sol\":1516:1517  y */\n      dup2\n        /* \"TinTinCourse/AMM/amm.sol\":1504:1517  x < y ? x : y */\n      jump(tag_305)\n    tag_304:\n        /* \"TinTinCourse/AMM/amm.sol\":1512:1513  x */\n      dup3\n        /* \"TinTinCourse/AMM/amm.sol\":1504:1517  x < y ? x : y */\n    tag_305:\n        /* \"TinTinCourse/AMM/amm.sol\":1500:1517  z = x < y ? x : y */\n      swap4\n        /* \"TinTinCourse/AMM/amm.sol\":1429:1525  function min(uint x, uint y) internal pure returns (uint z) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_264:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_307\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1950:2001   */\n      mstore\n        /* \"#utility.yul\":1923:1941   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      tag_100\n        /* \"#utility.yul\":1790:2007   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_307:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_291\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_287\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_273:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_311\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1950:2001   */\n      mstore\n        /* \"#utility.yul\":1923:1941   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      tag_100\n        /* \"#utility.yul\":1790:2007   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_311:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_313\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1950:2001   */\n      mstore\n        /* \"#utility.yul\":1923:1941   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      tag_100\n        /* \"#utility.yul\":1790:2007   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_313:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_280\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_316\n      swap2\n        /* \"#utility.yul\":631:656   */\n      dup2\n      mstore\n        /* \"#utility.yul\":619:621   */\n      0x20\n        /* \"#utility.yul\":604:622   */\n      add\n      swap1\n        /* \"#utility.yul\":485:662   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n    tag_316:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_287:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_318\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_319\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_319:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_320\n      swap1\n      pop\n      jump\n    tag_318:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_321\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10149:10181   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10131:10182   */\n      mstore\n        /* \"#utility.yul\":10198:10216   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":10191:10225   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":10241:10259   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":10234:10268   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":10104:10122   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_100\n        /* \"#utility.yul\":9929:10274   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_321:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_320:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_323\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_324)\n    tag_323:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_324:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_325\n      swap2\n        /* \"#utility.yul\":631:656   */\n      dup2\n      mstore\n        /* \"#utility.yul\":619:621   */\n      0x20\n        /* \"#utility.yul\":604:622   */\n      add\n      swap1\n        /* \"#utility.yul\":485:662   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n    tag_325:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:480   */\n    tag_25:\n        /* \"#utility.yul\":91:97   */\n      0x00\n        /* \"#utility.yul\":99:105   */\n      0x00\n        /* \"#utility.yul\":107:113   */\n      0x00\n        /* \"#utility.yul\":160:162   */\n      0x60\n        /* \"#utility.yul\":148:157   */\n      dup5\n        /* \"#utility.yul\":139:146   */\n      dup7\n        /* \"#utility.yul\":135:158   */\n      sub\n        /* \"#utility.yul\":131:163   */\n      slt\n        /* \"#utility.yul\":128:180   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":176:177   */\n      0x00\n        /* \"#utility.yul\":173:174   */\n      0x00\n        /* \"#utility.yul\":166:178   */\n      revert\n        /* \"#utility.yul\":128:180   */\n    tag_330:\n      pop\n      pop\n        /* \"#utility.yul\":221:244   */\n      dup2\n      calldataload\n      swap4\n        /* \"#utility.yul\":341:343   */\n      0x20\n        /* \"#utility.yul\":326:344   */\n      dup4\n      add\n        /* \"#utility.yul\":313:345   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":444:446   */\n      0x40\n        /* \"#utility.yul\":429:447   */\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":416:448   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:480   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":667:1085   */\n    tag_32:\n        /* \"#utility.yul\":816:818   */\n      0x20\n        /* \"#utility.yul\":805:814   */\n      dup2\n        /* \"#utility.yul\":798:819   */\n      mstore\n        /* \"#utility.yul\":779:783   */\n      0x00\n        /* \"#utility.yul\":848:854   */\n      dup3\n        /* \"#utility.yul\":842:855   */\n      mload\n        /* \"#utility.yul\":891:897   */\n      dup1\n        /* \"#utility.yul\":886:888   */\n      0x20\n        /* \"#utility.yul\":875:884   */\n      dup5\n        /* \"#utility.yul\":871:889   */\n      add\n        /* \"#utility.yul\":864:898   */\n      mstore\n        /* \"#utility.yul\":950:956   */\n      dup1\n        /* \"#utility.yul\":945:947   */\n      0x20\n        /* \"#utility.yul\":937:943   */\n      dup6\n        /* \"#utility.yul\":933:948   */\n      add\n        /* \"#utility.yul\":928:930   */\n      0x40\n        /* \"#utility.yul\":917:926   */\n      dup6\n        /* \"#utility.yul\":913:931   */\n      add\n        /* \"#utility.yul\":907:957   */\n      mcopy\n        /* \"#utility.yul\":1006:1007   */\n      0x00\n        /* \"#utility.yul\":1001:1003   */\n      0x40\n        /* \"#utility.yul\":992:998   */\n      dup3\n        /* \"#utility.yul\":981:990   */\n      dup6\n        /* \"#utility.yul\":977:999   */\n      add\n        /* \"#utility.yul\":973:1004   */\n      add\n        /* \"#utility.yul\":966:1008   */\n      mstore\n        /* \"#utility.yul\":1076:1078   */\n      0x40\n        /* \"#utility.yul\":1069:1071   */\n      0x1f\n        /* \"#utility.yul\":1065:1072   */\n      not\n        /* \"#utility.yul\":1060:1062   */\n      0x1f\n        /* \"#utility.yul\":1052:1058   */\n      dup4\n        /* \"#utility.yul\":1048:1063   */\n      add\n        /* \"#utility.yul\":1044:1073   */\n      and\n        /* \"#utility.yul\":1033:1042   */\n      dup5\n        /* \"#utility.yul\":1029:1074   */\n      add\n        /* \"#utility.yul\":1025:1079   */\n      add\n        /* \"#utility.yul\":1017:1079   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":667:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1090:1221   */\n    tag_326:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1165:1196   */\n      dup2\n      and\n        /* \"#utility.yul\":1155:1197   */\n      dup2\n      eq\n        /* \"#utility.yul\":1145:1215   */\n      tag_334\n      jumpi\n        /* \"#utility.yul\":1211:1212   */\n      0x00\n        /* \"#utility.yul\":1208:1209   */\n      0x00\n        /* \"#utility.yul\":1201:1213   */\n      revert\n        /* \"#utility.yul\":1145:1215   */\n    tag_334:\n        /* \"#utility.yul\":1090:1221   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1226:1593   */\n    tag_35:\n        /* \"#utility.yul\":1294:1300   */\n      0x00\n        /* \"#utility.yul\":1302:1308   */\n      0x00\n        /* \"#utility.yul\":1355:1357   */\n      0x40\n        /* \"#utility.yul\":1343:1352   */\n      dup4\n        /* \"#utility.yul\":1334:1341   */\n      dup6\n        /* \"#utility.yul\":1330:1353   */\n      sub\n        /* \"#utility.yul\":1326:1358   */\n      slt\n        /* \"#utility.yul\":1323:1375   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":1371:1372   */\n      0x00\n        /* \"#utility.yul\":1368:1369   */\n      0x00\n        /* \"#utility.yul\":1361:1373   */\n      revert\n        /* \"#utility.yul\":1323:1375   */\n    tag_336:\n        /* \"#utility.yul\":1410:1419   */\n      dup3\n        /* \"#utility.yul\":1397:1420   */\n      calldataload\n        /* \"#utility.yul\":1429:1460   */\n      tag_337\n        /* \"#utility.yul\":1454:1459   */\n      dup2\n        /* \"#utility.yul\":1429:1460   */\n      tag_326\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":1479:1484   */\n      swap5\n        /* \"#utility.yul\":1557:1559   */\n      0x20\n        /* \"#utility.yul\":1542:1560   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1529:1561   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1226:1593   */\n      jump\t// out\n        /* \"#utility.yul\":2012:2520   */\n    tag_48:\n        /* \"#utility.yul\":2089:2095   */\n      0x00\n        /* \"#utility.yul\":2097:2103   */\n      0x00\n        /* \"#utility.yul\":2105:2111   */\n      0x00\n        /* \"#utility.yul\":2158:2160   */\n      0x60\n        /* \"#utility.yul\":2146:2155   */\n      dup5\n        /* \"#utility.yul\":2137:2144   */\n      dup7\n        /* \"#utility.yul\":2133:2156   */\n      sub\n        /* \"#utility.yul\":2129:2161   */\n      slt\n        /* \"#utility.yul\":2126:2178   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":2174:2175   */\n      0x00\n        /* \"#utility.yul\":2171:2172   */\n      0x00\n        /* \"#utility.yul\":2164:2176   */\n      revert\n        /* \"#utility.yul\":2126:2178   */\n    tag_341:\n        /* \"#utility.yul\":2213:2222   */\n      dup4\n        /* \"#utility.yul\":2200:2223   */\n      calldataload\n        /* \"#utility.yul\":2232:2263   */\n      tag_342\n        /* \"#utility.yul\":2257:2262   */\n      dup2\n        /* \"#utility.yul\":2232:2263   */\n      tag_326\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":2282:2287   */\n      swap3\n      pop\n        /* \"#utility.yul\":2339:2341   */\n      0x20\n        /* \"#utility.yul\":2324:2342   */\n      dup5\n      add\n        /* \"#utility.yul\":2311:2343   */\n      calldataload\n        /* \"#utility.yul\":2352:2385   */\n      tag_343\n        /* \"#utility.yul\":2311:2343   */\n      dup2\n        /* \"#utility.yul\":2352:2385   */\n      tag_326\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":2012:2520   */\n      swap3\n      swap6\n        /* \"#utility.yul\":2404:2411   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2484:2486   */\n      0x40\n        /* \"#utility.yul\":2469:2487   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2456:2488   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":2012:2520   */\n      jump\t// out\n        /* \"#utility.yul\":2714:3215   */\n    tag_57:\n        /* \"#utility.yul\":2805:2811   */\n      0x00\n        /* \"#utility.yul\":2813:2819   */\n      0x00\n        /* \"#utility.yul\":2821:2827   */\n      0x00\n        /* \"#utility.yul\":2874:2876   */\n      0x60\n        /* \"#utility.yul\":2862:2871   */\n      dup5\n        /* \"#utility.yul\":2853:2860   */\n      dup7\n        /* \"#utility.yul\":2849:2872   */\n      sub\n        /* \"#utility.yul\":2845:2877   */\n      slt\n        /* \"#utility.yul\":2842:2894   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":2890:2891   */\n      0x00\n        /* \"#utility.yul\":2887:2888   */\n      0x00\n        /* \"#utility.yul\":2880:2892   */\n      revert\n        /* \"#utility.yul\":2842:2894   */\n    tag_346:\n        /* \"#utility.yul\":2935:2958   */\n      dup4\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":3034:3036   */\n      0x20\n        /* \"#utility.yul\":3019:3037   */\n      dup5\n      add\n        /* \"#utility.yul\":3006:3038   */\n      calldataload\n        /* \"#utility.yul\":3047:3080   */\n      tag_343\n        /* \"#utility.yul\":3006:3038   */\n      dup2\n        /* \"#utility.yul\":3047:3080   */\n      tag_326\n      jump\t// in\n        /* \"#utility.yul\":3513:3760   */\n    tag_69:\n        /* \"#utility.yul\":3572:3578   */\n      0x00\n        /* \"#utility.yul\":3625:3627   */\n      0x20\n        /* \"#utility.yul\":3613:3622   */\n      dup3\n        /* \"#utility.yul\":3604:3611   */\n      dup5\n        /* \"#utility.yul\":3600:3623   */\n      sub\n        /* \"#utility.yul\":3596:3628   */\n      slt\n        /* \"#utility.yul\":3593:3645   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":3641:3642   */\n      0x00\n        /* \"#utility.yul\":3638:3639   */\n      0x00\n        /* \"#utility.yul\":3631:3643   */\n      revert\n        /* \"#utility.yul\":3593:3645   */\n    tag_350:\n        /* \"#utility.yul\":3680:3689   */\n      dup2\n        /* \"#utility.yul\":3667:3690   */\n      calldataload\n        /* \"#utility.yul\":3699:3730   */\n      tag_305\n        /* \"#utility.yul\":3724:3729   */\n      dup2\n        /* \"#utility.yul\":3699:3730   */\n      tag_326\n      jump\t// in\n        /* \"#utility.yul\":3765:3991   */\n    tag_77:\n        /* \"#utility.yul\":3824:3830   */\n      0x00\n        /* \"#utility.yul\":3877:3879   */\n      0x20\n        /* \"#utility.yul\":3865:3874   */\n      dup3\n        /* \"#utility.yul\":3856:3863   */\n      dup5\n        /* \"#utility.yul\":3852:3875   */\n      sub\n        /* \"#utility.yul\":3848:3880   */\n      slt\n        /* \"#utility.yul\":3845:3897   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":3893:3894   */\n      0x00\n        /* \"#utility.yul\":3890:3891   */\n      0x00\n        /* \"#utility.yul\":3883:3895   */\n      revert\n        /* \"#utility.yul\":3845:3897   */\n    tag_353:\n      pop\n        /* \"#utility.yul\":3938:3961   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3765:3991   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4249:4595   */\n    tag_83:\n        /* \"#utility.yul\":4317:4323   */\n      0x00\n        /* \"#utility.yul\":4325:4331   */\n      0x00\n        /* \"#utility.yul\":4378:4380   */\n      0x40\n        /* \"#utility.yul\":4366:4375   */\n      dup4\n        /* \"#utility.yul\":4357:4364   */\n      dup6\n        /* \"#utility.yul\":4353:4376   */\n      sub\n        /* \"#utility.yul\":4349:4381   */\n      slt\n        /* \"#utility.yul\":4346:4398   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":4394:4395   */\n      0x00\n        /* \"#utility.yul\":4391:4392   */\n      0x00\n        /* \"#utility.yul\":4384:4396   */\n      revert\n        /* \"#utility.yul\":4346:4398   */\n    tag_356:\n      pop\n      pop\n        /* \"#utility.yul\":4439:4462   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":4559:4561   */\n      0x20\n        /* \"#utility.yul\":4544:4562   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":4531:4563   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":4249:4595   */\n      jump\t// out\n        /* \"#utility.yul\":4600:4988   */\n    tag_95:\n        /* \"#utility.yul\":4668:4674   */\n      0x00\n        /* \"#utility.yul\":4676:4682   */\n      0x00\n        /* \"#utility.yul\":4729:4731   */\n      0x40\n        /* \"#utility.yul\":4717:4726   */\n      dup4\n        /* \"#utility.yul\":4708:4715   */\n      dup6\n        /* \"#utility.yul\":4704:4727   */\n      sub\n        /* \"#utility.yul\":4700:4732   */\n      slt\n        /* \"#utility.yul\":4697:4749   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":4745:4746   */\n      0x00\n        /* \"#utility.yul\":4742:4743   */\n      0x00\n        /* \"#utility.yul\":4735:4747   */\n      revert\n        /* \"#utility.yul\":4697:4749   */\n    tag_358:\n        /* \"#utility.yul\":4784:4793   */\n      dup3\n        /* \"#utility.yul\":4771:4794   */\n      calldataload\n        /* \"#utility.yul\":4803:4834   */\n      tag_359\n        /* \"#utility.yul\":4828:4833   */\n      dup2\n        /* \"#utility.yul\":4803:4834   */\n      tag_326\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":4853:4858   */\n      swap2\n      pop\n        /* \"#utility.yul\":4910:4912   */\n      0x20\n        /* \"#utility.yul\":4895:4913   */\n      dup4\n      add\n        /* \"#utility.yul\":4882:4914   */\n      calldataload\n        /* \"#utility.yul\":4923:4956   */\n      tag_360\n        /* \"#utility.yul\":4882:4914   */\n      dup2\n        /* \"#utility.yul\":4923:4956   */\n      tag_326\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":4975:4982   */\n      dup1\n        /* \"#utility.yul\":4965:4982   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4600:4988   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5692:5819   */\n    tag_327:\n        /* \"#utility.yul\":5753:5763   */\n      0x4e487b71\n        /* \"#utility.yul\":5748:5751   */\n      0xe0\n        /* \"#utility.yul\":5744:5764   */\n      shl\n        /* \"#utility.yul\":5741:5742   */\n      0x00\n        /* \"#utility.yul\":5734:5765   */\n      mstore\n        /* \"#utility.yul\":5784:5788   */\n      0x11\n        /* \"#utility.yul\":5781:5782   */\n      0x04\n        /* \"#utility.yul\":5774:5789   */\n      mstore\n        /* \"#utility.yul\":5808:5812   */\n      0x24\n        /* \"#utility.yul\":5805:5806   */\n      0x00\n        /* \"#utility.yul\":5798:5813   */\n      revert\n        /* \"#utility.yul\":5824:5949   */\n    tag_107:\n        /* \"#utility.yul\":5889:5898   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5910:5920   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5907:5943   */\n      iszero\n      tag_119\n      jumpi\n        /* \"#utility.yul\":5923:5941   */\n      tag_119\n      tag_327\n      jump\t// in\n        /* \"#utility.yul\":5954:6122   */\n    tag_109:\n        /* \"#utility.yul\":6027:6036   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":6058:6067   */\n      dup2\n      iszero\n        /* \"#utility.yul\":6075:6090   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":6069:6091   */\n      dup5\n      eq\n        /* \"#utility.yul\":6055:6092   */\n      or\n        /* \"#utility.yul\":6045:6116   */\n      tag_119\n      jumpi\n        /* \"#utility.yul\":6096:6114   */\n      tag_119\n      tag_327\n      jump\t// in\n        /* \"#utility.yul\":6127:6344   */\n    tag_111:\n        /* \"#utility.yul\":6167:6168   */\n      0x00\n        /* \"#utility.yul\":6193:6194   */\n      dup3\n        /* \"#utility.yul\":6183:6315   */\n      tag_371\n      jumpi\n        /* \"#utility.yul\":6237:6247   */\n      0x4e487b71\n        /* \"#utility.yul\":6232:6235   */\n      0xe0\n        /* \"#utility.yul\":6228:6248   */\n      shl\n        /* \"#utility.yul\":6225:6226   */\n      0x00\n        /* \"#utility.yul\":6218:6249   */\n      mstore\n        /* \"#utility.yul\":6272:6276   */\n      0x12\n        /* \"#utility.yul\":6269:6270   */\n      0x04\n        /* \"#utility.yul\":6262:6277   */\n      mstore\n        /* \"#utility.yul\":6300:6304   */\n      0x24\n        /* \"#utility.yul\":6297:6298   */\n      0x00\n        /* \"#utility.yul\":6290:6305   */\n      revert\n        /* \"#utility.yul\":6183:6315   */\n    tag_371:\n      pop\n        /* \"#utility.yul\":6329:6338   */\n      div\n      swap1\n        /* \"#utility.yul\":6127:6344   */\n      jump\t// out\n        /* \"#utility.yul\":6349:6729   */\n    tag_114:\n        /* \"#utility.yul\":6428:6429   */\n      0x01\n        /* \"#utility.yul\":6424:6436   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":6471:6483   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":6492:6553   */\n      tag_373\n      jumpi\n        /* \"#utility.yul\":6546:6550   */\n      0x7f\n        /* \"#utility.yul\":6538:6544   */\n      dup3\n        /* \"#utility.yul\":6534:6551   */\n      and\n        /* \"#utility.yul\":6524:6551   */\n      swap2\n      pop\n        /* \"#utility.yul\":6492:6553   */\n    tag_373:\n        /* \"#utility.yul\":6599:6601   */\n      0x20\n        /* \"#utility.yul\":6591:6597   */\n      dup3\n        /* \"#utility.yul\":6588:6602   */\n      lt\n        /* \"#utility.yul\":6568:6586   */\n      dup2\n        /* \"#utility.yul\":6565:6603   */\n      sub\n        /* \"#utility.yul\":6562:6723   */\n      tag_297\n      jumpi\n        /* \"#utility.yul\":6645:6655   */\n      0x4e487b71\n        /* \"#utility.yul\":6640:6643   */\n      0xe0\n        /* \"#utility.yul\":6636:6656   */\n      shl\n        /* \"#utility.yul\":6633:6634   */\n      0x00\n        /* \"#utility.yul\":6626:6657   */\n      mstore\n        /* \"#utility.yul\":6680:6684   */\n      0x22\n        /* \"#utility.yul\":6677:6678   */\n      0x04\n        /* \"#utility.yul\":6670:6685   */\n      mstore\n        /* \"#utility.yul\":6708:6712   */\n      0x24\n        /* \"#utility.yul\":6705:6706   */\n      0x00\n        /* \"#utility.yul\":6698:6713   */\n      revert\n        /* \"#utility.yul\":6734:7084   */\n    tag_135:\n        /* \"#utility.yul\":6936:6938   */\n      0x20\n        /* \"#utility.yul\":6918:6939   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6975:6977   */\n      0x1a\n        /* \"#utility.yul\":6955:6973   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6948:6978   */\n      mstore\n        /* \"#utility.yul\":7014:7042   */\n      0x494e53554646494349454e545f4f55545055545f414d4f554e54000000000000\n        /* \"#utility.yul\":7009:7011   */\n      0x40\n        /* \"#utility.yul\":6994:7012   */\n      dup3\n      add\n        /* \"#utility.yul\":6987:7043   */\n      mstore\n        /* \"#utility.yul\":7075:7077   */\n      0x60\n        /* \"#utility.yul\":7060:7078   */\n      add\n      swap1\n        /* \"#utility.yul\":6734:7084   */\n      jump\t// out\n        /* \"#utility.yul\":7639:7823   */\n    tag_145:\n        /* \"#utility.yul\":7709:7715   */\n      0x00\n        /* \"#utility.yul\":7762:7764   */\n      0x20\n        /* \"#utility.yul\":7750:7759   */\n      dup3\n        /* \"#utility.yul\":7741:7748   */\n      dup5\n        /* \"#utility.yul\":7737:7760   */\n      sub\n        /* \"#utility.yul\":7733:7765   */\n      slt\n        /* \"#utility.yul\":7730:7782   */\n      iszero\n      tag_379\n      jumpi\n        /* \"#utility.yul\":7778:7779   */\n      0x00\n        /* \"#utility.yul\":7775:7776   */\n      0x00\n        /* \"#utility.yul\":7768:7780   */\n      revert\n        /* \"#utility.yul\":7730:7782   */\n    tag_379:\n      pop\n        /* \"#utility.yul\":7801:7817   */\n      mload\n      swap2\n        /* \"#utility.yul\":7639:7823   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7828:8199   */\n    tag_155:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8048:8080   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":8030:8081   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8117:8149   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":8112:8114   */\n      0x20\n        /* \"#utility.yul\":8097:8115   */\n      dup3\n      add\n        /* \"#utility.yul\":8090:8150   */\n      mstore\n        /* \"#utility.yul\":8181:8183   */\n      0x40\n        /* \"#utility.yul\":8166:8184   */\n      dup2\n      add\n        /* \"#utility.yul\":8159:8193   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":8018:8020   */\n      0x60\n        /* \"#utility.yul\":8003:8021   */\n      add\n      swap1\n        /* \"#utility.yul\":7828:8199   */\n      jump\t// out\n        /* \"#utility.yul\":8204:8481   */\n    tag_159:\n        /* \"#utility.yul\":8271:8277   */\n      0x00\n        /* \"#utility.yul\":8324:8326   */\n      0x20\n        /* \"#utility.yul\":8312:8321   */\n      dup3\n        /* \"#utility.yul\":8303:8310   */\n      dup5\n        /* \"#utility.yul\":8299:8322   */\n      sub\n        /* \"#utility.yul\":8295:8327   */\n      slt\n        /* \"#utility.yul\":8292:8344   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":8340:8341   */\n      0x00\n        /* \"#utility.yul\":8337:8338   */\n      0x00\n        /* \"#utility.yul\":8330:8342   */\n      revert\n        /* \"#utility.yul\":8292:8344   */\n    tag_382:\n        /* \"#utility.yul\":8372:8381   */\n      dup2\n        /* \"#utility.yul\":8366:8382   */\n      mload\n        /* \"#utility.yul\":8425:8430   */\n      dup1\n        /* \"#utility.yul\":8418:8431   */\n      iszero\n        /* \"#utility.yul\":8411:8432   */\n      iszero\n        /* \"#utility.yul\":8404:8409   */\n      dup2\n        /* \"#utility.yul\":8401:8433   */\n      eq\n        /* \"#utility.yul\":8391:8451   */\n      tag_305\n      jumpi\n        /* \"#utility.yul\":8447:8448   */\n      0x00\n        /* \"#utility.yul\":8444:8445   */\n      0x00\n        /* \"#utility.yul\":8437:8449   */\n      revert\n\n    auxdata: 0xa264697066735822122072c8ca44da9b9415eaac567ca24e1061546afef935c7b424d196eaf8bdc0ada464736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_850": {
									"entryPoint": null,
									"id": 850,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_contract_IERC20_fromMemory": {
									"entryPoint": 192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$729t_contract$_IERC20_$729_fromMemory": {
									"entryPoint": 219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 344,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 268,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3184:6",
										"nodeType": "YulBlock",
										"src": "0:3184:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "82:117:6",
													"nodeType": "YulBlock",
													"src": "82:117:6",
													"statements": [
														{
															"nativeSrc": "92:22:6",
															"nodeType": "YulAssignment",
															"src": "92:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "107:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "107:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "101:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "101:5:6"
																},
																"nativeSrc": "101:13:6",
																"nodeType": "YulFunctionCall",
																"src": "101:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "92:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "92:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "177:16:6",
																"nodeType": "YulBlock",
																"src": "177:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "186:1:6",
																					"nodeType": "YulLiteral",
																					"src": "186:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "189:1:6",
																					"nodeType": "YulLiteral",
																					"src": "189:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "179:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "179:6:6"
																			},
																			"nativeSrc": "179:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "179:12:6"
																		},
																		"nativeSrc": "179:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "179:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "136:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "136:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "147:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "147:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "162:3:6",
																										"nodeType": "YulLiteral",
																										"src": "162:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "167:1:6",
																										"nodeType": "YulLiteral",
																										"src": "167:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "158:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "158:3:6"
																								},
																								"nativeSrc": "158:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "158:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "171:1:6",
																								"nodeType": "YulLiteral",
																								"src": "171:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "154:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "154:3:6"
																						},
																						"nativeSrc": "154:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "154:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "143:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "143:3:6"
																				},
																				"nativeSrc": "143:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "143:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "133:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "133:2:6"
																		},
																		"nativeSrc": "133:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "133:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "126:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "126:6:6"
																},
																"nativeSrc": "126:50:6",
																"nodeType": "YulFunctionCall",
																"src": "126:50:6"
															},
															"nativeSrc": "123:70:6",
															"nodeType": "YulIf",
															"src": "123:70:6"
														}
													]
												},
												"name": "abi_decode_contract_IERC20_fromMemory",
												"nativeSrc": "14:185:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "61:6:6",
														"nodeType": "YulTypedName",
														"src": "61:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "72:5:6",
														"nodeType": "YulTypedName",
														"src": "72:5:6",
														"type": ""
													}
												],
												"src": "14:185:6"
											},
											{
												"body": {
													"nativeSrc": "330:211:6",
													"nodeType": "YulBlock",
													"src": "330:211:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "376:16:6",
																"nodeType": "YulBlock",
																"src": "376:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "385:1:6",
																					"nodeType": "YulLiteral",
																					"src": "385:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "388:1:6",
																					"nodeType": "YulLiteral",
																					"src": "388:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "378:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "378:6:6"
																			},
																			"nativeSrc": "378:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "378:12:6"
																		},
																		"nativeSrc": "378:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "378:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "351:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "351:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "360:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "360:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "347:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "347:3:6"
																		},
																		"nativeSrc": "347:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "347:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "372:2:6",
																		"nodeType": "YulLiteral",
																		"src": "372:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "343:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "343:3:6"
																},
																"nativeSrc": "343:32:6",
																"nodeType": "YulFunctionCall",
																"src": "343:32:6"
															},
															"nativeSrc": "340:52:6",
															"nodeType": "YulIf",
															"src": "340:52:6"
														},
														{
															"nativeSrc": "401:58:6",
															"nodeType": "YulAssignment",
															"src": "401:58:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "449:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "449:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_contract_IERC20_fromMemory",
																	"nativeSrc": "411:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "411:37:6"
																},
																"nativeSrc": "411:48:6",
																"nodeType": "YulFunctionCall",
																"src": "411:48:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "401:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "401:6:6"
																}
															]
														},
														{
															"nativeSrc": "468:67:6",
															"nodeType": "YulAssignment",
															"src": "468:67:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "520:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "520:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "531:2:6",
																				"nodeType": "YulLiteral",
																				"src": "531:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "516:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "516:3:6"
																		},
																		"nativeSrc": "516:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "516:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_contract_IERC20_fromMemory",
																	"nativeSrc": "478:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "478:37:6"
																},
																"nativeSrc": "478:57:6",
																"nodeType": "YulFunctionCall",
																"src": "478:57:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "468:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "468:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$729t_contract$_IERC20_$729_fromMemory",
												"nativeSrc": "204:337:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "288:9:6",
														"nodeType": "YulTypedName",
														"src": "288:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "299:7:6",
														"nodeType": "YulTypedName",
														"src": "299:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "311:6:6",
														"nodeType": "YulTypedName",
														"src": "311:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "319:6:6",
														"nodeType": "YulTypedName",
														"src": "319:6:6",
														"type": ""
													}
												],
												"src": "204:337:6"
											},
											{
												"body": {
													"nativeSrc": "578:95:6",
													"nodeType": "YulBlock",
													"src": "578:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "595:1:6",
																		"nodeType": "YulLiteral",
																		"src": "595:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "602:3:6",
																				"nodeType": "YulLiteral",
																				"src": "602:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "607:10:6",
																				"nodeType": "YulLiteral",
																				"src": "607:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "598:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "598:3:6"
																		},
																		"nativeSrc": "598:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "598:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "588:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "588:6:6"
																},
																"nativeSrc": "588:31:6",
																"nodeType": "YulFunctionCall",
																"src": "588:31:6"
															},
															"nativeSrc": "588:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "588:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "635:1:6",
																		"nodeType": "YulLiteral",
																		"src": "635:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "638:4:6",
																		"nodeType": "YulLiteral",
																		"src": "638:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "628:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "628:6:6"
																},
																"nativeSrc": "628:15:6",
																"nodeType": "YulFunctionCall",
																"src": "628:15:6"
															},
															"nativeSrc": "628:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "628:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "659:1:6",
																		"nodeType": "YulLiteral",
																		"src": "659:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "662:4:6",
																		"nodeType": "YulLiteral",
																		"src": "662:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "652:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "652:6:6"
																},
																"nativeSrc": "652:15:6",
																"nodeType": "YulFunctionCall",
																"src": "652:15:6"
															},
															"nativeSrc": "652:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "652:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "546:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "546:127:6"
											},
											{
												"body": {
													"nativeSrc": "733:325:6",
													"nodeType": "YulBlock",
													"src": "733:325:6",
													"statements": [
														{
															"nativeSrc": "743:22:6",
															"nodeType": "YulAssignment",
															"src": "743:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "757:1:6",
																		"nodeType": "YulLiteral",
																		"src": "757:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "760:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "760:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "753:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "753:3:6"
																},
																"nativeSrc": "753:12:6",
																"nodeType": "YulFunctionCall",
																"src": "753:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "743:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "743:6:6"
																}
															]
														},
														{
															"nativeSrc": "774:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "774:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "804:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "804:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "810:1:6",
																		"nodeType": "YulLiteral",
																		"src": "810:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "800:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "800:3:6"
																},
																"nativeSrc": "800:12:6",
																"nodeType": "YulFunctionCall",
																"src": "800:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "778:18:6",
																	"nodeType": "YulTypedName",
																	"src": "778:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "851:31:6",
																"nodeType": "YulBlock",
																"src": "851:31:6",
																"statements": [
																	{
																		"nativeSrc": "853:27:6",
																		"nodeType": "YulAssignment",
																		"src": "853:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "867:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "867:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "875:4:6",
																					"nodeType": "YulLiteral",
																					"src": "875:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "863:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "863:3:6"
																			},
																			"nativeSrc": "863:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "863:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "853:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "853:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "831:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "831:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "824:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "824:6:6"
																},
																"nativeSrc": "824:26:6",
																"nodeType": "YulFunctionCall",
																"src": "824:26:6"
															},
															"nativeSrc": "821:61:6",
															"nodeType": "YulIf",
															"src": "821:61:6"
														},
														{
															"body": {
																"nativeSrc": "941:111:6",
																"nodeType": "YulBlock",
																"src": "941:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "962:1:6",
																					"nodeType": "YulLiteral",
																					"src": "962:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "969:3:6",
																							"nodeType": "YulLiteral",
																							"src": "969:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "974:10:6",
																							"nodeType": "YulLiteral",
																							"src": "974:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "965:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "965:3:6"
																					},
																					"nativeSrc": "965:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "965:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "955:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "955:6:6"
																			},
																			"nativeSrc": "955:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "955:31:6"
																		},
																		"nativeSrc": "955:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1006:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1006:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1009:4:6",
																					"nodeType": "YulLiteral",
																					"src": "1009:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "999:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "999:6:6"
																			},
																			"nativeSrc": "999:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "999:15:6"
																		},
																		"nativeSrc": "999:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "999:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1034:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1034:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1037:4:6",
																					"nodeType": "YulLiteral",
																					"src": "1037:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1027:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1027:6:6"
																			},
																			"nativeSrc": "1027:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1027:15:6"
																		},
																		"nativeSrc": "1027:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1027:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "897:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "897:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "920:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "920:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "928:2:6",
																				"nodeType": "YulLiteral",
																				"src": "928:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "917:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "917:2:6"
																		},
																		"nativeSrc": "917:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "917:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "894:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "894:2:6"
																},
																"nativeSrc": "894:38:6",
																"nodeType": "YulFunctionCall",
																"src": "894:38:6"
															},
															"nativeSrc": "891:161:6",
															"nodeType": "YulIf",
															"src": "891:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "678:380:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "713:4:6",
														"nodeType": "YulTypedName",
														"src": "713:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "722:6:6",
														"nodeType": "YulTypedName",
														"src": "722:6:6",
														"type": ""
													}
												],
												"src": "678:380:6"
											},
											{
												"body": {
													"nativeSrc": "1119:65:6",
													"nodeType": "YulBlock",
													"src": "1119:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1136:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1136:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1139:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1139:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1129:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1129:6:6"
																},
																"nativeSrc": "1129:14:6",
																"nodeType": "YulFunctionCall",
																"src": "1129:14:6"
															},
															"nativeSrc": "1129:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "1129:14:6"
														},
														{
															"nativeSrc": "1152:26:6",
															"nodeType": "YulAssignment",
															"src": "1152:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1170:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1170:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1173:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1173:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1160:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "1160:9:6"
																},
																"nativeSrc": "1160:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1160:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1152:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1152:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1063:121:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1102:3:6",
														"nodeType": "YulTypedName",
														"src": "1102:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1110:4:6",
														"nodeType": "YulTypedName",
														"src": "1110:4:6",
														"type": ""
													}
												],
												"src": "1063:121:6"
											},
											{
												"body": {
													"nativeSrc": "1270:437:6",
													"nodeType": "YulBlock",
													"src": "1270:437:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1303:398:6",
																"nodeType": "YulBlock",
																"src": "1303:398:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1324:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1324:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1327:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "1327:5:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1317:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1317:6:6"
																			},
																			"nativeSrc": "1317:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1317:16:6"
																		},
																		"nativeSrc": "1317:16:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1317:16:6"
																	},
																	{
																		"nativeSrc": "1346:30:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1346:30:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1368:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1368:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1371:4:6",
																					"nodeType": "YulLiteral",
																					"src": "1371:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1358:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1358:9:6"
																			},
																			"nativeSrc": "1358:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1358:18:6"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1350:4:6",
																				"nodeType": "YulTypedName",
																				"src": "1350:4:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1389:57:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1389:57:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1412:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "1412:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1422:1:6",
																							"nodeType": "YulLiteral",
																							"src": "1422:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1429:10:6",
																									"nodeType": "YulIdentifier",
																									"src": "1429:10:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1441:2:6",
																									"nodeType": "YulLiteral",
																									"src": "1441:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1425:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "1425:3:6"
																							},
																							"nativeSrc": "1425:19:6",
																							"nodeType": "YulFunctionCall",
																							"src": "1425:19:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1418:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "1418:3:6"
																					},
																					"nativeSrc": "1418:27:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1418:27:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1408:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1408:3:6"
																			},
																			"nativeSrc": "1408:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1408:38:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1393:11:6",
																				"nodeType": "YulTypedName",
																				"src": "1393:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1483:23:6",
																			"nodeType": "YulBlock",
																			"src": "1483:23:6",
																			"statements": [
																				{
																					"nativeSrc": "1485:19:6",
																					"nodeType": "YulAssignment",
																					"src": "1485:19:6",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1500:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "1500:4:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1485:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "1485:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1465:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "1465:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1477:4:6",
																					"nodeType": "YulLiteral",
																					"src": "1477:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1462:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "1462:2:6"
																			},
																			"nativeSrc": "1462:20:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1462:20:6"
																		},
																		"nativeSrc": "1459:47:6",
																		"nodeType": "YulIf",
																		"src": "1459:47:6"
																	},
																	{
																		"nativeSrc": "1519:41:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1519:41:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1533:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "1533:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1543:1:6",
																							"nodeType": "YulLiteral",
																							"src": "1543:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1550:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "1550:3:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1555:2:6",
																									"nodeType": "YulLiteral",
																									"src": "1555:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1546:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "1546:3:6"
																							},
																							"nativeSrc": "1546:12:6",
																							"nodeType": "YulFunctionCall",
																							"src": "1546:12:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1539:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "1539:3:6"
																					},
																					"nativeSrc": "1539:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1539:20:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1529:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1529:3:6"
																			},
																			"nativeSrc": "1529:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1529:31:6"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1523:2:6",
																				"nodeType": "YulTypedName",
																				"src": "1523:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1573:24:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1573:24:6",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1586:11:6",
																			"nodeType": "YulIdentifier",
																			"src": "1586:11:6"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1577:5:6",
																				"nodeType": "YulTypedName",
																				"src": "1577:5:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1671:20:6",
																			"nodeType": "YulBlock",
																			"src": "1671:20:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1680:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "1680:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1687:1:6",
																								"nodeType": "YulLiteral",
																								"src": "1687:1:6",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1673:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "1673:6:6"
																						},
																						"nativeSrc": "1673:16:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1673:16:6"
																					},
																					"nativeSrc": "1673:16:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "1673:16:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1621:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "1621:5:6"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1628:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "1628:2:6"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1618:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "1618:2:6"
																			},
																			"nativeSrc": "1618:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1618:13:6"
																		},
																		"nativeSrc": "1610:81:6",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1632:26:6",
																			"nodeType": "YulBlock",
																			"src": "1632:26:6",
																			"statements": [
																				{
																					"nativeSrc": "1634:22:6",
																					"nodeType": "YulAssignment",
																					"src": "1634:22:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1647:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "1647:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1654:1:6",
																								"nodeType": "YulLiteral",
																								"src": "1654:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1643:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1643:3:6"
																						},
																						"nativeSrc": "1643:13:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1643:13:6"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1634:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "1634:5:6"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1614:3:6",
																			"nodeType": "YulBlock",
																			"src": "1614:3:6",
																			"statements": []
																		},
																		"src": "1610:81:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1286:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1286:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1291:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1291:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1283:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1283:2:6"
																},
																"nativeSrc": "1283:11:6",
																"nodeType": "YulFunctionCall",
																"src": "1283:11:6"
															},
															"nativeSrc": "1280:421:6",
															"nodeType": "YulIf",
															"src": "1280:421:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "1189:518:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1242:5:6",
														"nodeType": "YulTypedName",
														"src": "1242:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1249:3:6",
														"nodeType": "YulTypedName",
														"src": "1249:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1254:10:6",
														"nodeType": "YulTypedName",
														"src": "1254:10:6",
														"type": ""
													}
												],
												"src": "1189:518:6"
											},
											{
												"body": {
													"nativeSrc": "1797:81:6",
													"nodeType": "YulBlock",
													"src": "1797:81:6",
													"statements": [
														{
															"nativeSrc": "1807:65:6",
															"nodeType": "YulAssignment",
															"src": "1807:65:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1822:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1822:4:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1840:1:6",
																										"nodeType": "YulLiteral",
																										"src": "1840:1:6",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1843:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "1843:3:6"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1836:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "1836:3:6"
																								},
																								"nativeSrc": "1836:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "1836:11:6"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1853:1:6",
																										"nodeType": "YulLiteral",
																										"src": "1853:1:6",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1849:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "1849:3:6"
																								},
																								"nativeSrc": "1849:6:6",
																								"nodeType": "YulFunctionCall",
																								"src": "1849:6:6"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1832:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1832:3:6"
																						},
																						"nativeSrc": "1832:24:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1832:24:6"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1828:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1828:3:6"
																				},
																				"nativeSrc": "1828:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1828:29:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1818:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1818:3:6"
																		},
																		"nativeSrc": "1818:40:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:40:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1864:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1864:1:6",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1867:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1867:3:6"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1860:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1860:3:6"
																		},
																		"nativeSrc": "1860:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1860:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1815:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1815:2:6"
																},
																"nativeSrc": "1815:57:6",
																"nodeType": "YulFunctionCall",
																"src": "1815:57:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1807:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1807:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1712:166:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1774:4:6",
														"nodeType": "YulTypedName",
														"src": "1774:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1780:3:6",
														"nodeType": "YulTypedName",
														"src": "1780:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1788:4:6",
														"nodeType": "YulTypedName",
														"src": "1788:4:6",
														"type": ""
													}
												],
												"src": "1712:166:6"
											},
											{
												"body": {
													"nativeSrc": "1979:1203:6",
													"nodeType": "YulBlock",
													"src": "1979:1203:6",
													"statements": [
														{
															"nativeSrc": "1989:24:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1989:24:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2009:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2009:3:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2003:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2003:5:6"
																},
																"nativeSrc": "2003:10:6",
																"nodeType": "YulFunctionCall",
																"src": "2003:10:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1993:6:6",
																	"nodeType": "YulTypedName",
																	"src": "1993:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2056:22:6",
																"nodeType": "YulBlock",
																"src": "2056:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2058:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "2058:16:6"
																			},
																			"nativeSrc": "2058:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2058:18:6"
																		},
																		"nativeSrc": "2058:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2058:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2028:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2028:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2044:2:6",
																						"nodeType": "YulLiteral",
																						"src": "2044:2:6",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2048:1:6",
																						"nodeType": "YulLiteral",
																						"src": "2048:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2040:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2040:3:6"
																				},
																				"nativeSrc": "2040:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2040:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2052:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2052:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2036:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2036:3:6"
																		},
																		"nativeSrc": "2036:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2036:18:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2025:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2025:2:6"
																},
																"nativeSrc": "2025:30:6",
																"nodeType": "YulFunctionCall",
																"src": "2025:30:6"
															},
															"nativeSrc": "2022:56:6",
															"nodeType": "YulIf",
															"src": "2022:56:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2131:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2131:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2169:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "2169:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2163:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2163:5:6"
																				},
																				"nativeSrc": "2163:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2163:11:6"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "2137:25:6",
																			"nodeType": "YulIdentifier",
																			"src": "2137:25:6"
																		},
																		"nativeSrc": "2137:38:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2137:38:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2177:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2177:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2087:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2087:43:6"
																},
																"nativeSrc": "2087:97:6",
																"nodeType": "YulFunctionCall",
																"src": "2087:97:6"
															},
															"nativeSrc": "2087:97:6",
															"nodeType": "YulExpressionStatement",
															"src": "2087:97:6"
														},
														{
															"nativeSrc": "2193:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2193:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "2210:1:6",
																"nodeType": "YulLiteral",
																"src": "2210:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2197:9:6",
																	"nodeType": "YulTypedName",
																	"src": "2197:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2220:17:6",
															"nodeType": "YulAssignment",
															"src": "2220:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "2233:4:6",
																"nodeType": "YulLiteral",
																"src": "2233:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2220:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2220:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2283:642:6",
																		"nodeType": "YulBlock",
																		"src": "2283:642:6",
																		"statements": [
																			{
																				"nativeSrc": "2297:35:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2297:35:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2316:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "2316:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2328:2:6",
																									"nodeType": "YulLiteral",
																									"src": "2328:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2324:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "2324:3:6"
																							},
																							"nativeSrc": "2324:7:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2324:7:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2312:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2312:3:6"
																					},
																					"nativeSrc": "2312:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2312:20:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2301:7:6",
																						"nodeType": "YulTypedName",
																						"src": "2301:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2345:49:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2345:49:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2389:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "2389:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2359:29:6",
																						"nodeType": "YulIdentifier",
																						"src": "2359:29:6"
																					},
																					"nativeSrc": "2359:35:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2359:35:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2349:6:6",
																						"nodeType": "YulTypedName",
																						"src": "2349:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2407:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2407:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2416:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2416:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2411:1:6",
																						"nodeType": "YulTypedName",
																						"src": "2411:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2487:165:6",
																					"nodeType": "YulBlock",
																					"src": "2487:165:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2512:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "2512:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2530:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "2530:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2535:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "2535:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2526:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "2526:3:6"
																												},
																												"nativeSrc": "2526:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "2526:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2520:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "2520:5:6"
																										},
																										"nativeSrc": "2520:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "2520:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2505:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "2505:6:6"
																								},
																								"nativeSrc": "2505:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2505:42:6"
																							},
																							"nativeSrc": "2505:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "2505:42:6"
																						},
																						{
																							"nativeSrc": "2564:24:6",
																							"nodeType": "YulAssignment",
																							"src": "2564:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2578:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "2578:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2586:1:6",
																										"nodeType": "YulLiteral",
																										"src": "2586:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2574:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2574:3:6"
																								},
																								"nativeSrc": "2574:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2574:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2564:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "2564:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2605:33:6",
																							"nodeType": "YulAssignment",
																							"src": "2605:33:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2622:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "2622:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2633:4:6",
																										"nodeType": "YulLiteral",
																										"src": "2633:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2618:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2618:3:6"
																								},
																								"nativeSrc": "2618:20:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2618:20:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2605:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "2605:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2441:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "2441:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2444:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "2444:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2438:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "2438:2:6"
																					},
																					"nativeSrc": "2438:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2438:14:6"
																				},
																				"nativeSrc": "2430:222:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2453:21:6",
																					"nodeType": "YulBlock",
																					"src": "2453:21:6",
																					"statements": [
																						{
																							"nativeSrc": "2455:17:6",
																							"nodeType": "YulAssignment",
																							"src": "2455:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2464:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "2464:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2467:4:6",
																										"nodeType": "YulLiteral",
																										"src": "2467:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2460:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2460:3:6"
																								},
																								"nativeSrc": "2460:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2460:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2455:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "2455:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2434:3:6",
																					"nodeType": "YulBlock",
																					"src": "2434:3:6",
																					"statements": []
																				},
																				"src": "2430:222:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "2700:166:6",
																					"nodeType": "YulBlock",
																					"src": "2700:166:6",
																					"statements": [
																						{
																							"nativeSrc": "2718:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2718:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2745:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "2745:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2750:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "2750:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2741:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "2741:3:6"
																										},
																										"nativeSrc": "2741:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "2741:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2735:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "2735:5:6"
																								},
																								"nativeSrc": "2735:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2735:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2722:9:6",
																									"nodeType": "YulTypedName",
																									"src": "2722:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2785:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "2785:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2797:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "2797:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2824:1:6",
																																				"nodeType": "YulLiteral",
																																				"src": "2824:1:6",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2827:6:6",
																																				"nodeType": "YulIdentifier",
																																				"src": "2827:6:6"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2820:3:6",
																																			"nodeType": "YulIdentifier",
																																			"src": "2820:3:6"
																																		},
																																		"nativeSrc": "2820:14:6",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2820:14:6"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2836:3:6",
																																		"nodeType": "YulLiteral",
																																		"src": "2836:3:6",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2816:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "2816:3:6"
																																},
																																"nativeSrc": "2816:24:6",
																																"nodeType": "YulFunctionCall",
																																"src": "2816:24:6"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2846:1:6",
																																		"nodeType": "YulLiteral",
																																		"src": "2846:1:6",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2842:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "2842:3:6"
																																},
																																"nativeSrc": "2842:6:6",
																																"nodeType": "YulFunctionCall",
																																"src": "2842:6:6"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2812:3:6",
																															"nodeType": "YulIdentifier",
																															"src": "2812:3:6"
																														},
																														"nativeSrc": "2812:37:6",
																														"nodeType": "YulFunctionCall",
																														"src": "2812:37:6"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2808:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "2808:3:6"
																												},
																												"nativeSrc": "2808:42:6",
																												"nodeType": "YulFunctionCall",
																												"src": "2808:42:6"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2793:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "2793:3:6"
																										},
																										"nativeSrc": "2793:58:6",
																										"nodeType": "YulFunctionCall",
																										"src": "2793:58:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2778:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "2778:6:6"
																								},
																								"nativeSrc": "2778:74:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2778:74:6"
																							},
																							"nativeSrc": "2778:74:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "2778:74:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2671:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "2671:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2680:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "2680:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2668:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "2668:2:6"
																					},
																					"nativeSrc": "2668:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2668:19:6"
																				},
																				"nativeSrc": "2665:201:6",
																				"nodeType": "YulIf",
																				"src": "2665:201:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2886:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "2886:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2900:1:6",
																											"nodeType": "YulLiteral",
																											"src": "2900:1:6",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2903:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "2903:6:6"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2896:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "2896:3:6"
																									},
																									"nativeSrc": "2896:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "2896:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2912:1:6",
																									"nodeType": "YulLiteral",
																									"src": "2912:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2892:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "2892:3:6"
																							},
																							"nativeSrc": "2892:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2892:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2879:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2879:6:6"
																					},
																					"nativeSrc": "2879:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2879:36:6"
																				},
																				"nativeSrc": "2879:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "2879:36:6"
																			}
																		]
																	},
																	"nativeSrc": "2276:649:6",
																	"nodeType": "YulCase",
																	"src": "2276:649:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2281:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2281:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2942:234:6",
																		"nodeType": "YulBlock",
																		"src": "2942:234:6",
																		"statements": [
																			{
																				"nativeSrc": "2956:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2956:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2969:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2969:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2960:5:6",
																						"nodeType": "YulTypedName",
																						"src": "2960:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3005:67:6",
																					"nodeType": "YulBlock",
																					"src": "3005:67:6",
																					"statements": [
																						{
																							"nativeSrc": "3023:35:6",
																							"nodeType": "YulAssignment",
																							"src": "3023:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3042:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "3042:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3047:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "3047:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3038:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "3038:3:6"
																										},
																										"nativeSrc": "3038:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "3038:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3032:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "3032:5:6"
																								},
																								"nativeSrc": "3032:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "3032:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3023:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "3023:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2986:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2986:6:6"
																				},
																				"nativeSrc": "2983:89:6",
																				"nodeType": "YulIf",
																				"src": "2983:89:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3092:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "3092:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "3151:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "3151:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "3158:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "3158:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3098:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "3098:52:6"
																							},
																							"nativeSrc": "3098:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "3098:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3085:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3085:6:6"
																					},
																					"nativeSrc": "3085:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3085:81:6"
																				},
																				"nativeSrc": "3085:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "3085:81:6"
																			}
																		]
																	},
																	"nativeSrc": "2934:242:6",
																	"nodeType": "YulCase",
																	"src": "2934:242:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2256:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2256:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2264:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2264:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2253:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2253:2:6"
																},
																"nativeSrc": "2253:14:6",
																"nodeType": "YulFunctionCall",
																"src": "2253:14:6"
															},
															"nativeSrc": "2246:930:6",
															"nodeType": "YulSwitch",
															"src": "2246:930:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1883:1299:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1964:4:6",
														"nodeType": "YulTypedName",
														"src": "1964:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1970:3:6",
														"nodeType": "YulTypedName",
														"src": "1970:3:6",
														"type": ""
													}
												],
												"src": "1883:1299:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_contract_IERC20_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$729t_contract$_IERC20_$729_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_contract_IERC20_fromMemory(headStart)\n        value1 := abi_decode_contract_IERC20_fromMemory(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506040516118c13803806118c183398101604081905261002e916100db565b6040518060400160405280600a815260200169053696d706c65537761760b41b81525060405180604001604052806002815260200161535360f01b815250816003908161007b91906101a4565b50600461008882826101a4565b5050600580546001600160a01b039485166001600160a01b03199182161790915560068054939094169216919091179091555061025e565b80516001600160a01b03811681146100d6575f5ffd5b919050565b5f5f604083850312156100ec575f5ffd5b6100f5836100c0565b9150610103602084016100c0565b90509250929050565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061013457607f821691505b60208210810361015257634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561019f57805f5260205f20601f840160051c8101602085101561017d5750805b601f840160051c820191505b8181101561019c575f8155600101610189565b50505b505050565b81516001600160401b038111156101bd576101bd61010c565b6101d1816101cb8454610120565b84610158565b6020601f821160018114610203575f83156101ec5750848201515b5f19600385901b1c1916600184901b17845561019c565b5f84815260208120601f198516915b828110156102325787850151825560209485019460019092019101610212565b508482101561024f57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b6116568061026b5f395ff3fe608060405234801561000f575f5ffd5b5060043610610106575f3560e01c8063443cb4bc1161009e5780639c8f9f231161006e5780639c8f9f231461022f5780639cd441da14610257578063a9059cbb1461026a578063d21220a71461027d578063dd62ed3e14610290575f5ffd5b8063443cb4bc146101ed5780635a76f25e146101f657806370a08231146101ff57806395d89b4114610227575f5ffd5b806318160ddd116100d957806318160ddd1461019357806323b872dd1461019b578063313ce567146101ae57806343264349146101bd575f5ffd5b8063054d50d41461010a57806306fdde0314610130578063095ea7b3146101455780630dfe168114610168575b5f5ffd5b61011d610118366004611376565b6102c8565b6040519081526020015b60405180910390f35b61013861038c565b604051610127919061139f565b6101586101533660046113eb565b61041c565b6040519015158152602001610127565b60055461017b906001600160a01b031681565b6040516001600160a01b039091168152602001610127565b60025461011d565b6101586101a9366004611415565b610435565b60405160128152602001610127565b6101d06101cb366004611453565b610458565b604080519283526001600160a01b03909116602083015201610127565b61011d60075481565b61011d60085481565b61011d61020d366004611477565b6001600160a01b03165f9081526020819052604090205490565b610138610942565b61024261023d366004611492565b610951565b60408051928352602083019190915201610127565b61011d6102653660046114a9565b610cd1565b6101586102783660046113eb565b610f96565b60065461017b906001600160a01b031681565b61011d61029e3660046114c9565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b5f5f84116103135760405162461bcd60e51b8152602060048201526013602482015272125394d551919250d251539517d05353d55395606a1b60448201526064015b60405180910390fd5b5f8311801561032157505f82115b6103665760405162461bcd60e51b8152602060048201526016602482015275494e53554646494349454e545f4c495155494449545960501b604482015260640161030a565b6103708484611514565b61037a8386611527565b610384919061153e565b949350505050565b60606003805461039b9061155d565b80601f01602080910402602001604051908101604052809291908181526020018280546103c79061155d565b80156104125780601f106103e957610100808354040283529160200191610412565b820191905f5260205f20905b8154815290600101906020018083116103f557829003601f168201915b5050505050905090565b5f33610429818585610fa3565b60019150505b92915050565b5f33610442858285610fb5565b61044d858585611030565b506001949350505050565b5f5f5f85116104795760405162461bcd60e51b815260040161030a9061158f565b6005546001600160a01b03858116911614806104a257506006546001600160a01b038581169116145b6104de5760405162461bcd60e51b815260206004820152600d60248201526c24a72b20a624a22faa27a5a2a760991b604482015260640161030a565b6005546040516370a0823160e01b81523060048201525f916001600160a01b0316906370a0823190602401602060405180830381865afa158015610524573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061054891906115c6565b6006546040516370a0823160e01b81523060048201529192505f916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610593573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105b791906115c6565b6005549091506001600160a01b03908116908716036106ef576006546001600160a01b031692506105e98783836102c8565b935084841161060a5760405162461bcd60e51b815260040161030a9061158f565b6040516323b872dd60e01b81526001600160a01b038716906323b872dd9061063a90339030908c906004016115dd565b6020604051808303815f875af1158015610656573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061067a9190611601565b5060405163a9059cbb60e01b8152336004820152602481018590526001600160a01b0384169063a9059cbb906044016020604051808303815f875af11580156106c5573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106e99190611601565b5061080a565b6005546001600160a01b031692506107088782846102c8565b93508484116107295760405162461bcd60e51b815260040161030a9061158f565b6040516323b872dd60e01b81526001600160a01b038716906323b872dd9061075990339030908c906004016115dd565b6020604051808303815f875af1158015610775573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107999190611601565b5060405163a9059cbb60e01b8152336004820152602481018590526001600160a01b0384169063a9059cbb906044016020604051808303815f875af11580156107e4573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108089190611601565b505b6005546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610850573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061087491906115c6565b6007556006546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156108bd573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108e191906115c6565b600855604080518881526001600160a01b038089166020830152918101869052908416606082015233907f24043855bfbfea0ccea141e5a73d7116bf0bfe083ea900a791f4b407ff03e5259060800160405180910390a25050935093915050565b60606004805461039b9061155d565b6005546040516370a0823160e01b81523060048201525f91829182916001600160a01b0316906370a0823190602401602060405180830381865afa15801561099b573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109bf91906115c6565b6006546040516370a0823160e01b81523060048201529192505f916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610a0a573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a2e91906115c6565b90505f610a3a60025490565b905080610a478488611527565b610a51919061153e565b945080610a5e8388611527565b610a68919061153e565b93505f85118015610a7857505f84115b610ac45760405162461bcd60e51b815260206004820152601d60248201527f494e53554646494349454e545f4c49515549444954595f4255524e4544000000604482015260640161030a565b610ace338761108d565b60055460405163a9059cbb60e01b8152336004820152602481018790526001600160a01b039091169063a9059cbb906044016020604051808303815f875af1158015610b1c573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b409190611601565b5060065460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b039091169063a9059cbb906044016020604051808303815f875af1158015610b8f573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bb39190611601565b506005546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610bfa573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c1e91906115c6565b6007556006546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610c67573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c8b91906115c6565b600855604080518681526020810186905233917f49995e5dd6158cf69ad3e9777c46755a1a826a446c6416992167462dad033b2a910160405180910390a2505050915091565b6005546040516323b872dd60e01b81525f916001600160a01b0316906323b872dd90610d05903390309088906004016115dd565b6020604051808303815f875af1158015610d21573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d459190611601565b506006546040516323b872dd60e01b81526001600160a01b03909116906323b872dd90610d7a903390309087906004016115dd565b6020604051808303815f875af1158015610d96573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610dba9190611601565b505f610dc560025490565b9050805f03610de757610de0610ddb8486611527565b6110c5565b9150610e21565b600754610e1e90610df88387611527565b610e02919061153e565b600854610e0f8487611527565b610e19919061153e565b611133565b91505b5f8211610e705760405162461bcd60e51b815260206004820152601d60248201527f494e53554646494349454e545f4c49515549444954595f4d494e544544000000604482015260640161030a565b6005546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610eb6573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610eda91906115c6565b6007556006546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610f23573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f4791906115c6565b600855610f54338361114a565b604080518581526020810185905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a25092915050565b5f33610429818585611030565b610fb0838383600161117e565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811461102a578181101561101c57604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161030a565b61102a84848484035f61117e565b50505050565b6001600160a01b03831661105957604051634b637e8f60e11b81525f600482015260240161030a565b6001600160a01b0382166110825760405163ec442f0560e01b81525f600482015260240161030a565b610fb0838383611250565b6001600160a01b0382166110b657604051634b637e8f60e11b81525f600482015260240161030a565b6110c1825f83611250565b5050565b5f60038211156111245750805f6110dd60028361153e565b6110e8906001611514565b90505b8181101561111e57905080600281611103818661153e565b61110d9190611514565b611117919061153e565b90506110eb565b50919050565b811561112e575060015b919050565b5f8183106111415781611143565b825b9392505050565b6001600160a01b0382166111735760405163ec442f0560e01b81525f600482015260240161030a565b6110c15f8383611250565b6001600160a01b0384166111a75760405163e602df0560e01b81525f600482015260240161030a565b6001600160a01b0383166111d057604051634a1406b160e11b81525f600482015260240161030a565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561102a57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161124291815260200190565b60405180910390a350505050565b6001600160a01b03831661127a578060025f82825461126f9190611514565b909155506112ea9050565b6001600160a01b0383165f90815260208190526040902054818110156112cc5760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161030a565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661130657600280548290039055611324565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161136991815260200190565b60405180910390a3505050565b5f5f5f60608486031215611388575f5ffd5b505081359360208301359350604090920135919050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146113e8575f5ffd5b50565b5f5f604083850312156113fc575f5ffd5b8235611407816113d4565b946020939093013593505050565b5f5f5f60608486031215611427575f5ffd5b8335611432816113d4565b92506020840135611442816113d4565b929592945050506040919091013590565b5f5f5f60608486031215611465575f5ffd5b833592506020840135611442816113d4565b5f60208284031215611487575f5ffd5b8135611143816113d4565b5f602082840312156114a2575f5ffd5b5035919050565b5f5f604083850312156114ba575f5ffd5b50508035926020909101359150565b5f5f604083850312156114da575f5ffd5b82356114e5816113d4565b915060208301356114f5816113d4565b809150509250929050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561042f5761042f611500565b808202811582820484141761042f5761042f611500565b5f8261155857634e487b7160e01b5f52601260045260245ffd5b500490565b600181811c9082168061157157607f821691505b60208210810361111e57634e487b7160e01b5f52602260045260245ffd5b6020808252601a908201527f494e53554646494349454e545f4f55545055545f414d4f554e54000000000000604082015260600190565b5f602082840312156115d6575f5ffd5b5051919050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b5f60208284031215611611575f5ffd5b81518015158114611143575f5ffdfea264697066735822122072c8ca44da9b9415eaac567ca24e1061546afef935c7b424d196eaf8bdc0ada464736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x18C1 CODESIZE SUB DUP1 PUSH2 0x18C1 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0xDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x53696D706C655377617 PUSH1 0xB4 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5353 PUSH1 0xF0 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x1A4 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x88 DUP3 DUP3 PUSH2 0x1A4 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP4 SWAP1 SWAP5 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE POP PUSH2 0x25E JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEC JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xF5 DUP4 PUSH2 0xC0 JUMP JUMPDEST SWAP2 POP PUSH2 0x103 PUSH1 0x20 DUP5 ADD PUSH2 0xC0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x134 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x152 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x19F JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x17D JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x19C JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x189 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1BD JUMPI PUSH2 0x1BD PUSH2 0x10C JUMP JUMPDEST PUSH2 0x1D1 DUP2 PUSH2 0x1CB DUP5 SLOAD PUSH2 0x120 JUMP JUMPDEST DUP5 PUSH2 0x158 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x203 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x1EC JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x19C JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x232 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x212 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x24F JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1656 DUP1 PUSH2 0x26B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x106 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x443CB4BC GT PUSH2 0x9E JUMPI DUP1 PUSH4 0x9C8F9F23 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x290 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x443CB4BC EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x5A76F25E EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x227 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x43264349 EQ PUSH2 0x1BD JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x54D50D4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x168 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0x1376 JUMP JUMPDEST PUSH2 0x2C8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x138 PUSH2 0x38C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x139F JUMP JUMPDEST PUSH2 0x158 PUSH2 0x153 CALLDATASIZE PUSH1 0x4 PUSH2 0x13EB JUMP JUMPDEST PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x127 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x17B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x127 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x11D JUMP JUMPDEST PUSH2 0x158 PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1415 JUMP JUMPDEST PUSH2 0x435 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x127 JUMP JUMPDEST PUSH2 0x1D0 PUSH2 0x1CB CALLDATASIZE PUSH1 0x4 PUSH2 0x1453 JUMP JUMPDEST PUSH2 0x458 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x127 JUMP JUMPDEST PUSH2 0x11D PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x11D PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x11D PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x1477 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x138 PUSH2 0x942 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x23D CALLDATASIZE PUSH1 0x4 PUSH2 0x1492 JUMP JUMPDEST PUSH2 0x951 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x127 JUMP JUMPDEST PUSH2 0x11D PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0xCD1 JUMP JUMPDEST PUSH2 0x158 PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x13EB JUMP JUMPDEST PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x17B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x11D PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH0 DUP5 GT PUSH2 0x313 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125394D551919250D251539517D05353D55395 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT DUP1 ISZERO PUSH2 0x321 JUMPI POP PUSH0 DUP3 GT JUMPDEST PUSH2 0x366 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x494E53554646494349454E545F4C4951554944495459 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30A JUMP JUMPDEST PUSH2 0x370 DUP5 DUP5 PUSH2 0x1514 JUMP JUMPDEST PUSH2 0x37A DUP4 DUP7 PUSH2 0x1527 JUMP JUMPDEST PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x153E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x39B SWAP1 PUSH2 0x155D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3C7 SWAP1 PUSH2 0x155D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x412 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3E9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x412 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x429 DUP2 DUP6 DUP6 PUSH2 0xFA3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x442 DUP6 DUP3 DUP6 PUSH2 0xFB5 JUMP JUMPDEST PUSH2 0x44D DUP6 DUP6 DUP6 PUSH2 0x1030 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 GT PUSH2 0x479 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30A SWAP1 PUSH2 0x158F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x4A2 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ JUMPDEST PUSH2 0x4DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x24A72B20A624A22FAA27A5A2A7 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30A JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x524 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x548 SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x593 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B7 SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP8 AND SUB PUSH2 0x6EF JUMPI PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP PUSH2 0x5E9 DUP8 DUP4 DUP4 PUSH2 0x2C8 JUMP JUMPDEST SWAP4 POP DUP5 DUP5 GT PUSH2 0x60A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30A SWAP1 PUSH2 0x158F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x63A SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x15DD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x656 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x67A SWAP2 SWAP1 PUSH2 0x1601 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C5 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E9 SWAP2 SWAP1 PUSH2 0x1601 JUMP JUMPDEST POP PUSH2 0x80A JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP PUSH2 0x708 DUP8 DUP3 DUP5 PUSH2 0x2C8 JUMP JUMPDEST SWAP4 POP DUP5 DUP5 GT PUSH2 0x729 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30A SWAP1 PUSH2 0x158F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x759 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x15DD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x775 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x799 SWAP2 SWAP1 PUSH2 0x1601 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7E4 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x808 SWAP2 SWAP1 PUSH2 0x1601 JUMP JUMPDEST POP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x850 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x874 SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8BD JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8E1 SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP2 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 DUP5 AND PUSH1 0x60 DUP3 ADD MSTORE CALLER SWAP1 PUSH32 0x24043855BFBFEA0CCEA141E5A73D7116BF0BFE083EA900A791F4B407FF03E525 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x39B SWAP1 PUSH2 0x155D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x99B JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9BF SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA0A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA2E SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xA3A PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xA47 DUP5 DUP9 PUSH2 0x1527 JUMP JUMPDEST PUSH2 0xA51 SWAP2 SWAP1 PUSH2 0x153E JUMP JUMPDEST SWAP5 POP DUP1 PUSH2 0xA5E DUP4 DUP9 PUSH2 0x1527 JUMP JUMPDEST PUSH2 0xA68 SWAP2 SWAP1 PUSH2 0x153E JUMP JUMPDEST SWAP4 POP PUSH0 DUP6 GT DUP1 ISZERO PUSH2 0xA78 JUMPI POP PUSH0 DUP5 GT JUMPDEST PUSH2 0xAC4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E53554646494349454E545F4C49515549444954595F4255524E4544000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30A JUMP JUMPDEST PUSH2 0xACE CALLER DUP8 PUSH2 0x108D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB1C JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB40 SWAP2 SWAP1 PUSH2 0x1601 JUMP JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB8F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBB3 SWAP2 SWAP1 PUSH2 0x1601 JUMP JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBFA JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC1E SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC67 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC8B SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x49995E5DD6158CF69AD3E9777C46755A1A826A446C6416992167462DAD033B2A SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xD05 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x15DD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD21 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD45 SWAP2 SWAP1 PUSH2 0x1601 JUMP JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xD7A SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x15DD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD96 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDBA SWAP2 SWAP1 PUSH2 0x1601 JUMP JUMPDEST POP PUSH0 PUSH2 0xDC5 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 SUB PUSH2 0xDE7 JUMPI PUSH2 0xDE0 PUSH2 0xDDB DUP5 DUP7 PUSH2 0x1527 JUMP JUMPDEST PUSH2 0x10C5 JUMP JUMPDEST SWAP2 POP PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0xE1E SWAP1 PUSH2 0xDF8 DUP4 DUP8 PUSH2 0x1527 JUMP JUMPDEST PUSH2 0xE02 SWAP2 SWAP1 PUSH2 0x153E JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0xE0F DUP5 DUP8 PUSH2 0x1527 JUMP JUMPDEST PUSH2 0xE19 SWAP2 SWAP1 PUSH2 0x153E JUMP JUMPDEST PUSH2 0x1133 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH0 DUP3 GT PUSH2 0xE70 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E53554646494349454E545F4C49515549444954595F4D494E544544000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30A JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEB6 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEDA SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF23 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF47 SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0xF54 CALLER DUP4 PUSH2 0x114A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x429 DUP2 DUP6 DUP6 PUSH2 0x1030 JUMP JUMPDEST PUSH2 0xFB0 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x117E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x102A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x101C JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x30A JUMP JUMPDEST PUSH2 0x102A DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x117E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1059 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x30A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1082 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x30A JUMP JUMPDEST PUSH2 0xFB0 DUP4 DUP4 DUP4 PUSH2 0x1250 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10B6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x30A JUMP JUMPDEST PUSH2 0x10C1 DUP3 PUSH0 DUP4 PUSH2 0x1250 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x1124 JUMPI POP DUP1 PUSH0 PUSH2 0x10DD PUSH1 0x2 DUP4 PUSH2 0x153E JUMP JUMPDEST PUSH2 0x10E8 SWAP1 PUSH1 0x1 PUSH2 0x1514 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x111E JUMPI SWAP1 POP DUP1 PUSH1 0x2 DUP2 PUSH2 0x1103 DUP2 DUP7 PUSH2 0x153E JUMP JUMPDEST PUSH2 0x110D SWAP2 SWAP1 PUSH2 0x1514 JUMP JUMPDEST PUSH2 0x1117 SWAP2 SWAP1 PUSH2 0x153E JUMP JUMPDEST SWAP1 POP PUSH2 0x10EB JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 ISZERO PUSH2 0x112E JUMPI POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0x1141 JUMPI DUP2 PUSH2 0x1143 JUMP JUMPDEST DUP3 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1173 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x30A JUMP JUMPDEST PUSH2 0x10C1 PUSH0 DUP4 DUP4 PUSH2 0x1250 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x11A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x30A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x11D0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x30A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x102A JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1242 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x127A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x126F SWAP2 SWAP1 PUSH2 0x1514 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x12EA SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x12CC JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x30A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1306 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1324 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1369 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1388 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13E8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13FC JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1407 DUP2 PUSH2 0x13D4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1427 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1432 DUP2 PUSH2 0x13D4 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1442 DUP2 PUSH2 0x13D4 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1465 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1442 DUP2 PUSH2 0x13D4 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1487 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1143 DUP2 PUSH2 0x13D4 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14BA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14DA JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x14E5 DUP2 PUSH2 0x13D4 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x14F5 DUP2 PUSH2 0x13D4 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x42F JUMPI PUSH2 0x42F PUSH2 0x1500 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x42F JUMPI PUSH2 0x42F PUSH2 0x1500 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1558 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1571 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x111E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x494E53554646494349454E545F4F55545055545F414D4F554E54000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15D6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1611 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1143 JUMPI PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0xC8CA44DA9B9415EAAC567CA24E1061546AFEF9 CALLDATALOAD 0xC7 0xB4 0x24 0xD1 SWAP7 0xEA 0xF8 0xBD 0xC0 0xAD LOG4 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "705:6385:5:-:0;;;1256:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1896:113:1;;;;;;;;;;;;;-1:-1:-1;;;1896:113:1;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:1;;;1970:5;1962;:13;;;;;;:::i;:::-;-1:-1:-1;1985:7:1;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;1337:6:5::1;:16:::0;;-1:-1:-1;;;;;1337:16:5;;::::1;-1:-1:-1::0;;;;;;1337:16:5;;::::1;;::::0;;;1364:6:::1;:16:::0;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;705:6385:5;;14:185:6;101:13;;-1:-1:-1;;;;;143:31:6;;133:42;;123:70;;189:1;186;179:12;123:70;14:185;;;:::o;204:337::-;311:6;319;372:2;360:9;351:7;347:23;343:32;340:52;;;388:1;385;378:12;340:52;411:48;449:9;411:48;:::i;:::-;401:58;;478:57;531:2;520:9;516:18;478:57;:::i;:::-;468:67;;204:337;;;;;:::o;546:127::-;607:10;602:3;598:20;595:1;588:31;638:4;635:1;628:15;662:4;659:1;652:15;678:380;757:1;753:12;;;;800;;;821:61;;875:4;867:6;863:17;853:27;;821:61;928:2;920:6;917:14;897:18;894:38;891:161;;974:10;969:3;965:20;962:1;955:31;1009:4;1006:1;999:15;1037:4;1034:1;1027:15;891:161;;678:380;;;:::o;1189:518::-;1291:2;1286:3;1283:11;1280:421;;;1327:5;1324:1;1317:16;1371:4;1368:1;1358:18;1441:2;1429:10;1425:19;1422:1;1418:27;1412:4;1408:38;1477:4;1465:10;1462:20;1459:47;;;-1:-1:-1;1500:4:6;1459:47;1555:2;1550:3;1546:12;1543:1;1539:20;1533:4;1529:31;1519:41;;1610:81;1628:2;1621:5;1618:13;1610:81;;;1687:1;1673:16;;1654:1;1643:13;1610:81;;;1614:3;;1280:421;1189:518;;;:::o;1883:1299::-;2003:10;;-1:-1:-1;;;;;2025:30:6;;2022:56;;;2058:18;;:::i;:::-;2087:97;2177:6;2137:38;2169:4;2163:11;2137:38;:::i;:::-;2131:4;2087:97;:::i;:::-;2233:4;2264:2;2253:14;;2281:1;2276:649;;;;2969:1;2986:6;2983:89;;;-1:-1:-1;3038:19:6;;;3032:26;2983:89;-1:-1:-1;;1840:1:6;1836:11;;;1832:24;1828:29;1818:40;1864:1;1860:11;;;1815:57;3085:81;;2246:930;;2276:649;1136:1;1129:14;;;1173:4;1160:18;;-1:-1:-1;;2312:20:6;;;2430:222;2444:7;2441:1;2438:14;2430:222;;;2526:19;;;2520:26;2505:42;;2633:4;2618:20;;;;2586:1;2574:14;;;;2460:12;2430:222;;;2434:3;2680:6;2671:7;2668:19;2665:201;;;2741:19;;;2735:26;-1:-1:-1;;2824:1:6;2820:14;;;2836:3;2816:24;2812:37;2808:42;2793:58;2778:74;;2665:201;-1:-1:-1;;;;2912:1:6;2896:14;;;2892:22;2879:36;;-1:-1:-1;1883:1299:6:o;:::-;705:6385:5;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_542": {
									"entryPoint": 4003,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 4478,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_524": {
									"entryPoint": 4237,
									"id": 524,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 4426,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": null,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_650": {
									"entryPoint": 4021,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 4144,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 4688,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addLiquidity_1031": {
									"entryPoint": 3281,
									"id": 1031,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_278": {
									"entryPoint": null,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 1052,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": null,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_215": {
									"entryPoint": null,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getAmountOut_1183": {
									"entryPoint": 712,
									"id": 1183,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@min_869": {
									"entryPoint": 4403,
									"id": 869,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_197": {
									"entryPoint": 908,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeLiquidity_1142": {
									"entryPoint": 2385,
									"id": 1142,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@reserve0_798": {
									"entryPoint": null,
									"id": 798,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reserve1_800": {
									"entryPoint": null,
									"id": 800,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sqrt_923": {
									"entryPoint": 4293,
									"id": 923,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@swap_1356": {
									"entryPoint": 1112,
									"id": 1356,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@symbol_206": {
									"entryPoint": 2370,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@token0_793": {
									"entryPoint": null,
									"id": 793,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token1_796": {
									"entryPoint": null,
									"id": 796,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_224": {
									"entryPoint": null,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 1077,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 3990,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_contract$_IERC20_$729t_uint256": {
									"entryPoint": 5203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 5289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 4982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5597,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_436b5627177a9781148596ddddd93f72d53dd82575a018216d5aaf2a8219ec9e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_56a253623294f4f4de6a9841388f033e113a22d6b37d1e786db69a7172923f8c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a55a580cbbe51d1e48353bfb37fc6a99ecd7f296c4c5225073f3a94978458cd3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bbbb4868217c0daeb6721d77d471da8aa8a80672b4258dd2de9d7ccde9bf2146__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e8788a811b2f03c33c54d190798bfa174d3e97deda56c09c1df2080dcc8d5158__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e8d3230d72418d9aed77f45ee412f45396c3f3cd599a1a457d8130d57af1a83e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_uint256_t_address__to_t_uint256_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_contract$_IERC20_$729__to_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5438,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 5469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5376,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 5076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10276:6",
										"nodeType": "YulBlock",
										"src": "0:10276:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "118:362:6",
													"nodeType": "YulBlock",
													"src": "118:362:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "164:16:6",
																"nodeType": "YulBlock",
																"src": "164:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "173:1:6",
																					"nodeType": "YulLiteral",
																					"src": "173:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "176:1:6",
																					"nodeType": "YulLiteral",
																					"src": "176:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "166:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "166:6:6"
																			},
																			"nativeSrc": "166:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "166:12:6"
																		},
																		"nativeSrc": "166:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "166:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "139:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "139:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "148:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "148:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "135:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "135:3:6"
																		},
																		"nativeSrc": "135:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "135:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:2:6",
																		"nodeType": "YulLiteral",
																		"src": "160:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "131:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "131:3:6"
																},
																"nativeSrc": "131:32:6",
																"nodeType": "YulFunctionCall",
																"src": "131:32:6"
															},
															"nativeSrc": "128:52:6",
															"nodeType": "YulIf",
															"src": "128:52:6"
														},
														{
															"nativeSrc": "189:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "189:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "202:1:6",
																"nodeType": "YulLiteral",
																"src": "202:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "193:5:6",
																	"nodeType": "YulTypedName",
																	"src": "193:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "212:32:6",
															"nodeType": "YulAssignment",
															"src": "212:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "234:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "234:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "221:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "221:12:6"
																},
																"nativeSrc": "221:23:6",
																"nodeType": "YulFunctionCall",
																"src": "221:23:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "212:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "212:5:6"
																}
															]
														},
														{
															"nativeSrc": "253:15:6",
															"nodeType": "YulAssignment",
															"src": "253:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "263:5:6",
																"nodeType": "YulIdentifier",
																"src": "263:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "253:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "253:6:6"
																}
															]
														},
														{
															"nativeSrc": "277:16:6",
															"nodeType": "YulVariableDeclaration",
															"src": "277:16:6",
															"value": {
																"kind": "number",
																"nativeSrc": "292:1:6",
																"nodeType": "YulLiteral",
																"src": "292:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "281:7:6",
																	"nodeType": "YulTypedName",
																	"src": "281:7:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "302:43:6",
															"nodeType": "YulAssignment",
															"src": "302:43:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "330:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "330:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "341:2:6",
																				"nodeType": "YulLiteral",
																				"src": "341:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "326:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "326:3:6"
																		},
																		"nativeSrc": "326:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "326:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "313:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "313:12:6"
																},
																"nativeSrc": "313:32:6",
																"nodeType": "YulFunctionCall",
																"src": "313:32:6"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "302:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "302:7:6"
																}
															]
														},
														{
															"nativeSrc": "354:17:6",
															"nodeType": "YulAssignment",
															"src": "354:17:6",
															"value": {
																"name": "value_1",
																"nativeSrc": "364:7:6",
																"nodeType": "YulIdentifier",
																"src": "364:7:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "354:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "354:6:6"
																}
															]
														},
														{
															"nativeSrc": "380:16:6",
															"nodeType": "YulVariableDeclaration",
															"src": "380:16:6",
															"value": {
																"kind": "number",
																"nativeSrc": "395:1:6",
																"nodeType": "YulLiteral",
																"src": "395:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "384:7:6",
																	"nodeType": "YulTypedName",
																	"src": "384:7:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "405:43:6",
															"nodeType": "YulAssignment",
															"src": "405:43:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "433:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "433:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "444:2:6",
																				"nodeType": "YulLiteral",
																				"src": "444:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "429:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "429:3:6"
																		},
																		"nativeSrc": "429:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "429:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "416:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "416:12:6"
																},
																"nativeSrc": "416:32:6",
																"nodeType": "YulFunctionCall",
																"src": "416:32:6"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "405:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "405:7:6"
																}
															]
														},
														{
															"nativeSrc": "457:17:6",
															"nodeType": "YulAssignment",
															"src": "457:17:6",
															"value": {
																"name": "value_2",
																"nativeSrc": "467:7:6",
																"nodeType": "YulIdentifier",
																"src": "467:7:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "457:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nativeSrc": "14:466:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "68:9:6",
														"nodeType": "YulTypedName",
														"src": "68:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "79:7:6",
														"nodeType": "YulTypedName",
														"src": "79:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "91:6:6",
														"nodeType": "YulTypedName",
														"src": "91:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "99:6:6",
														"nodeType": "YulTypedName",
														"src": "99:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "107:6:6",
														"nodeType": "YulTypedName",
														"src": "107:6:6",
														"type": ""
													}
												],
												"src": "14:466:6"
											},
											{
												"body": {
													"nativeSrc": "586:76:6",
													"nodeType": "YulBlock",
													"src": "586:76:6",
													"statements": [
														{
															"nativeSrc": "596:26:6",
															"nodeType": "YulAssignment",
															"src": "596:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "608:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "608:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "619:2:6",
																		"nodeType": "YulLiteral",
																		"src": "619:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "604:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "604:3:6"
																},
																"nativeSrc": "604:18:6",
																"nodeType": "YulFunctionCall",
																"src": "604:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "596:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "596:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "638:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "638:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "649:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "649:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "631:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "631:6:6"
																},
																"nativeSrc": "631:25:6",
																"nodeType": "YulFunctionCall",
																"src": "631:25:6"
															},
															"nativeSrc": "631:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "631:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "485:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "555:9:6",
														"nodeType": "YulTypedName",
														"src": "555:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "566:6:6",
														"nodeType": "YulTypedName",
														"src": "566:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "577:4:6",
														"nodeType": "YulTypedName",
														"src": "577:4:6",
														"type": ""
													}
												],
												"src": "485:177:6"
											},
											{
												"body": {
													"nativeSrc": "788:297:6",
													"nodeType": "YulBlock",
													"src": "788:297:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "805:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "805:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "816:2:6",
																		"nodeType": "YulLiteral",
																		"src": "816:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "798:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "798:6:6"
																},
																"nativeSrc": "798:21:6",
																"nodeType": "YulFunctionCall",
																"src": "798:21:6"
															},
															"nativeSrc": "798:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "798:21:6"
														},
														{
															"nativeSrc": "828:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "828:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "848:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "848:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "842:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "842:5:6"
																},
																"nativeSrc": "842:13:6",
																"nodeType": "YulFunctionCall",
																"src": "842:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "832:6:6",
																	"nodeType": "YulTypedName",
																	"src": "832:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "875:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "875:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "886:2:6",
																				"nodeType": "YulLiteral",
																				"src": "886:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "871:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "871:3:6"
																		},
																		"nativeSrc": "871:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "871:18:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "891:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "891:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "864:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "864:6:6"
																},
																"nativeSrc": "864:34:6",
																"nodeType": "YulFunctionCall",
																"src": "864:34:6"
															},
															"nativeSrc": "864:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "864:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "917:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "917:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "928:2:6",
																				"nodeType": "YulLiteral",
																				"src": "928:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "913:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "913:3:6"
																		},
																		"nativeSrc": "913:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "913:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "937:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "937:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "945:2:6",
																				"nodeType": "YulLiteral",
																				"src": "945:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "933:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:6"
																		},
																		"nativeSrc": "933:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "933:15:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "950:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "950:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "907:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "907:5:6"
																},
																"nativeSrc": "907:50:6",
																"nodeType": "YulFunctionCall",
																"src": "907:50:6"
															},
															"nativeSrc": "907:50:6",
															"nodeType": "YulExpressionStatement",
															"src": "907:50:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "981:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "981:9:6"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "992:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "992:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "977:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "977:3:6"
																				},
																				"nativeSrc": "977:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "977:22:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1001:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1001:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "973:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "973:3:6"
																		},
																		"nativeSrc": "973:31:6",
																		"nodeType": "YulFunctionCall",
																		"src": "973:31:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1006:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1006:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "966:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "966:6:6"
																},
																"nativeSrc": "966:42:6",
																"nodeType": "YulFunctionCall",
																"src": "966:42:6"
															},
															"nativeSrc": "966:42:6",
															"nodeType": "YulExpressionStatement",
															"src": "966:42:6"
														},
														{
															"nativeSrc": "1017:62:6",
															"nodeType": "YulAssignment",
															"src": "1017:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1033:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1033:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "1052:6:6",
																								"nodeType": "YulIdentifier",
																								"src": "1052:6:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1060:2:6",
																								"nodeType": "YulLiteral",
																								"src": "1060:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1048:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1048:3:6"
																						},
																						"nativeSrc": "1048:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1048:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1069:2:6",
																								"nodeType": "YulLiteral",
																								"src": "1069:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "1065:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1065:3:6"
																						},
																						"nativeSrc": "1065:7:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1065:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1044:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1044:3:6"
																				},
																				"nativeSrc": "1044:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1044:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1029:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1029:3:6"
																		},
																		"nativeSrc": "1029:45:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1029:45:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1076:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1076:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1025:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1025:3:6"
																},
																"nativeSrc": "1025:54:6",
																"nodeType": "YulFunctionCall",
																"src": "1025:54:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1017:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1017:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "667:418:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "757:9:6",
														"nodeType": "YulTypedName",
														"src": "757:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "768:6:6",
														"nodeType": "YulTypedName",
														"src": "768:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "779:4:6",
														"nodeType": "YulTypedName",
														"src": "779:4:6",
														"type": ""
													}
												],
												"src": "667:418:6"
											},
											{
												"body": {
													"nativeSrc": "1135:86:6",
													"nodeType": "YulBlock",
													"src": "1135:86:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1199:16:6",
																"nodeType": "YulBlock",
																"src": "1199:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1208:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1208:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1211:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1211:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1201:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1201:6:6"
																			},
																			"nativeSrc": "1201:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1201:12:6"
																		},
																		"nativeSrc": "1201:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1201:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1158:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1158:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1169:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1169:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1184:3:6",
																										"nodeType": "YulLiteral",
																										"src": "1184:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1189:1:6",
																										"nodeType": "YulLiteral",
																										"src": "1189:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1180:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "1180:3:6"
																								},
																								"nativeSrc": "1180:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "1180:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1193:1:6",
																								"nodeType": "YulLiteral",
																								"src": "1193:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1176:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1176:3:6"
																						},
																						"nativeSrc": "1176:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1176:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1165:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1165:3:6"
																				},
																				"nativeSrc": "1165:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1165:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1155:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1155:2:6"
																		},
																		"nativeSrc": "1155:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1155:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1148:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1148:6:6"
																},
																"nativeSrc": "1148:50:6",
																"nodeType": "YulFunctionCall",
																"src": "1148:50:6"
															},
															"nativeSrc": "1145:70:6",
															"nodeType": "YulIf",
															"src": "1145:70:6"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "1090:131:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1124:5:6",
														"nodeType": "YulTypedName",
														"src": "1124:5:6",
														"type": ""
													}
												],
												"src": "1090:131:6"
											},
											{
												"body": {
													"nativeSrc": "1313:280:6",
													"nodeType": "YulBlock",
													"src": "1313:280:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1359:16:6",
																"nodeType": "YulBlock",
																"src": "1359:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1368:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1368:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1371:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1361:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1361:6:6"
																			},
																			"nativeSrc": "1361:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1361:12:6"
																		},
																		"nativeSrc": "1361:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1361:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1334:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1334:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1343:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1343:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1330:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1330:3:6"
																		},
																		"nativeSrc": "1330:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1330:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1355:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1326:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1326:3:6"
																},
																"nativeSrc": "1326:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1326:32:6"
															},
															"nativeSrc": "1323:52:6",
															"nodeType": "YulIf",
															"src": "1323:52:6"
														},
														{
															"nativeSrc": "1384:36:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1384:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1410:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1410:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1397:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1397:12:6"
																},
																"nativeSrc": "1397:23:6",
																"nodeType": "YulFunctionCall",
																"src": "1397:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1388:5:6",
																	"nodeType": "YulTypedName",
																	"src": "1388:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1454:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1454:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1429:24:6",
																	"nodeType": "YulIdentifier",
																	"src": "1429:24:6"
																},
																"nativeSrc": "1429:31:6",
																"nodeType": "YulFunctionCall",
																"src": "1429:31:6"
															},
															"nativeSrc": "1429:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "1429:31:6"
														},
														{
															"nativeSrc": "1469:15:6",
															"nodeType": "YulAssignment",
															"src": "1469:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "1479:5:6",
																"nodeType": "YulIdentifier",
																"src": "1479:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1469:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1469:6:6"
																}
															]
														},
														{
															"nativeSrc": "1493:16:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1493:16:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1508:1:6",
																"nodeType": "YulLiteral",
																"src": "1508:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1497:7:6",
																	"nodeType": "YulTypedName",
																	"src": "1497:7:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1518:43:6",
															"nodeType": "YulAssignment",
															"src": "1518:43:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1546:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1546:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1557:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1557:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1542:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1542:3:6"
																		},
																		"nativeSrc": "1542:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1542:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1529:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1529:12:6"
																},
																"nativeSrc": "1529:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1529:32:6"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1518:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1518:7:6"
																}
															]
														},
														{
															"nativeSrc": "1570:17:6",
															"nodeType": "YulAssignment",
															"src": "1570:17:6",
															"value": {
																"name": "value_1",
																"nativeSrc": "1580:7:6",
																"nodeType": "YulIdentifier",
																"src": "1580:7:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1570:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1570:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1226:367:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1271:9:6",
														"nodeType": "YulTypedName",
														"src": "1271:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1282:7:6",
														"nodeType": "YulTypedName",
														"src": "1282:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1294:6:6",
														"nodeType": "YulTypedName",
														"src": "1294:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1302:6:6",
														"nodeType": "YulTypedName",
														"src": "1302:6:6",
														"type": ""
													}
												],
												"src": "1226:367:6"
											},
											{
												"body": {
													"nativeSrc": "1693:92:6",
													"nodeType": "YulBlock",
													"src": "1693:92:6",
													"statements": [
														{
															"nativeSrc": "1703:26:6",
															"nodeType": "YulAssignment",
															"src": "1703:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1715:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1715:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1726:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1726:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1711:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1711:3:6"
																},
																"nativeSrc": "1711:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1711:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1703:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1703:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1745:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1745:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1770:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1770:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1763:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "1763:6:6"
																				},
																				"nativeSrc": "1763:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1763:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1756:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1756:6:6"
																		},
																		"nativeSrc": "1756:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1756:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1738:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1738:6:6"
																},
																"nativeSrc": "1738:41:6",
																"nodeType": "YulFunctionCall",
																"src": "1738:41:6"
															},
															"nativeSrc": "1738:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "1738:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1598:187:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1662:9:6",
														"nodeType": "YulTypedName",
														"src": "1662:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1673:6:6",
														"nodeType": "YulTypedName",
														"src": "1673:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1684:4:6",
														"nodeType": "YulTypedName",
														"src": "1684:4:6",
														"type": ""
													}
												],
												"src": "1598:187:6"
											},
											{
												"body": {
													"nativeSrc": "1905:102:6",
													"nodeType": "YulBlock",
													"src": "1905:102:6",
													"statements": [
														{
															"nativeSrc": "1915:26:6",
															"nodeType": "YulAssignment",
															"src": "1915:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1927:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1927:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1938:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1938:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1923:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1923:3:6"
																},
																"nativeSrc": "1923:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1923:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1915:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1915:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1957:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1957:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1972:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1972:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1988:3:6",
																								"nodeType": "YulLiteral",
																								"src": "1988:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1993:1:6",
																								"nodeType": "YulLiteral",
																								"src": "1993:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1984:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1984:3:6"
																						},
																						"nativeSrc": "1984:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1984:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1997:1:6",
																						"nodeType": "YulLiteral",
																						"src": "1997:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1980:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1980:3:6"
																				},
																				"nativeSrc": "1980:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1980:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1968:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1968:3:6"
																		},
																		"nativeSrc": "1968:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1968:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1950:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1950:6:6"
																},
																"nativeSrc": "1950:51:6",
																"nodeType": "YulFunctionCall",
																"src": "1950:51:6"
															},
															"nativeSrc": "1950:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "1950:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed",
												"nativeSrc": "1790:217:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1874:9:6",
														"nodeType": "YulTypedName",
														"src": "1874:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1885:6:6",
														"nodeType": "YulTypedName",
														"src": "1885:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1896:4:6",
														"nodeType": "YulTypedName",
														"src": "1896:4:6",
														"type": ""
													}
												],
												"src": "1790:217:6"
											},
											{
												"body": {
													"nativeSrc": "2116:404:6",
													"nodeType": "YulBlock",
													"src": "2116:404:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2162:16:6",
																"nodeType": "YulBlock",
																"src": "2162:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2171:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2171:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2174:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2174:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2164:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2164:6:6"
																			},
																			"nativeSrc": "2164:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2164:12:6"
																		},
																		"nativeSrc": "2164:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2164:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2137:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2137:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2146:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2146:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2133:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2133:3:6"
																		},
																		"nativeSrc": "2133:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2133:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2158:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2158:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2129:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2129:3:6"
																},
																"nativeSrc": "2129:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2129:32:6"
															},
															"nativeSrc": "2126:52:6",
															"nodeType": "YulIf",
															"src": "2126:52:6"
														},
														{
															"nativeSrc": "2187:36:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2187:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2213:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2213:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2200:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2200:12:6"
																},
																"nativeSrc": "2200:23:6",
																"nodeType": "YulFunctionCall",
																"src": "2200:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2191:5:6",
																	"nodeType": "YulTypedName",
																	"src": "2191:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2257:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2257:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2232:24:6",
																	"nodeType": "YulIdentifier",
																	"src": "2232:24:6"
																},
																"nativeSrc": "2232:31:6",
																"nodeType": "YulFunctionCall",
																"src": "2232:31:6"
															},
															"nativeSrc": "2232:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "2232:31:6"
														},
														{
															"nativeSrc": "2272:15:6",
															"nodeType": "YulAssignment",
															"src": "2272:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "2282:5:6",
																"nodeType": "YulIdentifier",
																"src": "2282:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2272:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2272:6:6"
																}
															]
														},
														{
															"nativeSrc": "2296:47:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2296:47:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2328:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2328:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2339:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2339:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2324:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2324:3:6"
																		},
																		"nativeSrc": "2324:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2324:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2311:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2311:12:6"
																},
																"nativeSrc": "2311:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2311:32:6"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "2300:7:6",
																	"nodeType": "YulTypedName",
																	"src": "2300:7:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "2377:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "2377:7:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2352:24:6",
																	"nodeType": "YulIdentifier",
																	"src": "2352:24:6"
																},
																"nativeSrc": "2352:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2352:33:6"
															},
															"nativeSrc": "2352:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2352:33:6"
														},
														{
															"nativeSrc": "2394:17:6",
															"nodeType": "YulAssignment",
															"src": "2394:17:6",
															"value": {
																"name": "value_1",
																"nativeSrc": "2404:7:6",
																"nodeType": "YulIdentifier",
																"src": "2404:7:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2394:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2394:6:6"
																}
															]
														},
														{
															"nativeSrc": "2420:16:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2420:16:6",
															"value": {
																"kind": "number",
																"nativeSrc": "2435:1:6",
																"nodeType": "YulLiteral",
																"src": "2435:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "2424:7:6",
																	"nodeType": "YulTypedName",
																	"src": "2424:7:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2445:43:6",
															"nodeType": "YulAssignment",
															"src": "2445:43:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2473:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2473:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2484:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2484:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2469:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2469:3:6"
																		},
																		"nativeSrc": "2469:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2469:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2456:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2456:12:6"
																},
																"nativeSrc": "2456:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2456:32:6"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "2445:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2445:7:6"
																}
															]
														},
														{
															"nativeSrc": "2497:17:6",
															"nodeType": "YulAssignment",
															"src": "2497:17:6",
															"value": {
																"name": "value_2",
																"nativeSrc": "2507:7:6",
																"nodeType": "YulIdentifier",
																"src": "2507:7:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2497:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2497:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "2012:508:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2066:9:6",
														"nodeType": "YulTypedName",
														"src": "2066:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2077:7:6",
														"nodeType": "YulTypedName",
														"src": "2077:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2089:6:6",
														"nodeType": "YulTypedName",
														"src": "2089:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2097:6:6",
														"nodeType": "YulTypedName",
														"src": "2097:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2105:6:6",
														"nodeType": "YulTypedName",
														"src": "2105:6:6",
														"type": ""
													}
												],
												"src": "2012:508:6"
											},
											{
												"body": {
													"nativeSrc": "2622:87:6",
													"nodeType": "YulBlock",
													"src": "2622:87:6",
													"statements": [
														{
															"nativeSrc": "2632:26:6",
															"nodeType": "YulAssignment",
															"src": "2632:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2644:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2644:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2655:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2655:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2640:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2640:3:6"
																},
																"nativeSrc": "2640:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2640:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2632:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2632:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2674:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2674:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2689:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2689:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2697:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2697:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2685:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2685:3:6"
																		},
																		"nativeSrc": "2685:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2685:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2667:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2667:6:6"
																},
																"nativeSrc": "2667:36:6",
																"nodeType": "YulFunctionCall",
																"src": "2667:36:6"
															},
															"nativeSrc": "2667:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "2667:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2525:184:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2591:9:6",
														"nodeType": "YulTypedName",
														"src": "2591:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2602:6:6",
														"nodeType": "YulTypedName",
														"src": "2602:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2613:4:6",
														"nodeType": "YulTypedName",
														"src": "2613:4:6",
														"type": ""
													}
												],
												"src": "2525:184:6"
											},
											{
												"body": {
													"nativeSrc": "2832:383:6",
													"nodeType": "YulBlock",
													"src": "2832:383:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2878:16:6",
																"nodeType": "YulBlock",
																"src": "2878:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2887:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2887:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2890:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2890:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2880:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2880:6:6"
																			},
																			"nativeSrc": "2880:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2880:12:6"
																		},
																		"nativeSrc": "2880:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2880:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2853:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2853:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2862:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2862:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2849:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2849:3:6"
																		},
																		"nativeSrc": "2849:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2849:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2874:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2874:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2845:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2845:3:6"
																},
																"nativeSrc": "2845:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2845:32:6"
															},
															"nativeSrc": "2842:52:6",
															"nodeType": "YulIf",
															"src": "2842:52:6"
														},
														{
															"nativeSrc": "2903:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2903:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "2916:1:6",
																"nodeType": "YulLiteral",
																"src": "2916:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2907:5:6",
																	"nodeType": "YulTypedName",
																	"src": "2907:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2926:32:6",
															"nodeType": "YulAssignment",
															"src": "2926:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2948:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2948:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2935:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2935:12:6"
																},
																"nativeSrc": "2935:23:6",
																"nodeType": "YulFunctionCall",
																"src": "2935:23:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2926:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2926:5:6"
																}
															]
														},
														{
															"nativeSrc": "2967:15:6",
															"nodeType": "YulAssignment",
															"src": "2967:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "2977:5:6",
																"nodeType": "YulIdentifier",
																"src": "2977:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2967:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2967:6:6"
																}
															]
														},
														{
															"nativeSrc": "2991:47:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2991:47:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3023:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3023:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3034:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3034:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3019:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3019:3:6"
																		},
																		"nativeSrc": "3019:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3019:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3006:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "3006:12:6"
																},
																"nativeSrc": "3006:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3006:32:6"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "2995:7:6",
																	"nodeType": "YulTypedName",
																	"src": "2995:7:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "3072:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "3072:7:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3047:24:6",
																	"nodeType": "YulIdentifier",
																	"src": "3047:24:6"
																},
																"nativeSrc": "3047:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3047:33:6"
															},
															"nativeSrc": "3047:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "3047:33:6"
														},
														{
															"nativeSrc": "3089:17:6",
															"nodeType": "YulAssignment",
															"src": "3089:17:6",
															"value": {
																"name": "value_1",
																"nativeSrc": "3099:7:6",
																"nodeType": "YulIdentifier",
																"src": "3099:7:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3089:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3089:6:6"
																}
															]
														},
														{
															"nativeSrc": "3115:16:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3115:16:6",
															"value": {
																"kind": "number",
																"nativeSrc": "3130:1:6",
																"nodeType": "YulLiteral",
																"src": "3130:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "3119:7:6",
																	"nodeType": "YulTypedName",
																	"src": "3119:7:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3140:43:6",
															"nodeType": "YulAssignment",
															"src": "3140:43:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3168:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3168:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3179:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3179:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3164:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3164:3:6"
																		},
																		"nativeSrc": "3164:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3164:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3151:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "3151:12:6"
																},
																"nativeSrc": "3151:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3151:32:6"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "3140:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3140:7:6"
																}
															]
														},
														{
															"nativeSrc": "3192:17:6",
															"nodeType": "YulAssignment",
															"src": "3192:17:6",
															"value": {
																"name": "value_2",
																"nativeSrc": "3202:7:6",
																"nodeType": "YulIdentifier",
																"src": "3202:7:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3192:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3192:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_contract$_IERC20_$729t_uint256",
												"nativeSrc": "2714:501:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2782:9:6",
														"nodeType": "YulTypedName",
														"src": "2782:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2793:7:6",
														"nodeType": "YulTypedName",
														"src": "2793:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2805:6:6",
														"nodeType": "YulTypedName",
														"src": "2805:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2813:6:6",
														"nodeType": "YulTypedName",
														"src": "2813:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2821:6:6",
														"nodeType": "YulTypedName",
														"src": "2821:6:6",
														"type": ""
													}
												],
												"src": "2714:501:6"
											},
											{
												"body": {
													"nativeSrc": "3363:145:6",
													"nodeType": "YulBlock",
													"src": "3363:145:6",
													"statements": [
														{
															"nativeSrc": "3373:26:6",
															"nodeType": "YulAssignment",
															"src": "3373:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3385:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3385:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3396:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3396:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3381:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3381:3:6"
																},
																"nativeSrc": "3381:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3381:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3373:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3373:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3415:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3415:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3426:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3426:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3408:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3408:6:6"
																},
																"nativeSrc": "3408:25:6",
																"nodeType": "YulFunctionCall",
																"src": "3408:25:6"
															},
															"nativeSrc": "3408:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "3408:25:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3453:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3453:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3464:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3464:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3449:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3449:3:6"
																		},
																		"nativeSrc": "3449:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3449:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "3473:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3473:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3489:3:6",
																								"nodeType": "YulLiteral",
																								"src": "3489:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3494:1:6",
																								"nodeType": "YulLiteral",
																								"src": "3494:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3485:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "3485:3:6"
																						},
																						"nativeSrc": "3485:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "3485:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3498:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3498:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3481:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3481:3:6"
																				},
																				"nativeSrc": "3481:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3481:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3469:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3469:3:6"
																		},
																		"nativeSrc": "3469:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3469:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3442:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3442:6:6"
																},
																"nativeSrc": "3442:60:6",
																"nodeType": "YulFunctionCall",
																"src": "3442:60:6"
															},
															"nativeSrc": "3442:60:6",
															"nodeType": "YulExpressionStatement",
															"src": "3442:60:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_contract$_IERC20_$729__to_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "3220:288:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3324:9:6",
														"nodeType": "YulTypedName",
														"src": "3324:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3335:6:6",
														"nodeType": "YulTypedName",
														"src": "3335:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3343:6:6",
														"nodeType": "YulTypedName",
														"src": "3343:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3354:4:6",
														"nodeType": "YulTypedName",
														"src": "3354:4:6",
														"type": ""
													}
												],
												"src": "3220:288:6"
											},
											{
												"body": {
													"nativeSrc": "3583:177:6",
													"nodeType": "YulBlock",
													"src": "3583:177:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3629:16:6",
																"nodeType": "YulBlock",
																"src": "3629:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3638:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3638:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3641:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3641:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3631:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3631:6:6"
																			},
																			"nativeSrc": "3631:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3631:12:6"
																		},
																		"nativeSrc": "3631:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3631:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3604:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3604:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3613:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3613:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3600:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3600:3:6"
																		},
																		"nativeSrc": "3600:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3600:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3625:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3625:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3596:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3596:3:6"
																},
																"nativeSrc": "3596:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3596:32:6"
															},
															"nativeSrc": "3593:52:6",
															"nodeType": "YulIf",
															"src": "3593:52:6"
														},
														{
															"nativeSrc": "3654:36:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3654:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3680:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3680:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3667:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "3667:12:6"
																},
																"nativeSrc": "3667:23:6",
																"nodeType": "YulFunctionCall",
																"src": "3667:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3658:5:6",
																	"nodeType": "YulTypedName",
																	"src": "3658:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3724:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3724:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3699:24:6",
																	"nodeType": "YulIdentifier",
																	"src": "3699:24:6"
																},
																"nativeSrc": "3699:31:6",
																"nodeType": "YulFunctionCall",
																"src": "3699:31:6"
															},
															"nativeSrc": "3699:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "3699:31:6"
														},
														{
															"nativeSrc": "3739:15:6",
															"nodeType": "YulAssignment",
															"src": "3739:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "3749:5:6",
																"nodeType": "YulIdentifier",
																"src": "3749:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3739:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3739:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3513:247:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3549:9:6",
														"nodeType": "YulTypedName",
														"src": "3549:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3560:7:6",
														"nodeType": "YulTypedName",
														"src": "3560:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3572:6:6",
														"nodeType": "YulTypedName",
														"src": "3572:6:6",
														"type": ""
													}
												],
												"src": "3513:247:6"
											},
											{
												"body": {
													"nativeSrc": "3835:156:6",
													"nodeType": "YulBlock",
													"src": "3835:156:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3881:16:6",
																"nodeType": "YulBlock",
																"src": "3881:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3890:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3890:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3893:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3893:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3883:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3883:6:6"
																			},
																			"nativeSrc": "3883:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3883:12:6"
																		},
																		"nativeSrc": "3883:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3883:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3856:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3856:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3865:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3865:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3852:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3852:3:6"
																		},
																		"nativeSrc": "3852:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3852:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3877:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3877:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3848:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3848:3:6"
																},
																"nativeSrc": "3848:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3848:32:6"
															},
															"nativeSrc": "3845:52:6",
															"nodeType": "YulIf",
															"src": "3845:52:6"
														},
														{
															"nativeSrc": "3906:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3906:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "3919:1:6",
																"nodeType": "YulLiteral",
																"src": "3919:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3910:5:6",
																	"nodeType": "YulTypedName",
																	"src": "3910:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3929:32:6",
															"nodeType": "YulAssignment",
															"src": "3929:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3951:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3951:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3938:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "3938:12:6"
																},
																"nativeSrc": "3938:23:6",
																"nodeType": "YulFunctionCall",
																"src": "3938:23:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3929:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3929:5:6"
																}
															]
														},
														{
															"nativeSrc": "3970:15:6",
															"nodeType": "YulAssignment",
															"src": "3970:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "3980:5:6",
																"nodeType": "YulIdentifier",
																"src": "3980:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3970:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3970:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3765:226:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3801:9:6",
														"nodeType": "YulTypedName",
														"src": "3801:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3812:7:6",
														"nodeType": "YulTypedName",
														"src": "3812:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3824:6:6",
														"nodeType": "YulTypedName",
														"src": "3824:6:6",
														"type": ""
													}
												],
												"src": "3765:226:6"
											},
											{
												"body": {
													"nativeSrc": "4125:119:6",
													"nodeType": "YulBlock",
													"src": "4125:119:6",
													"statements": [
														{
															"nativeSrc": "4135:26:6",
															"nodeType": "YulAssignment",
															"src": "4135:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4147:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4147:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4158:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4158:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4143:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4143:3:6"
																},
																"nativeSrc": "4143:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4143:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4135:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4135:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4177:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4177:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4188:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4188:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4170:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4170:6:6"
																},
																"nativeSrc": "4170:25:6",
																"nodeType": "YulFunctionCall",
																"src": "4170:25:6"
															},
															"nativeSrc": "4170:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "4170:25:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4215:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4215:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4226:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4226:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4211:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4211:3:6"
																		},
																		"nativeSrc": "4211:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4211:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4231:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4231:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4204:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4204:6:6"
																},
																"nativeSrc": "4204:34:6",
																"nodeType": "YulFunctionCall",
																"src": "4204:34:6"
															},
															"nativeSrc": "4204:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "4204:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3996:248:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4086:9:6",
														"nodeType": "YulTypedName",
														"src": "4086:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4097:6:6",
														"nodeType": "YulTypedName",
														"src": "4097:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4105:6:6",
														"nodeType": "YulTypedName",
														"src": "4105:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4116:4:6",
														"nodeType": "YulTypedName",
														"src": "4116:4:6",
														"type": ""
													}
												],
												"src": "3996:248:6"
											},
											{
												"body": {
													"nativeSrc": "4336:259:6",
													"nodeType": "YulBlock",
													"src": "4336:259:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4382:16:6",
																"nodeType": "YulBlock",
																"src": "4382:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4391:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4391:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4394:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4394:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4384:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4384:6:6"
																			},
																			"nativeSrc": "4384:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4384:12:6"
																		},
																		"nativeSrc": "4384:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4384:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4357:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4357:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4366:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4366:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4353:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4353:3:6"
																		},
																		"nativeSrc": "4353:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4353:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4378:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4378:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4349:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4349:3:6"
																},
																"nativeSrc": "4349:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4349:32:6"
															},
															"nativeSrc": "4346:52:6",
															"nodeType": "YulIf",
															"src": "4346:52:6"
														},
														{
															"nativeSrc": "4407:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4407:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "4420:1:6",
																"nodeType": "YulLiteral",
																"src": "4420:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4411:5:6",
																	"nodeType": "YulTypedName",
																	"src": "4411:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4430:32:6",
															"nodeType": "YulAssignment",
															"src": "4430:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4452:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4452:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4439:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "4439:12:6"
																},
																"nativeSrc": "4439:23:6",
																"nodeType": "YulFunctionCall",
																"src": "4439:23:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4430:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4430:5:6"
																}
															]
														},
														{
															"nativeSrc": "4471:15:6",
															"nodeType": "YulAssignment",
															"src": "4471:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "4481:5:6",
																"nodeType": "YulIdentifier",
																"src": "4481:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4471:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4471:6:6"
																}
															]
														},
														{
															"nativeSrc": "4495:16:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4495:16:6",
															"value": {
																"kind": "number",
																"nativeSrc": "4510:1:6",
																"nodeType": "YulLiteral",
																"src": "4510:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "4499:7:6",
																	"nodeType": "YulTypedName",
																	"src": "4499:7:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4520:43:6",
															"nodeType": "YulAssignment",
															"src": "4520:43:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4548:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4548:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4559:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4559:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4544:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4544:3:6"
																		},
																		"nativeSrc": "4544:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4544:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4531:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "4531:12:6"
																},
																"nativeSrc": "4531:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4531:32:6"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "4520:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "4520:7:6"
																}
															]
														},
														{
															"nativeSrc": "4572:17:6",
															"nodeType": "YulAssignment",
															"src": "4572:17:6",
															"value": {
																"name": "value_1",
																"nativeSrc": "4582:7:6",
																"nodeType": "YulIdentifier",
																"src": "4582:7:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4572:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4572:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "4249:346:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4294:9:6",
														"nodeType": "YulTypedName",
														"src": "4294:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4305:7:6",
														"nodeType": "YulTypedName",
														"src": "4305:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4317:6:6",
														"nodeType": "YulTypedName",
														"src": "4317:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4325:6:6",
														"nodeType": "YulTypedName",
														"src": "4325:6:6",
														"type": ""
													}
												],
												"src": "4249:346:6"
											},
											{
												"body": {
													"nativeSrc": "4687:301:6",
													"nodeType": "YulBlock",
													"src": "4687:301:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4733:16:6",
																"nodeType": "YulBlock",
																"src": "4733:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4742:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4742:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4745:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4745:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4735:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4735:6:6"
																			},
																			"nativeSrc": "4735:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4735:12:6"
																		},
																		"nativeSrc": "4735:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4735:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4708:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4708:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4717:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4717:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4704:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4704:3:6"
																		},
																		"nativeSrc": "4704:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4704:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4729:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4729:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4700:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4700:3:6"
																},
																"nativeSrc": "4700:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4700:32:6"
															},
															"nativeSrc": "4697:52:6",
															"nodeType": "YulIf",
															"src": "4697:52:6"
														},
														{
															"nativeSrc": "4758:36:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4758:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4784:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4784:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4771:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "4771:12:6"
																},
																"nativeSrc": "4771:23:6",
																"nodeType": "YulFunctionCall",
																"src": "4771:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4762:5:6",
																	"nodeType": "YulTypedName",
																	"src": "4762:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4828:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4828:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "4803:24:6",
																	"nodeType": "YulIdentifier",
																	"src": "4803:24:6"
																},
																"nativeSrc": "4803:31:6",
																"nodeType": "YulFunctionCall",
																"src": "4803:31:6"
															},
															"nativeSrc": "4803:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "4803:31:6"
														},
														{
															"nativeSrc": "4843:15:6",
															"nodeType": "YulAssignment",
															"src": "4843:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "4853:5:6",
																"nodeType": "YulIdentifier",
																"src": "4853:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4843:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4843:6:6"
																}
															]
														},
														{
															"nativeSrc": "4867:47:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4867:47:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4899:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4899:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4910:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4910:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4895:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4895:3:6"
																		},
																		"nativeSrc": "4895:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4895:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4882:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "4882:12:6"
																},
																"nativeSrc": "4882:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4882:32:6"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "4871:7:6",
																	"nodeType": "YulTypedName",
																	"src": "4871:7:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "4948:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "4948:7:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "4923:24:6",
																	"nodeType": "YulIdentifier",
																	"src": "4923:24:6"
																},
																"nativeSrc": "4923:33:6",
																"nodeType": "YulFunctionCall",
																"src": "4923:33:6"
															},
															"nativeSrc": "4923:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "4923:33:6"
														},
														{
															"nativeSrc": "4965:17:6",
															"nodeType": "YulAssignment",
															"src": "4965:17:6",
															"value": {
																"name": "value_1",
																"nativeSrc": "4975:7:6",
																"nodeType": "YulIdentifier",
																"src": "4975:7:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4965:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4965:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "4600:388:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4645:9:6",
														"nodeType": "YulTypedName",
														"src": "4645:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4656:7:6",
														"nodeType": "YulTypedName",
														"src": "4656:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4668:6:6",
														"nodeType": "YulTypedName",
														"src": "4668:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4676:6:6",
														"nodeType": "YulTypedName",
														"src": "4676:6:6",
														"type": ""
													}
												],
												"src": "4600:388:6"
											},
											{
												"body": {
													"nativeSrc": "5167:169:6",
													"nodeType": "YulBlock",
													"src": "5167:169:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5184:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5184:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5195:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5195:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5177:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5177:6:6"
																},
																"nativeSrc": "5177:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5177:21:6"
															},
															"nativeSrc": "5177:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "5177:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5218:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5218:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5229:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5229:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5214:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5214:3:6"
																		},
																		"nativeSrc": "5214:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5214:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5234:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5234:2:6",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5207:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5207:6:6"
																},
																"nativeSrc": "5207:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5207:30:6"
															},
															"nativeSrc": "5207:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "5207:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5257:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5257:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5268:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5268:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5253:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5253:3:6"
																		},
																		"nativeSrc": "5253:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5253:18:6"
																	},
																	{
																		"hexValue": "494e53554646494349454e545f414d4f554e54",
																		"kind": "string",
																		"nativeSrc": "5273:21:6",
																		"nodeType": "YulLiteral",
																		"src": "5273:21:6",
																		"type": "",
																		"value": "INSUFFICIENT_AMOUNT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5246:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5246:6:6"
																},
																"nativeSrc": "5246:49:6",
																"nodeType": "YulFunctionCall",
																"src": "5246:49:6"
															},
															"nativeSrc": "5246:49:6",
															"nodeType": "YulExpressionStatement",
															"src": "5246:49:6"
														},
														{
															"nativeSrc": "5304:26:6",
															"nodeType": "YulAssignment",
															"src": "5304:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5316:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5316:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5327:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5327:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5312:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5312:3:6"
																},
																"nativeSrc": "5312:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5312:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5304:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5304:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e8788a811b2f03c33c54d190798bfa174d3e97deda56c09c1df2080dcc8d5158__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4993:343:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5144:9:6",
														"nodeType": "YulTypedName",
														"src": "5144:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5158:4:6",
														"nodeType": "YulTypedName",
														"src": "5158:4:6",
														"type": ""
													}
												],
												"src": "4993:343:6"
											},
											{
												"body": {
													"nativeSrc": "5515:172:6",
													"nodeType": "YulBlock",
													"src": "5515:172:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5532:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5532:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5543:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5543:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5525:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5525:6:6"
																},
																"nativeSrc": "5525:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5525:21:6"
															},
															"nativeSrc": "5525:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "5525:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5566:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5566:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5577:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5577:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5562:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5562:3:6"
																		},
																		"nativeSrc": "5562:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5562:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5582:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5582:2:6",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5555:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5555:6:6"
																},
																"nativeSrc": "5555:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5555:30:6"
															},
															"nativeSrc": "5555:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "5555:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5605:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5605:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5616:2:6",
																				"nodeType": "YulLiteral",
																				"src": "5616:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5601:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5601:3:6"
																		},
																		"nativeSrc": "5601:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5601:18:6"
																	},
																	{
																		"hexValue": "494e53554646494349454e545f4c4951554944495459",
																		"kind": "string",
																		"nativeSrc": "5621:24:6",
																		"nodeType": "YulLiteral",
																		"src": "5621:24:6",
																		"type": "",
																		"value": "INSUFFICIENT_LIQUIDITY"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5594:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5594:6:6"
																},
																"nativeSrc": "5594:52:6",
																"nodeType": "YulFunctionCall",
																"src": "5594:52:6"
															},
															"nativeSrc": "5594:52:6",
															"nodeType": "YulExpressionStatement",
															"src": "5594:52:6"
														},
														{
															"nativeSrc": "5655:26:6",
															"nodeType": "YulAssignment",
															"src": "5655:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5667:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5667:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5678:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5678:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5663:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5663:3:6"
																},
																"nativeSrc": "5663:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5663:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5655:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5655:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e8d3230d72418d9aed77f45ee412f45396c3f3cd599a1a457d8130d57af1a83e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5341:346:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5492:9:6",
														"nodeType": "YulTypedName",
														"src": "5492:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5506:4:6",
														"nodeType": "YulTypedName",
														"src": "5506:4:6",
														"type": ""
													}
												],
												"src": "5341:346:6"
											},
											{
												"body": {
													"nativeSrc": "5724:95:6",
													"nodeType": "YulBlock",
													"src": "5724:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5741:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5741:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5748:3:6",
																				"nodeType": "YulLiteral",
																				"src": "5748:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5753:10:6",
																				"nodeType": "YulLiteral",
																				"src": "5753:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5744:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5744:3:6"
																		},
																		"nativeSrc": "5744:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5744:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5734:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5734:6:6"
																},
																"nativeSrc": "5734:31:6",
																"nodeType": "YulFunctionCall",
																"src": "5734:31:6"
															},
															"nativeSrc": "5734:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "5734:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5781:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5781:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5784:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5784:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5774:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5774:6:6"
																},
																"nativeSrc": "5774:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5774:15:6"
															},
															"nativeSrc": "5774:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5774:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5805:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5805:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5808:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5808:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5798:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5798:6:6"
																},
																"nativeSrc": "5798:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5798:15:6"
															},
															"nativeSrc": "5798:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5798:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5692:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "5692:127:6"
											},
											{
												"body": {
													"nativeSrc": "5872:77:6",
													"nodeType": "YulBlock",
													"src": "5872:77:6",
													"statements": [
														{
															"nativeSrc": "5882:16:6",
															"nodeType": "YulAssignment",
															"src": "5882:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5893:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5893:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5896:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5896:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5889:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5889:3:6"
																},
																"nativeSrc": "5889:9:6",
																"nodeType": "YulFunctionCall",
																"src": "5889:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5882:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5882:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5921:22:6",
																"nodeType": "YulBlock",
																"src": "5921:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5923:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "5923:16:6"
																			},
																			"nativeSrc": "5923:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5923:18:6"
																		},
																		"nativeSrc": "5923:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5923:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5913:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "5913:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5916:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5916:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5910:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5910:2:6"
																},
																"nativeSrc": "5910:10:6",
																"nodeType": "YulFunctionCall",
																"src": "5910:10:6"
															},
															"nativeSrc": "5907:36:6",
															"nodeType": "YulIf",
															"src": "5907:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5824:125:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5855:1:6",
														"nodeType": "YulTypedName",
														"src": "5855:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5858:1:6",
														"nodeType": "YulTypedName",
														"src": "5858:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5864:3:6",
														"nodeType": "YulTypedName",
														"src": "5864:3:6",
														"type": ""
													}
												],
												"src": "5824:125:6"
											},
											{
												"body": {
													"nativeSrc": "6006:116:6",
													"nodeType": "YulBlock",
													"src": "6006:116:6",
													"statements": [
														{
															"nativeSrc": "6016:20:6",
															"nodeType": "YulAssignment",
															"src": "6016:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6031:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6031:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6034:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6034:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6027:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6027:3:6"
																},
																"nativeSrc": "6027:9:6",
																"nodeType": "YulFunctionCall",
																"src": "6027:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "6016:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "6016:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6094:22:6",
																"nodeType": "YulBlock",
																"src": "6094:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6096:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6096:16:6"
																			},
																			"nativeSrc": "6096:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:18:6"
																		},
																		"nativeSrc": "6096:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6096:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "6065:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "6065:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6058:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "6058:6:6"
																				},
																				"nativeSrc": "6058:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6058:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "6072:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "6072:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "6079:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "6079:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "6088:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "6088:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "6075:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "6075:3:6"
																						},
																						"nativeSrc": "6075:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "6075:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "6069:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "6069:2:6"
																				},
																				"nativeSrc": "6069:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6069:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "6055:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6055:2:6"
																		},
																		"nativeSrc": "6055:37:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6055:37:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6048:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6048:6:6"
																},
																"nativeSrc": "6048:45:6",
																"nodeType": "YulFunctionCall",
																"src": "6048:45:6"
															},
															"nativeSrc": "6045:71:6",
															"nodeType": "YulIf",
															"src": "6045:71:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "5954:168:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5985:1:6",
														"nodeType": "YulTypedName",
														"src": "5985:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5988:1:6",
														"nodeType": "YulTypedName",
														"src": "5988:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "5994:7:6",
														"nodeType": "YulTypedName",
														"src": "5994:7:6",
														"type": ""
													}
												],
												"src": "5954:168:6"
											},
											{
												"body": {
													"nativeSrc": "6173:171:6",
													"nodeType": "YulBlock",
													"src": "6173:171:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6204:111:6",
																"nodeType": "YulBlock",
																"src": "6204:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6225:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6225:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6232:3:6",
																							"nodeType": "YulLiteral",
																							"src": "6232:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6237:10:6",
																							"nodeType": "YulLiteral",
																							"src": "6237:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6228:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "6228:3:6"
																					},
																					"nativeSrc": "6228:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6228:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6218:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6218:6:6"
																			},
																			"nativeSrc": "6218:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6218:31:6"
																		},
																		"nativeSrc": "6218:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6218:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6269:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6269:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6272:4:6",
																					"nodeType": "YulLiteral",
																					"src": "6272:4:6",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6262:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6262:6:6"
																			},
																			"nativeSrc": "6262:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6262:15:6"
																		},
																		"nativeSrc": "6262:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6262:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6297:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6297:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6300:4:6",
																					"nodeType": "YulLiteral",
																					"src": "6300:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6290:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6290:6:6"
																			},
																			"nativeSrc": "6290:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6290:15:6"
																		},
																		"nativeSrc": "6290:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6290:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6193:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6193:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6186:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6186:6:6"
																},
																"nativeSrc": "6186:9:6",
																"nodeType": "YulFunctionCall",
																"src": "6186:9:6"
															},
															"nativeSrc": "6183:132:6",
															"nodeType": "YulIf",
															"src": "6183:132:6"
														},
														{
															"nativeSrc": "6324:14:6",
															"nodeType": "YulAssignment",
															"src": "6324:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6333:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6333:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6336:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6336:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6329:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6329:3:6"
																},
																"nativeSrc": "6329:9:6",
																"nodeType": "YulFunctionCall",
																"src": "6329:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6324:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "6324:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "6127:217:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6158:1:6",
														"nodeType": "YulTypedName",
														"src": "6158:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6161:1:6",
														"nodeType": "YulTypedName",
														"src": "6161:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "6167:1:6",
														"nodeType": "YulTypedName",
														"src": "6167:1:6",
														"type": ""
													}
												],
												"src": "6127:217:6"
											},
											{
												"body": {
													"nativeSrc": "6404:325:6",
													"nodeType": "YulBlock",
													"src": "6404:325:6",
													"statements": [
														{
															"nativeSrc": "6414:22:6",
															"nodeType": "YulAssignment",
															"src": "6414:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6428:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6428:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "6431:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6431:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6424:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6424:3:6"
																},
																"nativeSrc": "6424:12:6",
																"nodeType": "YulFunctionCall",
																"src": "6424:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6414:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6414:6:6"
																}
															]
														},
														{
															"nativeSrc": "6445:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6445:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6475:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6475:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6481:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6481:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6471:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6471:3:6"
																},
																"nativeSrc": "6471:12:6",
																"nodeType": "YulFunctionCall",
																"src": "6471:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6449:18:6",
																	"nodeType": "YulTypedName",
																	"src": "6449:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6522:31:6",
																"nodeType": "YulBlock",
																"src": "6522:31:6",
																"statements": [
																	{
																		"nativeSrc": "6524:27:6",
																		"nodeType": "YulAssignment",
																		"src": "6524:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6538:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "6538:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6546:4:6",
																					"nodeType": "YulLiteral",
																					"src": "6546:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6534:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6534:3:6"
																			},
																			"nativeSrc": "6534:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6534:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6524:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6524:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6502:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "6502:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6495:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6495:6:6"
																},
																"nativeSrc": "6495:26:6",
																"nodeType": "YulFunctionCall",
																"src": "6495:26:6"
															},
															"nativeSrc": "6492:61:6",
															"nodeType": "YulIf",
															"src": "6492:61:6"
														},
														{
															"body": {
																"nativeSrc": "6612:111:6",
																"nodeType": "YulBlock",
																"src": "6612:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6633:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6633:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6640:3:6",
																							"nodeType": "YulLiteral",
																							"src": "6640:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6645:10:6",
																							"nodeType": "YulLiteral",
																							"src": "6645:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6636:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "6636:3:6"
																					},
																					"nativeSrc": "6636:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6636:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6626:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6626:6:6"
																			},
																			"nativeSrc": "6626:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6626:31:6"
																		},
																		"nativeSrc": "6626:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6626:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6677:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6680:4:6",
																					"nodeType": "YulLiteral",
																					"src": "6680:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6670:6:6"
																			},
																			"nativeSrc": "6670:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6670:15:6"
																		},
																		"nativeSrc": "6670:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6670:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6705:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6705:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6708:4:6",
																					"nodeType": "YulLiteral",
																					"src": "6708:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6698:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6698:6:6"
																			},
																			"nativeSrc": "6698:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6698:15:6"
																		},
																		"nativeSrc": "6698:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6698:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6568:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "6568:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6591:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6591:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6599:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6599:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6588:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6588:2:6"
																		},
																		"nativeSrc": "6588:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6588:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6565:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6565:2:6"
																},
																"nativeSrc": "6565:38:6",
																"nodeType": "YulFunctionCall",
																"src": "6565:38:6"
															},
															"nativeSrc": "6562:161:6",
															"nodeType": "YulIf",
															"src": "6562:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6349:380:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6384:4:6",
														"nodeType": "YulTypedName",
														"src": "6384:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6393:6:6",
														"nodeType": "YulTypedName",
														"src": "6393:6:6",
														"type": ""
													}
												],
												"src": "6349:380:6"
											},
											{
												"body": {
													"nativeSrc": "6908:176:6",
													"nodeType": "YulBlock",
													"src": "6908:176:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6925:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6925:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6936:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6936:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6918:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6918:6:6"
																},
																"nativeSrc": "6918:21:6",
																"nodeType": "YulFunctionCall",
																"src": "6918:21:6"
															},
															"nativeSrc": "6918:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "6918:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6959:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6959:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6970:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6970:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6955:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6955:3:6"
																		},
																		"nativeSrc": "6955:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6955:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6975:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6975:2:6",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6948:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6948:6:6"
																},
																"nativeSrc": "6948:30:6",
																"nodeType": "YulFunctionCall",
																"src": "6948:30:6"
															},
															"nativeSrc": "6948:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "6948:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6998:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6998:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7009:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7009:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6994:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6994:3:6"
																		},
																		"nativeSrc": "6994:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6994:18:6"
																	},
																	{
																		"hexValue": "494e53554646494349454e545f4f55545055545f414d4f554e54",
																		"kind": "string",
																		"nativeSrc": "7014:28:6",
																		"nodeType": "YulLiteral",
																		"src": "7014:28:6",
																		"type": "",
																		"value": "INSUFFICIENT_OUTPUT_AMOUNT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6987:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6987:6:6"
																},
																"nativeSrc": "6987:56:6",
																"nodeType": "YulFunctionCall",
																"src": "6987:56:6"
															},
															"nativeSrc": "6987:56:6",
															"nodeType": "YulExpressionStatement",
															"src": "6987:56:6"
														},
														{
															"nativeSrc": "7052:26:6",
															"nodeType": "YulAssignment",
															"src": "7052:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7064:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7064:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7075:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7075:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7060:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7060:3:6"
																},
																"nativeSrc": "7060:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7060:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7052:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7052:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bbbb4868217c0daeb6721d77d471da8aa8a80672b4258dd2de9d7ccde9bf2146__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6734:350:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6885:9:6",
														"nodeType": "YulTypedName",
														"src": "6885:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6899:4:6",
														"nodeType": "YulTypedName",
														"src": "6899:4:6",
														"type": ""
													}
												],
												"src": "6734:350:6"
											},
											{
												"body": {
													"nativeSrc": "7263:163:6",
													"nodeType": "YulBlock",
													"src": "7263:163:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7280:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7280:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7291:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7291:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7273:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7273:6:6"
																},
																"nativeSrc": "7273:21:6",
																"nodeType": "YulFunctionCall",
																"src": "7273:21:6"
															},
															"nativeSrc": "7273:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "7273:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7314:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7314:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7325:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7325:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7310:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7310:3:6"
																		},
																		"nativeSrc": "7310:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7310:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7330:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7330:2:6",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7303:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7303:6:6"
																},
																"nativeSrc": "7303:30:6",
																"nodeType": "YulFunctionCall",
																"src": "7303:30:6"
															},
															"nativeSrc": "7303:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "7303:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7353:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7353:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7364:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7364:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7349:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7349:3:6"
																		},
																		"nativeSrc": "7349:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7349:18:6"
																	},
																	{
																		"hexValue": "494e56414c49445f544f4b454e",
																		"kind": "string",
																		"nativeSrc": "7369:15:6",
																		"nodeType": "YulLiteral",
																		"src": "7369:15:6",
																		"type": "",
																		"value": "INVALID_TOKEN"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7342:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:6"
																},
																"nativeSrc": "7342:43:6",
																"nodeType": "YulFunctionCall",
																"src": "7342:43:6"
															},
															"nativeSrc": "7342:43:6",
															"nodeType": "YulExpressionStatement",
															"src": "7342:43:6"
														},
														{
															"nativeSrc": "7394:26:6",
															"nodeType": "YulAssignment",
															"src": "7394:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7406:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7406:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7417:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7417:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7402:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7402:3:6"
																},
																"nativeSrc": "7402:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7402:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7394:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7394:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_436b5627177a9781148596ddddd93f72d53dd82575a018216d5aaf2a8219ec9e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7089:337:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7240:9:6",
														"nodeType": "YulTypedName",
														"src": "7240:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7254:4:6",
														"nodeType": "YulTypedName",
														"src": "7254:4:6",
														"type": ""
													}
												],
												"src": "7089:337:6"
											},
											{
												"body": {
													"nativeSrc": "7532:102:6",
													"nodeType": "YulBlock",
													"src": "7532:102:6",
													"statements": [
														{
															"nativeSrc": "7542:26:6",
															"nodeType": "YulAssignment",
															"src": "7542:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7554:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7554:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7565:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7565:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7550:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7550:3:6"
																},
																"nativeSrc": "7550:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7550:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7542:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7542:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7584:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7584:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7599:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7599:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7615:3:6",
																								"nodeType": "YulLiteral",
																								"src": "7615:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7620:1:6",
																								"nodeType": "YulLiteral",
																								"src": "7620:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7611:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "7611:3:6"
																						},
																						"nativeSrc": "7611:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "7611:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7624:1:6",
																						"nodeType": "YulLiteral",
																						"src": "7624:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7607:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7607:3:6"
																				},
																				"nativeSrc": "7607:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7607:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7595:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7595:3:6"
																		},
																		"nativeSrc": "7595:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7595:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7577:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7577:6:6"
																},
																"nativeSrc": "7577:51:6",
																"nodeType": "YulFunctionCall",
																"src": "7577:51:6"
															},
															"nativeSrc": "7577:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "7577:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7431:203:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7501:9:6",
														"nodeType": "YulTypedName",
														"src": "7501:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7512:6:6",
														"nodeType": "YulTypedName",
														"src": "7512:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7523:4:6",
														"nodeType": "YulTypedName",
														"src": "7523:4:6",
														"type": ""
													}
												],
												"src": "7431:203:6"
											},
											{
												"body": {
													"nativeSrc": "7720:103:6",
													"nodeType": "YulBlock",
													"src": "7720:103:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "7766:16:6",
																"nodeType": "YulBlock",
																"src": "7766:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7775:1:6",
																					"nodeType": "YulLiteral",
																					"src": "7775:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7778:1:6",
																					"nodeType": "YulLiteral",
																					"src": "7778:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7768:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7768:6:6"
																			},
																			"nativeSrc": "7768:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7768:12:6"
																		},
																		"nativeSrc": "7768:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7768:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7741:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7741:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7750:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7750:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7737:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7737:3:6"
																		},
																		"nativeSrc": "7737:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7737:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7762:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7762:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7733:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7733:3:6"
																},
																"nativeSrc": "7733:32:6",
																"nodeType": "YulFunctionCall",
																"src": "7733:32:6"
															},
															"nativeSrc": "7730:52:6",
															"nodeType": "YulIf",
															"src": "7730:52:6"
														},
														{
															"nativeSrc": "7791:26:6",
															"nodeType": "YulAssignment",
															"src": "7791:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7807:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7807:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7801:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "7801:5:6"
																},
																"nativeSrc": "7801:16:6",
																"nodeType": "YulFunctionCall",
																"src": "7801:16:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7791:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7791:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "7639:184:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7686:9:6",
														"nodeType": "YulTypedName",
														"src": "7686:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7697:7:6",
														"nodeType": "YulTypedName",
														"src": "7697:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7709:6:6",
														"nodeType": "YulTypedName",
														"src": "7709:6:6",
														"type": ""
													}
												],
												"src": "7639:184:6"
											},
											{
												"body": {
													"nativeSrc": "7985:214:6",
													"nodeType": "YulBlock",
													"src": "7985:214:6",
													"statements": [
														{
															"nativeSrc": "7995:26:6",
															"nodeType": "YulAssignment",
															"src": "7995:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8007:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8007:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8018:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8018:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8003:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8003:3:6"
																},
																"nativeSrc": "8003:18:6",
																"nodeType": "YulFunctionCall",
																"src": "8003:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7995:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7995:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8037:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8037:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8052:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8052:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8068:3:6",
																								"nodeType": "YulLiteral",
																								"src": "8068:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8073:1:6",
																								"nodeType": "YulLiteral",
																								"src": "8073:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8064:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "8064:3:6"
																						},
																						"nativeSrc": "8064:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "8064:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8077:1:6",
																						"nodeType": "YulLiteral",
																						"src": "8077:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8060:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8060:3:6"
																				},
																				"nativeSrc": "8060:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8060:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8048:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8048:3:6"
																		},
																		"nativeSrc": "8048:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8048:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8030:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8030:6:6"
																},
																"nativeSrc": "8030:51:6",
																"nodeType": "YulFunctionCall",
																"src": "8030:51:6"
															},
															"nativeSrc": "8030:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "8030:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8101:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8101:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8112:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8112:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8097:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8097:3:6"
																		},
																		"nativeSrc": "8097:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8097:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "8121:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8121:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8137:3:6",
																								"nodeType": "YulLiteral",
																								"src": "8137:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8142:1:6",
																								"nodeType": "YulLiteral",
																								"src": "8142:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8133:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "8133:3:6"
																						},
																						"nativeSrc": "8133:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "8133:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8146:1:6",
																						"nodeType": "YulLiteral",
																						"src": "8146:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8129:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8129:3:6"
																				},
																				"nativeSrc": "8129:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8129:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8117:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8117:3:6"
																		},
																		"nativeSrc": "8117:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8117:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8090:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8090:6:6"
																},
																"nativeSrc": "8090:60:6",
																"nodeType": "YulFunctionCall",
																"src": "8090:60:6"
															},
															"nativeSrc": "8090:60:6",
															"nodeType": "YulExpressionStatement",
															"src": "8090:60:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8170:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8170:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8181:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8181:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8166:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8166:3:6"
																		},
																		"nativeSrc": "8166:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8166:18:6"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "8186:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8186:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8159:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8159:6:6"
																},
																"nativeSrc": "8159:34:6",
																"nodeType": "YulFunctionCall",
																"src": "8159:34:6"
															},
															"nativeSrc": "8159:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "8159:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7828:371:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7938:9:6",
														"nodeType": "YulTypedName",
														"src": "7938:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7949:6:6",
														"nodeType": "YulTypedName",
														"src": "7949:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7957:6:6",
														"nodeType": "YulTypedName",
														"src": "7957:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7965:6:6",
														"nodeType": "YulTypedName",
														"src": "7965:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7976:4:6",
														"nodeType": "YulTypedName",
														"src": "7976:4:6",
														"type": ""
													}
												],
												"src": "7828:371:6"
											},
											{
												"body": {
													"nativeSrc": "8282:199:6",
													"nodeType": "YulBlock",
													"src": "8282:199:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "8328:16:6",
																"nodeType": "YulBlock",
																"src": "8328:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8337:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8337:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8340:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8340:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8330:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8330:6:6"
																			},
																			"nativeSrc": "8330:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8330:12:6"
																		},
																		"nativeSrc": "8330:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8330:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8303:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8303:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8312:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8312:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8299:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8299:3:6"
																		},
																		"nativeSrc": "8299:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8299:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8324:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8324:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8295:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8295:3:6"
																},
																"nativeSrc": "8295:32:6",
																"nodeType": "YulFunctionCall",
																"src": "8295:32:6"
															},
															"nativeSrc": "8292:52:6",
															"nodeType": "YulIf",
															"src": "8292:52:6"
														},
														{
															"nativeSrc": "8353:29:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8353:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8372:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8372:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8366:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8366:5:6"
																},
																"nativeSrc": "8366:16:6",
																"nodeType": "YulFunctionCall",
																"src": "8366:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "8357:5:6",
																	"nodeType": "YulTypedName",
																	"src": "8357:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8435:16:6",
																"nodeType": "YulBlock",
																"src": "8435:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8444:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8444:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8447:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8447:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8437:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8437:6:6"
																			},
																			"nativeSrc": "8437:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8437:12:6"
																		},
																		"nativeSrc": "8437:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8437:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8404:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8404:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "8425:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "8425:5:6"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "8418:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "8418:6:6"
																						},
																						"nativeSrc": "8418:13:6",
																						"nodeType": "YulFunctionCall",
																						"src": "8418:13:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8411:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "8411:6:6"
																				},
																				"nativeSrc": "8411:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8411:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8401:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "8401:2:6"
																		},
																		"nativeSrc": "8401:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8401:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8394:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8394:6:6"
																},
																"nativeSrc": "8394:40:6",
																"nodeType": "YulFunctionCall",
																"src": "8394:40:6"
															},
															"nativeSrc": "8391:60:6",
															"nodeType": "YulIf",
															"src": "8391:60:6"
														},
														{
															"nativeSrc": "8460:15:6",
															"nodeType": "YulAssignment",
															"src": "8460:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "8470:5:6",
																"nodeType": "YulIdentifier",
																"src": "8470:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8460:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8460:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "8204:277:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8248:9:6",
														"nodeType": "YulTypedName",
														"src": "8248:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8259:7:6",
														"nodeType": "YulTypedName",
														"src": "8259:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8271:6:6",
														"nodeType": "YulTypedName",
														"src": "8271:6:6",
														"type": ""
													}
												],
												"src": "8204:277:6"
											},
											{
												"body": {
													"nativeSrc": "8615:145:6",
													"nodeType": "YulBlock",
													"src": "8615:145:6",
													"statements": [
														{
															"nativeSrc": "8625:26:6",
															"nodeType": "YulAssignment",
															"src": "8625:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8637:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8637:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8648:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8648:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8633:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8633:3:6"
																},
																"nativeSrc": "8633:18:6",
																"nodeType": "YulFunctionCall",
																"src": "8633:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8625:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8625:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8667:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8667:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8682:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8682:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8698:3:6",
																								"nodeType": "YulLiteral",
																								"src": "8698:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8703:1:6",
																								"nodeType": "YulLiteral",
																								"src": "8703:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8694:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "8694:3:6"
																						},
																						"nativeSrc": "8694:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "8694:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8707:1:6",
																						"nodeType": "YulLiteral",
																						"src": "8707:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8690:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8690:3:6"
																				},
																				"nativeSrc": "8690:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8690:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8678:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8678:3:6"
																		},
																		"nativeSrc": "8678:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8678:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8660:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8660:6:6"
																},
																"nativeSrc": "8660:51:6",
																"nodeType": "YulFunctionCall",
																"src": "8660:51:6"
															},
															"nativeSrc": "8660:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "8660:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8731:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8731:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8742:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8742:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8727:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8727:3:6"
																		},
																		"nativeSrc": "8727:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8727:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "8747:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8747:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8720:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8720:6:6"
																},
																"nativeSrc": "8720:34:6",
																"nodeType": "YulFunctionCall",
																"src": "8720:34:6"
															},
															"nativeSrc": "8720:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "8720:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8486:274:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8576:9:6",
														"nodeType": "YulTypedName",
														"src": "8576:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8587:6:6",
														"nodeType": "YulTypedName",
														"src": "8587:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8595:6:6",
														"nodeType": "YulTypedName",
														"src": "8595:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8606:4:6",
														"nodeType": "YulTypedName",
														"src": "8606:4:6",
														"type": ""
													}
												],
												"src": "8486:274:6"
											},
											{
												"body": {
													"nativeSrc": "8950:258:6",
													"nodeType": "YulBlock",
													"src": "8950:258:6",
													"statements": [
														{
															"nativeSrc": "8960:27:6",
															"nodeType": "YulAssignment",
															"src": "8960:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8972:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8972:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8983:3:6",
																		"nodeType": "YulLiteral",
																		"src": "8983:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8968:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8968:3:6"
																},
																"nativeSrc": "8968:19:6",
																"nodeType": "YulFunctionCall",
																"src": "8968:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8960:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8960:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9003:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9003:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "9014:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9014:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8996:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8996:6:6"
																},
																"nativeSrc": "8996:25:6",
																"nodeType": "YulFunctionCall",
																"src": "8996:25:6"
															},
															"nativeSrc": "8996:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "8996:25:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9041:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9041:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9052:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9052:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9037:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9037:3:6"
																		},
																		"nativeSrc": "9037:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9037:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "9061:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9061:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9077:3:6",
																								"nodeType": "YulLiteral",
																								"src": "9077:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9082:1:6",
																								"nodeType": "YulLiteral",
																								"src": "9082:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9073:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "9073:3:6"
																						},
																						"nativeSrc": "9073:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "9073:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9086:1:6",
																						"nodeType": "YulLiteral",
																						"src": "9086:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9069:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "9069:3:6"
																				},
																				"nativeSrc": "9069:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "9069:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9057:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9057:3:6"
																		},
																		"nativeSrc": "9057:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9057:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9030:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9030:6:6"
																},
																"nativeSrc": "9030:60:6",
																"nodeType": "YulFunctionCall",
																"src": "9030:60:6"
															},
															"nativeSrc": "9030:60:6",
															"nodeType": "YulExpressionStatement",
															"src": "9030:60:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9110:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9110:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9121:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9121:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9106:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9106:3:6"
																		},
																		"nativeSrc": "9106:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9106:18:6"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "9126:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9126:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9099:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9099:6:6"
																},
																"nativeSrc": "9099:34:6",
																"nodeType": "YulFunctionCall",
																"src": "9099:34:6"
															},
															"nativeSrc": "9099:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "9099:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9153:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9153:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9164:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9164:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9149:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9149:3:6"
																		},
																		"nativeSrc": "9149:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9149:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "9173:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9173:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9189:3:6",
																								"nodeType": "YulLiteral",
																								"src": "9189:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9194:1:6",
																								"nodeType": "YulLiteral",
																								"src": "9194:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9185:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "9185:3:6"
																						},
																						"nativeSrc": "9185:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "9185:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9198:1:6",
																						"nodeType": "YulLiteral",
																						"src": "9198:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9181:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "9181:3:6"
																				},
																				"nativeSrc": "9181:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "9181:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9169:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9169:3:6"
																		},
																		"nativeSrc": "9169:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9169:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9142:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9142:6:6"
																},
																"nativeSrc": "9142:60:6",
																"nodeType": "YulFunctionCall",
																"src": "9142:60:6"
															},
															"nativeSrc": "9142:60:6",
															"nodeType": "YulExpressionStatement",
															"src": "9142:60:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_uint256_t_address__to_t_uint256_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "8765:443:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8895:9:6",
														"nodeType": "YulTypedName",
														"src": "8895:9:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8906:6:6",
														"nodeType": "YulTypedName",
														"src": "8906:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8914:6:6",
														"nodeType": "YulTypedName",
														"src": "8914:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8922:6:6",
														"nodeType": "YulTypedName",
														"src": "8922:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8930:6:6",
														"nodeType": "YulTypedName",
														"src": "8930:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8941:4:6",
														"nodeType": "YulTypedName",
														"src": "8941:4:6",
														"type": ""
													}
												],
												"src": "8765:443:6"
											},
											{
												"body": {
													"nativeSrc": "9387:179:6",
													"nodeType": "YulBlock",
													"src": "9387:179:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9404:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9404:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9415:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9415:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9397:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9397:6:6"
																},
																"nativeSrc": "9397:21:6",
																"nodeType": "YulFunctionCall",
																"src": "9397:21:6"
															},
															"nativeSrc": "9397:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "9397:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9438:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9438:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9449:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9449:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9434:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9434:3:6"
																		},
																		"nativeSrc": "9434:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9434:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9454:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9454:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9427:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9427:6:6"
																},
																"nativeSrc": "9427:30:6",
																"nodeType": "YulFunctionCall",
																"src": "9427:30:6"
															},
															"nativeSrc": "9427:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "9427:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9477:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9477:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9488:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9488:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9473:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9473:3:6"
																		},
																		"nativeSrc": "9473:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9473:18:6"
																	},
																	{
																		"hexValue": "494e53554646494349454e545f4c49515549444954595f4255524e4544",
																		"kind": "string",
																		"nativeSrc": "9493:31:6",
																		"nodeType": "YulLiteral",
																		"src": "9493:31:6",
																		"type": "",
																		"value": "INSUFFICIENT_LIQUIDITY_BURNED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9466:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9466:6:6"
																},
																"nativeSrc": "9466:59:6",
																"nodeType": "YulFunctionCall",
																"src": "9466:59:6"
															},
															"nativeSrc": "9466:59:6",
															"nodeType": "YulExpressionStatement",
															"src": "9466:59:6"
														},
														{
															"nativeSrc": "9534:26:6",
															"nodeType": "YulAssignment",
															"src": "9534:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9546:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9546:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9557:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9557:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9542:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9542:3:6"
																},
																"nativeSrc": "9542:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9542:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9534:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9534:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a55a580cbbe51d1e48353bfb37fc6a99ecd7f296c4c5225073f3a94978458cd3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9213:353:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9364:9:6",
														"nodeType": "YulTypedName",
														"src": "9364:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9378:4:6",
														"nodeType": "YulTypedName",
														"src": "9378:4:6",
														"type": ""
													}
												],
												"src": "9213:353:6"
											},
											{
												"body": {
													"nativeSrc": "9745:179:6",
													"nodeType": "YulBlock",
													"src": "9745:179:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9762:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9762:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9773:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9773:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9755:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9755:6:6"
																},
																"nativeSrc": "9755:21:6",
																"nodeType": "YulFunctionCall",
																"src": "9755:21:6"
															},
															"nativeSrc": "9755:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "9755:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9796:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9796:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9807:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9807:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9792:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9792:3:6"
																		},
																		"nativeSrc": "9792:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9792:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9812:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9812:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9785:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9785:6:6"
																},
																"nativeSrc": "9785:30:6",
																"nodeType": "YulFunctionCall",
																"src": "9785:30:6"
															},
															"nativeSrc": "9785:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "9785:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9835:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9835:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9846:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9846:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9831:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9831:3:6"
																		},
																		"nativeSrc": "9831:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9831:18:6"
																	},
																	{
																		"hexValue": "494e53554646494349454e545f4c49515549444954595f4d494e544544",
																		"kind": "string",
																		"nativeSrc": "9851:31:6",
																		"nodeType": "YulLiteral",
																		"src": "9851:31:6",
																		"type": "",
																		"value": "INSUFFICIENT_LIQUIDITY_MINTED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9824:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9824:6:6"
																},
																"nativeSrc": "9824:59:6",
																"nodeType": "YulFunctionCall",
																"src": "9824:59:6"
															},
															"nativeSrc": "9824:59:6",
															"nodeType": "YulExpressionStatement",
															"src": "9824:59:6"
														},
														{
															"nativeSrc": "9892:26:6",
															"nodeType": "YulAssignment",
															"src": "9892:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9904:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9904:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9915:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9915:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9900:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9900:3:6"
																},
																"nativeSrc": "9900:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9900:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9892:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9892:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_56a253623294f4f4de6a9841388f033e113a22d6b37d1e786db69a7172923f8c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9571:353:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9722:9:6",
														"nodeType": "YulTypedName",
														"src": "9722:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9736:4:6",
														"nodeType": "YulTypedName",
														"src": "9736:4:6",
														"type": ""
													}
												],
												"src": "9571:353:6"
											},
											{
												"body": {
													"nativeSrc": "10086:188:6",
													"nodeType": "YulBlock",
													"src": "10086:188:6",
													"statements": [
														{
															"nativeSrc": "10096:26:6",
															"nodeType": "YulAssignment",
															"src": "10096:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10108:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10108:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10119:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10119:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10104:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10104:3:6"
																},
																"nativeSrc": "10104:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10104:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10096:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10096:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10138:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10138:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10153:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10153:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10169:3:6",
																								"nodeType": "YulLiteral",
																								"src": "10169:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10174:1:6",
																								"nodeType": "YulLiteral",
																								"src": "10174:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10165:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "10165:3:6"
																						},
																						"nativeSrc": "10165:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "10165:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10178:1:6",
																						"nodeType": "YulLiteral",
																						"src": "10178:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10161:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "10161:3:6"
																				},
																				"nativeSrc": "10161:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "10161:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10149:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10149:3:6"
																		},
																		"nativeSrc": "10149:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10149:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10131:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10131:6:6"
																},
																"nativeSrc": "10131:51:6",
																"nodeType": "YulFunctionCall",
																"src": "10131:51:6"
															},
															"nativeSrc": "10131:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "10131:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10202:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10202:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10213:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10213:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10198:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10198:3:6"
																		},
																		"nativeSrc": "10198:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10198:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "10218:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10218:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10191:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10191:6:6"
																},
																"nativeSrc": "10191:34:6",
																"nodeType": "YulFunctionCall",
																"src": "10191:34:6"
															},
															"nativeSrc": "10191:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "10191:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10245:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10245:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10256:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10256:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10241:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10241:3:6"
																		},
																		"nativeSrc": "10241:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10241:18:6"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "10261:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10261:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10234:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10234:6:6"
																},
																"nativeSrc": "10234:34:6",
																"nodeType": "YulFunctionCall",
																"src": "10234:34:6"
															},
															"nativeSrc": "10234:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "10234:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9929:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10039:9:6",
														"nodeType": "YulTypedName",
														"src": "10039:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10050:6:6",
														"nodeType": "YulTypedName",
														"src": "10050:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10058:6:6",
														"nodeType": "YulTypedName",
														"src": "10058:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10066:6:6",
														"nodeType": "YulTypedName",
														"src": "10066:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10077:4:6",
														"nodeType": "YulTypedName",
														"src": "10077:4:6",
														"type": ""
													}
												],
												"src": "9929:345:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$729__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256t_contract$_IERC20_$729t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n    }\n    function abi_encode_tuple_t_uint256_t_contract$_IERC20_$729__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_stringliteral_e8788a811b2f03c33c54d190798bfa174d3e97deda56c09c1df2080dcc8d5158__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"INSUFFICIENT_AMOUNT\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e8d3230d72418d9aed77f45ee412f45396c3f3cd599a1a457d8130d57af1a83e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"INSUFFICIENT_LIQUIDITY\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_bbbb4868217c0daeb6721d77d471da8aa8a80672b4258dd2de9d7ccde9bf2146__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"INSUFFICIENT_OUTPUT_AMOUNT\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_436b5627177a9781148596ddddd93f72d53dd82575a018216d5aaf2a8219ec9e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"INVALID_TOKEN\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_uint256_t_address__to_t_uint256_t_address_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_a55a580cbbe51d1e48353bfb37fc6a99ecd7f296c4c5225073f3a94978458cd3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"INSUFFICIENT_LIQUIDITY_BURNED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_56a253623294f4f4de6a9841388f033e113a22d6b37d1e786db69a7172923f8c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"INSUFFICIENT_LIQUIDITY_MINTED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610106575f3560e01c8063443cb4bc1161009e5780639c8f9f231161006e5780639c8f9f231461022f5780639cd441da14610257578063a9059cbb1461026a578063d21220a71461027d578063dd62ed3e14610290575f5ffd5b8063443cb4bc146101ed5780635a76f25e146101f657806370a08231146101ff57806395d89b4114610227575f5ffd5b806318160ddd116100d957806318160ddd1461019357806323b872dd1461019b578063313ce567146101ae57806343264349146101bd575f5ffd5b8063054d50d41461010a57806306fdde0314610130578063095ea7b3146101455780630dfe168114610168575b5f5ffd5b61011d610118366004611376565b6102c8565b6040519081526020015b60405180910390f35b61013861038c565b604051610127919061139f565b6101586101533660046113eb565b61041c565b6040519015158152602001610127565b60055461017b906001600160a01b031681565b6040516001600160a01b039091168152602001610127565b60025461011d565b6101586101a9366004611415565b610435565b60405160128152602001610127565b6101d06101cb366004611453565b610458565b604080519283526001600160a01b03909116602083015201610127565b61011d60075481565b61011d60085481565b61011d61020d366004611477565b6001600160a01b03165f9081526020819052604090205490565b610138610942565b61024261023d366004611492565b610951565b60408051928352602083019190915201610127565b61011d6102653660046114a9565b610cd1565b6101586102783660046113eb565b610f96565b60065461017b906001600160a01b031681565b61011d61029e3660046114c9565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b5f5f84116103135760405162461bcd60e51b8152602060048201526013602482015272125394d551919250d251539517d05353d55395606a1b60448201526064015b60405180910390fd5b5f8311801561032157505f82115b6103665760405162461bcd60e51b8152602060048201526016602482015275494e53554646494349454e545f4c495155494449545960501b604482015260640161030a565b6103708484611514565b61037a8386611527565b610384919061153e565b949350505050565b60606003805461039b9061155d565b80601f01602080910402602001604051908101604052809291908181526020018280546103c79061155d565b80156104125780601f106103e957610100808354040283529160200191610412565b820191905f5260205f20905b8154815290600101906020018083116103f557829003601f168201915b5050505050905090565b5f33610429818585610fa3565b60019150505b92915050565b5f33610442858285610fb5565b61044d858585611030565b506001949350505050565b5f5f5f85116104795760405162461bcd60e51b815260040161030a9061158f565b6005546001600160a01b03858116911614806104a257506006546001600160a01b038581169116145b6104de5760405162461bcd60e51b815260206004820152600d60248201526c24a72b20a624a22faa27a5a2a760991b604482015260640161030a565b6005546040516370a0823160e01b81523060048201525f916001600160a01b0316906370a0823190602401602060405180830381865afa158015610524573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061054891906115c6565b6006546040516370a0823160e01b81523060048201529192505f916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610593573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105b791906115c6565b6005549091506001600160a01b03908116908716036106ef576006546001600160a01b031692506105e98783836102c8565b935084841161060a5760405162461bcd60e51b815260040161030a9061158f565b6040516323b872dd60e01b81526001600160a01b038716906323b872dd9061063a90339030908c906004016115dd565b6020604051808303815f875af1158015610656573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061067a9190611601565b5060405163a9059cbb60e01b8152336004820152602481018590526001600160a01b0384169063a9059cbb906044016020604051808303815f875af11580156106c5573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106e99190611601565b5061080a565b6005546001600160a01b031692506107088782846102c8565b93508484116107295760405162461bcd60e51b815260040161030a9061158f565b6040516323b872dd60e01b81526001600160a01b038716906323b872dd9061075990339030908c906004016115dd565b6020604051808303815f875af1158015610775573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107999190611601565b5060405163a9059cbb60e01b8152336004820152602481018590526001600160a01b0384169063a9059cbb906044016020604051808303815f875af11580156107e4573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108089190611601565b505b6005546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610850573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061087491906115c6565b6007556006546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156108bd573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108e191906115c6565b600855604080518881526001600160a01b038089166020830152918101869052908416606082015233907f24043855bfbfea0ccea141e5a73d7116bf0bfe083ea900a791f4b407ff03e5259060800160405180910390a25050935093915050565b60606004805461039b9061155d565b6005546040516370a0823160e01b81523060048201525f91829182916001600160a01b0316906370a0823190602401602060405180830381865afa15801561099b573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109bf91906115c6565b6006546040516370a0823160e01b81523060048201529192505f916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610a0a573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a2e91906115c6565b90505f610a3a60025490565b905080610a478488611527565b610a51919061153e565b945080610a5e8388611527565b610a68919061153e565b93505f85118015610a7857505f84115b610ac45760405162461bcd60e51b815260206004820152601d60248201527f494e53554646494349454e545f4c49515549444954595f4255524e4544000000604482015260640161030a565b610ace338761108d565b60055460405163a9059cbb60e01b8152336004820152602481018790526001600160a01b039091169063a9059cbb906044016020604051808303815f875af1158015610b1c573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b409190611601565b5060065460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b039091169063a9059cbb906044016020604051808303815f875af1158015610b8f573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bb39190611601565b506005546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610bfa573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c1e91906115c6565b6007556006546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610c67573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c8b91906115c6565b600855604080518681526020810186905233917f49995e5dd6158cf69ad3e9777c46755a1a826a446c6416992167462dad033b2a910160405180910390a2505050915091565b6005546040516323b872dd60e01b81525f916001600160a01b0316906323b872dd90610d05903390309088906004016115dd565b6020604051808303815f875af1158015610d21573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d459190611601565b506006546040516323b872dd60e01b81526001600160a01b03909116906323b872dd90610d7a903390309087906004016115dd565b6020604051808303815f875af1158015610d96573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610dba9190611601565b505f610dc560025490565b9050805f03610de757610de0610ddb8486611527565b6110c5565b9150610e21565b600754610e1e90610df88387611527565b610e02919061153e565b600854610e0f8487611527565b610e19919061153e565b611133565b91505b5f8211610e705760405162461bcd60e51b815260206004820152601d60248201527f494e53554646494349454e545f4c49515549444954595f4d494e544544000000604482015260640161030a565b6005546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610eb6573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610eda91906115c6565b6007556006546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610f23573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f4791906115c6565b600855610f54338361114a565b604080518581526020810185905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a25092915050565b5f33610429818585611030565b610fb0838383600161117e565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811461102a578181101561101c57604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161030a565b61102a84848484035f61117e565b50505050565b6001600160a01b03831661105957604051634b637e8f60e11b81525f600482015260240161030a565b6001600160a01b0382166110825760405163ec442f0560e01b81525f600482015260240161030a565b610fb0838383611250565b6001600160a01b0382166110b657604051634b637e8f60e11b81525f600482015260240161030a565b6110c1825f83611250565b5050565b5f60038211156111245750805f6110dd60028361153e565b6110e8906001611514565b90505b8181101561111e57905080600281611103818661153e565b61110d9190611514565b611117919061153e565b90506110eb565b50919050565b811561112e575060015b919050565b5f8183106111415781611143565b825b9392505050565b6001600160a01b0382166111735760405163ec442f0560e01b81525f600482015260240161030a565b6110c15f8383611250565b6001600160a01b0384166111a75760405163e602df0560e01b81525f600482015260240161030a565b6001600160a01b0383166111d057604051634a1406b160e11b81525f600482015260240161030a565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561102a57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161124291815260200190565b60405180910390a350505050565b6001600160a01b03831661127a578060025f82825461126f9190611514565b909155506112ea9050565b6001600160a01b0383165f90815260208190526040902054818110156112cc5760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161030a565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661130657600280548290039055611324565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161136991815260200190565b60405180910390a3505050565b5f5f5f60608486031215611388575f5ffd5b505081359360208301359350604090920135919050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b6001600160a01b03811681146113e8575f5ffd5b50565b5f5f604083850312156113fc575f5ffd5b8235611407816113d4565b946020939093013593505050565b5f5f5f60608486031215611427575f5ffd5b8335611432816113d4565b92506020840135611442816113d4565b929592945050506040919091013590565b5f5f5f60608486031215611465575f5ffd5b833592506020840135611442816113d4565b5f60208284031215611487575f5ffd5b8135611143816113d4565b5f602082840312156114a2575f5ffd5b5035919050565b5f5f604083850312156114ba575f5ffd5b50508035926020909101359150565b5f5f604083850312156114da575f5ffd5b82356114e5816113d4565b915060208301356114f5816113d4565b809150509250929050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561042f5761042f611500565b808202811582820484141761042f5761042f611500565b5f8261155857634e487b7160e01b5f52601260045260245ffd5b500490565b600181811c9082168061157157607f821691505b60208210810361111e57634e487b7160e01b5f52602260045260245ffd5b6020808252601a908201527f494e53554646494349454e545f4f55545055545f414d4f554e54000000000000604082015260600190565b5f602082840312156115d6575f5ffd5b5051919050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b5f60208284031215611611575f5ffd5b81518015158114611143575f5ffdfea264697066735822122072c8ca44da9b9415eaac567ca24e1061546afef935c7b424d196eaf8bdc0ada464736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x106 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x443CB4BC GT PUSH2 0x9E JUMPI DUP1 PUSH4 0x9C8F9F23 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x290 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x443CB4BC EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x5A76F25E EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x227 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x43264349 EQ PUSH2 0x1BD JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x54D50D4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x168 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0x1376 JUMP JUMPDEST PUSH2 0x2C8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x138 PUSH2 0x38C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x139F JUMP JUMPDEST PUSH2 0x158 PUSH2 0x153 CALLDATASIZE PUSH1 0x4 PUSH2 0x13EB JUMP JUMPDEST PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x127 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x17B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x127 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x11D JUMP JUMPDEST PUSH2 0x158 PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1415 JUMP JUMPDEST PUSH2 0x435 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x127 JUMP JUMPDEST PUSH2 0x1D0 PUSH2 0x1CB CALLDATASIZE PUSH1 0x4 PUSH2 0x1453 JUMP JUMPDEST PUSH2 0x458 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x127 JUMP JUMPDEST PUSH2 0x11D PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x11D PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x11D PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x1477 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x138 PUSH2 0x942 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x23D CALLDATASIZE PUSH1 0x4 PUSH2 0x1492 JUMP JUMPDEST PUSH2 0x951 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x127 JUMP JUMPDEST PUSH2 0x11D PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0xCD1 JUMP JUMPDEST PUSH2 0x158 PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x13EB JUMP JUMPDEST PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x17B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x11D PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH0 DUP5 GT PUSH2 0x313 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125394D551919250D251539517D05353D55395 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT DUP1 ISZERO PUSH2 0x321 JUMPI POP PUSH0 DUP3 GT JUMPDEST PUSH2 0x366 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x494E53554646494349454E545F4C4951554944495459 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30A JUMP JUMPDEST PUSH2 0x370 DUP5 DUP5 PUSH2 0x1514 JUMP JUMPDEST PUSH2 0x37A DUP4 DUP7 PUSH2 0x1527 JUMP JUMPDEST PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x153E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x39B SWAP1 PUSH2 0x155D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3C7 SWAP1 PUSH2 0x155D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x412 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3E9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x412 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x429 DUP2 DUP6 DUP6 PUSH2 0xFA3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x442 DUP6 DUP3 DUP6 PUSH2 0xFB5 JUMP JUMPDEST PUSH2 0x44D DUP6 DUP6 DUP6 PUSH2 0x1030 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 GT PUSH2 0x479 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30A SWAP1 PUSH2 0x158F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0x4A2 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ JUMPDEST PUSH2 0x4DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x24A72B20A624A22FAA27A5A2A7 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30A JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x524 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x548 SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x593 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B7 SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP8 AND SUB PUSH2 0x6EF JUMPI PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP PUSH2 0x5E9 DUP8 DUP4 DUP4 PUSH2 0x2C8 JUMP JUMPDEST SWAP4 POP DUP5 DUP5 GT PUSH2 0x60A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30A SWAP1 PUSH2 0x158F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x63A SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x15DD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x656 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x67A SWAP2 SWAP1 PUSH2 0x1601 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C5 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E9 SWAP2 SWAP1 PUSH2 0x1601 JUMP JUMPDEST POP PUSH2 0x80A JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP PUSH2 0x708 DUP8 DUP3 DUP5 PUSH2 0x2C8 JUMP JUMPDEST SWAP4 POP DUP5 DUP5 GT PUSH2 0x729 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30A SWAP1 PUSH2 0x158F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x759 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP13 SWAP1 PUSH1 0x4 ADD PUSH2 0x15DD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x775 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x799 SWAP2 SWAP1 PUSH2 0x1601 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7E4 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x808 SWAP2 SWAP1 PUSH2 0x1601 JUMP JUMPDEST POP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x850 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x874 SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8BD JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8E1 SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP2 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 DUP5 AND PUSH1 0x60 DUP3 ADD MSTORE CALLER SWAP1 PUSH32 0x24043855BFBFEA0CCEA141E5A73D7116BF0BFE083EA900A791F4B407FF03E525 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x39B SWAP1 PUSH2 0x155D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x99B JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9BF SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA0A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA2E SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xA3A PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xA47 DUP5 DUP9 PUSH2 0x1527 JUMP JUMPDEST PUSH2 0xA51 SWAP2 SWAP1 PUSH2 0x153E JUMP JUMPDEST SWAP5 POP DUP1 PUSH2 0xA5E DUP4 DUP9 PUSH2 0x1527 JUMP JUMPDEST PUSH2 0xA68 SWAP2 SWAP1 PUSH2 0x153E JUMP JUMPDEST SWAP4 POP PUSH0 DUP6 GT DUP1 ISZERO PUSH2 0xA78 JUMPI POP PUSH0 DUP5 GT JUMPDEST PUSH2 0xAC4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E53554646494349454E545F4C49515549444954595F4255524E4544000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30A JUMP JUMPDEST PUSH2 0xACE CALLER DUP8 PUSH2 0x108D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB1C JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB40 SWAP2 SWAP1 PUSH2 0x1601 JUMP JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB8F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBB3 SWAP2 SWAP1 PUSH2 0x1601 JUMP JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBFA JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC1E SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC67 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC8B SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x49995E5DD6158CF69AD3E9777C46755A1A826A446C6416992167462DAD033B2A SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xD05 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x15DD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD21 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD45 SWAP2 SWAP1 PUSH2 0x1601 JUMP JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xD7A SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x15DD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD96 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDBA SWAP2 SWAP1 PUSH2 0x1601 JUMP JUMPDEST POP PUSH0 PUSH2 0xDC5 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 SUB PUSH2 0xDE7 JUMPI PUSH2 0xDE0 PUSH2 0xDDB DUP5 DUP7 PUSH2 0x1527 JUMP JUMPDEST PUSH2 0x10C5 JUMP JUMPDEST SWAP2 POP PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0xE1E SWAP1 PUSH2 0xDF8 DUP4 DUP8 PUSH2 0x1527 JUMP JUMPDEST PUSH2 0xE02 SWAP2 SWAP1 PUSH2 0x153E JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0xE0F DUP5 DUP8 PUSH2 0x1527 JUMP JUMPDEST PUSH2 0xE19 SWAP2 SWAP1 PUSH2 0x153E JUMP JUMPDEST PUSH2 0x1133 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH0 DUP3 GT PUSH2 0xE70 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E53554646494349454E545F4C49515549444954595F4D494E544544000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30A JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEB6 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEDA SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF23 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF47 SWAP2 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0xF54 CALLER DUP4 PUSH2 0x114A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x429 DUP2 DUP6 DUP6 PUSH2 0x1030 JUMP JUMPDEST PUSH2 0xFB0 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x117E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x102A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x101C JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x30A JUMP JUMPDEST PUSH2 0x102A DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x117E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1059 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x30A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1082 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x30A JUMP JUMPDEST PUSH2 0xFB0 DUP4 DUP4 DUP4 PUSH2 0x1250 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10B6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x30A JUMP JUMPDEST PUSH2 0x10C1 DUP3 PUSH0 DUP4 PUSH2 0x1250 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x1124 JUMPI POP DUP1 PUSH0 PUSH2 0x10DD PUSH1 0x2 DUP4 PUSH2 0x153E JUMP JUMPDEST PUSH2 0x10E8 SWAP1 PUSH1 0x1 PUSH2 0x1514 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x111E JUMPI SWAP1 POP DUP1 PUSH1 0x2 DUP2 PUSH2 0x1103 DUP2 DUP7 PUSH2 0x153E JUMP JUMPDEST PUSH2 0x110D SWAP2 SWAP1 PUSH2 0x1514 JUMP JUMPDEST PUSH2 0x1117 SWAP2 SWAP1 PUSH2 0x153E JUMP JUMPDEST SWAP1 POP PUSH2 0x10EB JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 ISZERO PUSH2 0x112E JUMPI POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0x1141 JUMPI DUP2 PUSH2 0x1143 JUMP JUMPDEST DUP3 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1173 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x30A JUMP JUMPDEST PUSH2 0x10C1 PUSH0 DUP4 DUP4 PUSH2 0x1250 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x11A7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x30A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x11D0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x30A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x102A JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1242 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x127A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x126F SWAP2 SWAP1 PUSH2 0x1514 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x12EA SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x12CC JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x30A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1306 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1324 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1369 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1388 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13E8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13FC JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1407 DUP2 PUSH2 0x13D4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1427 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1432 DUP2 PUSH2 0x13D4 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1442 DUP2 PUSH2 0x13D4 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1465 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1442 DUP2 PUSH2 0x13D4 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1487 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1143 DUP2 PUSH2 0x13D4 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14BA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14DA JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x14E5 DUP2 PUSH2 0x13D4 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x14F5 DUP2 PUSH2 0x13D4 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x42F JUMPI PUSH2 0x42F PUSH2 0x1500 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x42F JUMPI PUSH2 0x42F PUSH2 0x1500 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1558 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1571 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x111E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x494E53554646494349454E545F4F55545055545F414D4F554E54000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15D6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1611 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1143 JUMPI PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0xC8CA44DA9B9415EAAC567CA24E1061546AFEF9 CALLDATALOAD 0xC7 0xB4 0x24 0xD1 SWAP7 0xEA 0xF8 0xBD 0xC0 0xAD LOG4 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "705:6385:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5035:316;;;;;;:::i;:::-;;:::i;:::-;;;631:25:6;;;619:2;604:18;5035:316:5;;;;;;;;2074:89:1;;;:::i;:::-;;;;;;;:::i;4293:186::-;;;;;;:::i;:::-;;:::i;:::-;;;1763:14:6;;1756:22;1738:41;;1726:2;1711:18;4293:186:1;1598:187:6;755:20:5;;;;;-1:-1:-1;;;;;755:20:5;;;;;;-1:-1:-1;;;;;1968:32:6;;;1950:51;;1938:2;1923:18;755:20:5;1790:217:6;3144:97:1;3222:12;;3144:97;;5039:244;;;;;;:::i;:::-;;:::i;3002:82::-;;;3075:2;2667:36:6;;2655:2;2640:18;3002:82:1;2525:184:6;5555:1532:5;;;;;;:::i;:::-;;:::i;:::-;;;;3408:25:6;;;-1:-1:-1;;;;;3469:32:6;;;3464:2;3449:18;;3442:60;3381:18;5555:1532:5;3220:288:6;835:20:5;;;;;;862;;;;;;3299:116:1;;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:1;3364:7;3390:18;;;;;;;;;;;;3299:116;2276:93;;;:::i;3805:924:5:-;;;;;;:::i;:::-;;:::i;:::-;;;;4170:25:6;;;4226:2;4211:18;;4204:34;;;;4143:18;3805:924:5;3996:248:6;2299:1336:5;;;;;;:::i;:::-;;:::i;3610:178:1:-;;;;;;:::i;:::-;;:::i;782:20:5:-;;;;;-1:-1:-1;;;;;782:20:5;;;3846:140:1;;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:1;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;5035:316:5;5126:14;5172:1;5161:8;:12;5153:44;;;;-1:-1:-1;;;5153:44:5;;5195:2:6;5153:44:5;;;5177:21:6;5234:2;5214:18;;;5207:30;-1:-1:-1;;;5253:18:6;;;5246:49;5312:18;;5153:44:5;;;;;;;;;5228:1;5216:9;:13;:31;;;;;5246:1;5233:10;:14;5216:31;5208:66;;;;-1:-1:-1;;;5208:66:5;;5543:2:6;5208:66:5;;;5525:21:6;5582:2;5562:18;;;5555:30;-1:-1:-1;;;5601:18:6;;;5594:52;5663:18;;5208:66:5;5341:346:6;5208:66:5;5322:20;5334:8;5322:9;:20;:::i;:::-;5297:21;5308:10;5297:8;:21;:::i;:::-;:46;;;;:::i;:::-;5285:58;5035:316;-1:-1:-1;;;;5035:316:5:o;2074:89:1:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:4;4420:31:1;735:10:4;4436:7:1;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;5039:244::-;5126:4;735:10:4;5182:37:1;5198:4;735:10:4;5213:5:1;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:1;;5039:244;-1:-1:-1;;;;5039:244:1:o;5555:1532:5:-;5637:14;5653:15;5699:1;5688:8;:12;5680:51;;;;-1:-1:-1;;;5680:51:5;;;;;;;:::i;:::-;5761:6;;-1:-1:-1;;;;;5750:17:5;;;5761:6;;5750:17;;:38;;-1:-1:-1;5782:6:5;;-1:-1:-1;;;;;5771:17:5;;;5782:6;;5771:17;5750:38;5742:64;;;;-1:-1:-1;;;5742:64:5;;7291:2:6;5742:64:5;;;7273:21:6;7330:2;7310:18;;;7303:30;-1:-1:-1;;;7349:18:6;;;7342:43;7402:18;;5742:64:5;7089:337:6;5742:64:5;5843:6;;:31;;-1:-1:-1;;;5843:31:5;;5868:4;5843:31;;;1950:51:6;5827:13:5;;-1:-1:-1;;;;;5843:6:5;;:16;;1923:18:6;;5843:31:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5901:6;;:31;;-1:-1:-1;;;5901:31:5;;5926:4;5901:31;;;1950:51:6;5827:47:5;;-1:-1:-1;5885:13:5;;-1:-1:-1;;;;;5901:6:5;;;;:16;;1923:18:6;;5901:31:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5959:6;;5885:47;;-1:-1:-1;;;;;;5959:6:5;;;5948:17;;;;5945:907;;6036:6;;-1:-1:-1;;;;;6036:6:5;;-1:-1:-1;6119:42:5;6132:8;6142;6152;6119:12;:42::i;:::-;6107:54;;6196:12;6184:9;:24;6176:63;;;;-1:-1:-1;;;6176:63:5;;;;;;;:::i;:::-;6283:57;;-1:-1:-1;;;6283:57:5;;-1:-1:-1;;;;;6283:20:5;;;;;:57;;6304:10;;6324:4;;6331:8;;6283:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6355:40:5;;-1:-1:-1;;;6355:40:5;;6373:10;6355:40;;;8660:51:6;8727:18;;;8720:34;;;-1:-1:-1;;;;;6355:17:5;;;;;8633:18:6;;6355:40:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5945:907;;;6481:6;;-1:-1:-1;;;;;6481:6:5;;-1:-1:-1;6564:42:5;6577:8;6587;6597;6564:12;:42::i;:::-;6552:54;;6641:12;6629:9;:24;6621:63;;;;-1:-1:-1;;;6621:63:5;;;;;;;:::i;:::-;6728:57;;-1:-1:-1;;;6728:57:5;;-1:-1:-1;;;;;6728:20:5;;;;;:57;;6749:10;;6769:4;;6776:8;;6728:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6800:40:5;;-1:-1:-1;;;6800:40:5;;6818:10;6800:40;;;8660:51:6;8727:18;;;8720:34;;;-1:-1:-1;;;;;6800:17:5;;;;;8633:18:6;;6800:40:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5945:907;6903:6;;:31;;-1:-1:-1;;;6903:31:5;;6928:4;6903:31;;;1950:51:6;-1:-1:-1;;;;;6903:6:5;;;;:16;;1923:18:6;;6903:31:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6892:8;:42;6956:6;;:31;;-1:-1:-1;;;6956:31:5;;6981:4;6956:31;;;1950:51:6;-1:-1:-1;;;;;6956:6:5;;;;:16;;1923:18:6;;6956:31:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6945:8;:42;7005:74;;;8996:25:6;;;-1:-1:-1;;;;;9057:32:6;;;9052:2;9037:18;;9030:60;9106:18;;;9099:34;;;9169:32;;;9164:2;9149:18;;9142:60;7010:10:5;;7005:74;;8983:3:6;8968:19;7005:74:5;;;;;;;5669:1418;;5555:1532;;;;;;:::o;2276:93:1:-;2323:13;2355:7;2348:14;;;;;:::i;3805:924:5:-;3944:6;;:31;;-1:-1:-1;;;3944:31:5;;3969:4;3944:31;;;1950:51:6;3864:12:5;;;;;;-1:-1:-1;;;;;3944:6:5;;:16;;1923:18:6;;3944:31:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4002:6;;:31;;-1:-1:-1;;;4002:31:5;;4027:4;4002:31;;;1950:51:6;3928:47:5;;-1:-1:-1;3986:13:5;;-1:-1:-1;;;;;4002:6:5;;;;:16;;1923:18:6;;4002:31:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3986:47;;4101:17;4121:13;3222:12:1;;;3144:97;4121:13:5;4101:33;-1:-1:-1;4101:33:5;4155:20;4167:8;4155:9;:20;:::i;:::-;:35;;;;:::i;:::-;4145:45;-1:-1:-1;4234:12:5;4211:20;4223:8;4211:9;:20;:::i;:::-;:35;;;;:::i;:::-;4201:45;;4306:1;4296:7;:11;:26;;;;;4321:1;4311:7;:11;4296:26;4288:68;;;;-1:-1:-1;;;4288:68:5;;9415:2:6;4288:68:5;;;9397:21:6;9454:2;9434:18;;;9427:30;9493:31;9473:18;;;9466:59;9542:18;;4288:68:5;9213:353:6;4288:68:5;4388:28;4394:10;4406:9;4388:5;:28::i;:::-;4452:6;;:36;;-1:-1:-1;;;4452:36:5;;4468:10;4452:36;;;8660:51:6;8727:18;;;8720:34;;;-1:-1:-1;;;;;4452:6:5;;;;:15;;8633:18:6;;4452:36:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4499:6:5;;:36;;-1:-1:-1;;;4499:36:5;;4515:10;4499:36;;;8660:51:6;8727:18;;;8720:34;;;-1:-1:-1;;;;;4499:6:5;;;;:15;;8633:18:6;;4499:36:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4585:6:5;;:31;;-1:-1:-1;;;4585:31:5;;4610:4;4585:31;;;1950:51:6;-1:-1:-1;;;;;4585:6:5;;;;:16;;1923:18:6;;4585:31:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4574:8;:42;4638:6;;:31;;-1:-1:-1;;;4638:31:5;;4663:4;4638:31;;;1950:51:6;-1:-1:-1;;;;;4638:6:5;;;;:16;;1923:18:6;;4638:31:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4627:8;:42;4687:34;;;4170:25:6;;;4226:2;4211:18;;4204:34;;;4692:10:5;;4687:34;;4143:18:6;4687:34:5;;;;;;;3892:837;;;3805:924;;;:::o;2299:1336::-;2485:6;;:62;;-1:-1:-1;;;2485:62:5;;2378:14;;-1:-1:-1;;;;;2485:6:5;;:19;;:62;;2505:10;;2525:4;;2532:14;;2485:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2558:6:5;;:62;;-1:-1:-1;;;2558:62:5;;-1:-1:-1;;;;;2558:6:5;;;;:19;;:62;;2578:10;;2598:4;;2605:14;;2558:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2668:17;2688:13;3222:12:1;;;3144:97;2688:13:5;2668:33;;2716:12;2732:1;2716:17;2712:480;;2879:37;2884:31;2901:14;2884;:31;:::i;:::-;2879:4;:37::i;:::-;2867:49;;2712:480;;;3130:8;;3094:86;;3098:29;3115:12;3098:14;:29;:::i;:::-;:40;;;;:::i;:::-;3171:8;;3140:29;3157:12;3140:14;:29;:::i;:::-;:39;;;;:::i;:::-;3094:3;:86::i;:::-;3082:98;;2712:480;3260:1;3248:9;:13;3240:55;;;;-1:-1:-1;;;3240:55:5;;9773:2:6;3240:55:5;;;9755:21:6;9812:2;9792:18;;;9785:30;9851:31;9831:18;;;9824:59;9900:18;;3240:55:5;9571:353:6;3240:55:5;3347:6;;:31;;-1:-1:-1;;;3347:31:5;;3372:4;3347:31;;;1950:51:6;-1:-1:-1;;;;;3347:6:5;;;;:16;;1923:18:6;;3347:31:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3336:8;:42;3400:6;;:31;;-1:-1:-1;;;3400:31:5;;3425:4;3400:31;;;1950:51:6;-1:-1:-1;;;;;3400:6:5;;;;:16;;1923:18:6;;3400:31:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3389:8;:42;3525:28;3531:10;3543:9;3525:5;:28::i;:::-;3579:48;;;4170:25:6;;;4226:2;4211:18;;4204:34;;;3584:10:5;;3579:48;;4143:18:6;3579:48:5;;;;;;;2393:1242;2299:1336;;;;:::o;3610:178:1:-;3679:4;735:10:4;3733:27:1;735:10:4;3750:2:1;3754:5;3733:9;:27::i;8989:128::-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;-1:-1:-1;;;;;3952:18:1;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:1;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:1;;-1:-1:-1;;;;;10149:32:6;;10936:60:1;;;10131:51:6;10198:18;;;10191:34;;;10241:18;;;10234:34;;;10104:18;;10936:60:1;9929:345:6;10881:130:1;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10752:388;10663:477;;;:::o;5656:300::-;-1:-1:-1;;;;;5739:18:1;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:1;;5807:1;5780:30;;;1950:51:6;1923:18;;5780:30:1;1790:217:6;5735:86:1;-1:-1:-1;;;;;5834:16:1;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:1;;5902:1;5873:32;;;1950:51:6;1923:18;;5873:32:1;1790:217:6;5830:86:1;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;8247:206::-;-1:-1:-1;;;;;8317:21:1;;8313:89;;8361:30;;-1:-1:-1;;;8361:30:1;;8388:1;8361:30;;;1950:51:6;1923:18;;8361:30:1;1790:217:6;8313:89:1;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;1659:303:5:-;1704:6;1731:1;1727;:5;1723:232;;;-1:-1:-1;1753:1:5;1769:6;1778:5;1782:1;1753;1778:5;:::i;:::-;:9;;1786:1;1778:9;:::i;:::-;1769:18;;1802:92;1813:1;1809;:5;1802:92;;;1839:1;-1:-1:-1;1839:1:5;1877;1839;1864:5;1839:1;1864;:5;:::i;:::-;:9;;;;:::i;:::-;1863:15;;;;:::i;:::-;1859:19;;1802:92;;;1734:171;1659:303;;;:::o;1723:232::-;1915:6;;1911:44;;-1:-1:-1;1942:1:5;1911:44;1659:303;;;:::o;1429:96::-;1481:6;1508:1;1504;:5;:13;;1516:1;1504:13;;;1512:1;1504:13;1500:17;1429:96;-1:-1:-1;;;1429:96:5:o;7721:208:1:-;-1:-1:-1;;;;;7791:21:1;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:1;;7864:1;7835:32;;;1950:51:6;1923:18;;7835:32:1;1790:217:6;7787:91:1;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;9949:432::-;-1:-1:-1;;;;;10061:19:1;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:1;;10132:1;10103:32;;;1950:51:6;1923:18;;10103:32:1;1790:217:6;10057:89:1;-1:-1:-1;;;;;10159:21:1;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:1;;10231:1;10203:31;;;1950:51:6;1923:18;;10203:31:1;1790:217:6;10155:90:1;-1:-1:-1;;;;;10254:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:1;10342:5;-1:-1:-1;;;;;10333:31:1;;10358:5;10333:31;;;;631:25:6;;619:2;604:18;;485:177;10333:31:1;;;;;;;;9949:432;;;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:1;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:1;;-1:-1:-1;6356:540:1;;-1:-1:-1;;;;;6570:15:1;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:1;;-1:-1:-1;;;;;10149:32:6;;6649:50:1;;;10131:51:6;10198:18;;;10191:34;;;10241:18;;;10234:34;;;10104:18;;6649:50:1;9929:345:6;6599:115:1;-1:-1:-1;;;;;6834:15:1;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:1;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:1;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:1;7355:4;-1:-1:-1;;;;;7346:25:1;;7365:5;7346:25;;;;631::6;;619:2;604:18;;485:177;7346:25:1;;;;;;;;6271:1107;;;:::o;14:466:6:-;91:6;99;107;160:2;148:9;139:7;135:23;131:32;128:52;;;176:1;173;166:12;128:52;-1:-1:-1;;221:23:6;;;341:2;326:18;;313:32;;-1:-1:-1;444:2:6;429:18;;;416:32;;14:466;-1:-1:-1;14:466:6:o;667:418::-;816:2;805:9;798:21;779:4;848:6;842:13;891:6;886:2;875:9;871:18;864:34;950:6;945:2;937:6;933:15;928:2;917:9;913:18;907:50;1006:1;1001:2;992:6;981:9;977:22;973:31;966:42;1076:2;1069;1065:7;1060:2;1052:6;1048:15;1044:29;1033:9;1029:45;1025:54;1017:62;;;667:418;;;;:::o;1090:131::-;-1:-1:-1;;;;;1165:31:6;;1155:42;;1145:70;;1211:1;1208;1201:12;1145:70;1090:131;:::o;1226:367::-;1294:6;1302;1355:2;1343:9;1334:7;1330:23;1326:32;1323:52;;;1371:1;1368;1361:12;1323:52;1410:9;1397:23;1429:31;1454:5;1429:31;:::i;:::-;1479:5;1557:2;1542:18;;;;1529:32;;-1:-1:-1;;;1226:367:6:o;2012:508::-;2089:6;2097;2105;2158:2;2146:9;2137:7;2133:23;2129:32;2126:52;;;2174:1;2171;2164:12;2126:52;2213:9;2200:23;2232:31;2257:5;2232:31;:::i;:::-;2282:5;-1:-1:-1;2339:2:6;2324:18;;2311:32;2352:33;2311:32;2352:33;:::i;:::-;2012:508;;2404:7;;-1:-1:-1;;;2484:2:6;2469:18;;;;2456:32;;2012:508::o;2714:501::-;2805:6;2813;2821;2874:2;2862:9;2853:7;2849:23;2845:32;2842:52;;;2890:1;2887;2880:12;2842:52;2935:23;;;-1:-1:-1;3034:2:6;3019:18;;3006:32;3047:33;3006:32;3047:33;:::i;3513:247::-;3572:6;3625:2;3613:9;3604:7;3600:23;3596:32;3593:52;;;3641:1;3638;3631:12;3593:52;3680:9;3667:23;3699:31;3724:5;3699:31;:::i;3765:226::-;3824:6;3877:2;3865:9;3856:7;3852:23;3848:32;3845:52;;;3893:1;3890;3883:12;3845:52;-1:-1:-1;3938:23:6;;3765:226;-1:-1:-1;3765:226:6:o;4249:346::-;4317:6;4325;4378:2;4366:9;4357:7;4353:23;4349:32;4346:52;;;4394:1;4391;4384:12;4346:52;-1:-1:-1;;4439:23:6;;;4559:2;4544:18;;;4531:32;;-1:-1:-1;4249:346:6:o;4600:388::-;4668:6;4676;4729:2;4717:9;4708:7;4704:23;4700:32;4697:52;;;4745:1;4742;4735:12;4697:52;4784:9;4771:23;4803:31;4828:5;4803:31;:::i;:::-;4853:5;-1:-1:-1;4910:2:6;4895:18;;4882:32;4923:33;4882:32;4923:33;:::i;:::-;4975:7;4965:17;;;4600:388;;;;;:::o;5692:127::-;5753:10;5748:3;5744:20;5741:1;5734:31;5784:4;5781:1;5774:15;5808:4;5805:1;5798:15;5824:125;5889:9;;;5910:10;;;5907:36;;;5923:18;;:::i;5954:168::-;6027:9;;;6058;;6075:15;;;6069:22;;6055:37;6045:71;;6096:18;;:::i;6127:217::-;6167:1;6193;6183:132;;6237:10;6232:3;6228:20;6225:1;6218:31;6272:4;6269:1;6262:15;6300:4;6297:1;6290:15;6183:132;-1:-1:-1;6329:9:6;;6127:217::o;6349:380::-;6428:1;6424:12;;;;6471;;;6492:61;;6546:4;6538:6;6534:17;6524:27;;6492:61;6599:2;6591:6;6588:14;6568:18;6565:38;6562:161;;6645:10;6640:3;6636:20;6633:1;6626:31;6680:4;6677:1;6670:15;6708:4;6705:1;6698:15;6734:350;6936:2;6918:21;;;6975:2;6955:18;;;6948:30;7014:28;7009:2;6994:18;;6987:56;7075:2;7060:18;;6734:350::o;7639:184::-;7709:6;7762:2;7750:9;7741:7;7737:23;7733:32;7730:52;;;7778:1;7775;7768:12;7730:52;-1:-1:-1;7801:16:6;;7639:184;-1:-1:-1;7639:184:6:o;7828:371::-;-1:-1:-1;;;;;8048:32:6;;;8030:51;;8117:32;;;;8112:2;8097:18;;8090:60;8181:2;8166:18;;8159:34;;;;8018:2;8003:18;;7828:371::o;8204:277::-;8271:6;8324:2;8312:9;8303:7;8299:23;8295:32;8292:52;;;8340:1;8337;8330:12;8292:52;8372:9;8366:16;8425:5;8418:13;8411:21;8404:5;8401:32;8391:60;;8447:1;8444;8437:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1143600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addLiquidity(uint256,uint256)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24773",
								"balanceOf(address)": "2587",
								"decimals()": "243",
								"getAmountOut(uint256,uint256,uint256)": "infinite",
								"name()": "infinite",
								"removeLiquidity(uint256)": "infinite",
								"reserve0()": "2306",
								"reserve1()": "2328",
								"swap(uint256,address,uint256)": "infinite",
								"symbol()": "infinite",
								"token0()": "2426",
								"token1()": "2424",
								"totalSupply()": "2303",
								"transfer(address,uint256)": "51275",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"min(uint256,uint256)": "60",
								"sqrt(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 705,
									"end": 7090,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 705,
									"end": 7090,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 705,
									"end": 7090,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1256,
									"end": 1388,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 1256,
									"end": 1388,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1256,
									"end": 1388,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1256,
									"end": 1388,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1256,
									"end": 1388,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1256,
									"end": 1388,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1256,
									"end": 1388,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1256,
									"end": 1388,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1256,
									"end": 1388,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1256,
									"end": 1388,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1256,
									"end": 1388,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1256,
									"end": 1388,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1256,
									"end": 1388,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1256,
									"end": 1388,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1256,
									"end": 1388,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 1256,
									"end": 1388,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1256,
									"end": 1388,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1256,
									"end": 1388,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1256,
									"end": 1388,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1256,
									"end": 1388,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1256,
									"end": 1388,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1256,
									"end": 1388,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1256,
									"end": 1388,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1256,
									"end": 1388,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1256,
									"end": 1388,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1256,
									"end": 1388,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1256,
									"end": 1388,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1256,
									"end": 1388,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1256,
									"end": 1388,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1256,
									"end": 1388,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1256,
									"end": 1388,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1256,
									"end": 1388,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "A"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "53696D706C655377617"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "5353"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1337,
									"end": 1343,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1337,
									"end": 1353,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1337,
									"end": 1353,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1337,
									"end": 1353,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 1337,
									"end": 1353,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1337,
									"end": 1353,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1337,
									"end": 1353,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1337,
									"end": 1353,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1337,
									"end": 1353,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1337,
									"end": 1353,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1337,
									"end": 1353,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1337,
									"end": 1353,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1337,
									"end": 1353,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1370,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1364,
									"end": 1380,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1380,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1380,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1380,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1380,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1380,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1380,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1380,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1380,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1380,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1380,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1380,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1380,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1380,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1380,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 705,
									"end": 7090,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 705,
									"end": 7090,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 14,
									"end": 199,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 14,
									"end": 199,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 101,
									"end": 114,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 101,
									"end": 114,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 143,
									"end": 174,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 143,
									"end": 174,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 133,
									"end": 175,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 133,
									"end": 175,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 123,
									"end": 193,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 123,
									"end": 193,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 189,
									"end": 190,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 186,
									"end": 187,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 191,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 123,
									"end": 193,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 123,
									"end": 193,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 14,
									"end": 199,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 14,
									"end": 199,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 14,
									"end": 199,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 14,
									"end": 199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 204,
									"end": 541,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 204,
									"end": 541,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 311,
									"end": 317,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 319,
									"end": 325,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 372,
									"end": 374,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 360,
									"end": 369,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 351,
									"end": 358,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 347,
									"end": 370,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 343,
									"end": 375,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 340,
									"end": 392,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 340,
									"end": 392,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 340,
									"end": 392,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 388,
									"end": 389,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 385,
									"end": 386,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 378,
									"end": 390,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 340,
									"end": 392,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 340,
									"end": 392,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 411,
									"end": 459,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 449,
									"end": 458,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 411,
									"end": 459,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 411,
									"end": 459,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 411,
									"end": 459,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 411,
									"end": 459,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 401,
									"end": 459,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 401,
									"end": 459,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 478,
									"end": 535,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 531,
									"end": 533,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 520,
									"end": 529,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 516,
									"end": 534,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 478,
									"end": 535,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 478,
									"end": 535,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 478,
									"end": 535,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 478,
									"end": 535,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 468,
									"end": 535,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 468,
									"end": 535,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 204,
									"end": 541,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 204,
									"end": 541,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 204,
									"end": 541,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 204,
									"end": 541,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 204,
									"end": 541,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 204,
									"end": 541,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 546,
									"end": 673,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 546,
									"end": 673,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 607,
									"end": 617,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 602,
									"end": 605,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 598,
									"end": 618,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 595,
									"end": 596,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 588,
									"end": 619,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 638,
									"end": 642,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 635,
									"end": 636,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 628,
									"end": 643,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 662,
									"end": 666,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 659,
									"end": 660,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 652,
									"end": 667,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 678,
									"end": 1058,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 678,
									"end": 1058,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 757,
									"end": 758,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 753,
									"end": 765,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 753,
									"end": 765,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 753,
									"end": 765,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 753,
									"end": 765,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 800,
									"end": 812,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 800,
									"end": 812,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 800,
									"end": 812,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 821,
									"end": 882,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 821,
									"end": 882,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 875,
									"end": 879,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 867,
									"end": 873,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 863,
									"end": 880,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 853,
									"end": 880,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 853,
									"end": 880,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 821,
									"end": 882,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 821,
									"end": 882,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 928,
									"end": 930,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 920,
									"end": 926,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 917,
									"end": 931,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 897,
									"end": 915,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 894,
									"end": 932,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 891,
									"end": 1052,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 891,
									"end": 1052,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 974,
									"end": 984,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 969,
									"end": 972,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 965,
									"end": 985,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 962,
									"end": 963,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 955,
									"end": 986,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1009,
									"end": 1013,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1006,
									"end": 1007,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 999,
									"end": 1014,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1037,
									"end": 1041,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1034,
									"end": 1035,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1027,
									"end": 1042,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 891,
									"end": 1052,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 891,
									"end": 1052,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 891,
									"end": 1052,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 678,
									"end": 1058,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 678,
									"end": 1058,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 678,
									"end": 1058,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 678,
									"end": 1058,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1189,
									"end": 1707,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1189,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1291,
									"end": 1293,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1286,
									"end": 1289,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1283,
									"end": 1294,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1280,
									"end": 1701,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1280,
									"end": 1701,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1280,
									"end": 1701,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1327,
									"end": 1332,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1324,
									"end": 1325,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1317,
									"end": 1333,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1375,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1368,
									"end": 1369,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1376,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1441,
									"end": 1443,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1429,
									"end": 1439,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1425,
									"end": 1444,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1422,
									"end": 1423,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1418,
									"end": 1445,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1412,
									"end": 1416,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1408,
									"end": 1446,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1477,
									"end": 1481,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1465,
									"end": 1475,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1462,
									"end": 1482,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1459,
									"end": 1506,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1459,
									"end": 1506,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1459,
									"end": 1506,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1500,
									"end": 1504,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1459,
									"end": 1506,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1459,
									"end": 1506,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1555,
									"end": 1557,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1550,
									"end": 1553,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1543,
									"end": 1544,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1539,
									"end": 1559,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1533,
									"end": 1537,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1560,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1519,
									"end": 1560,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1519,
									"end": 1560,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1691,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1610,
									"end": 1691,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1628,
									"end": 1630,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1626,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1618,
									"end": 1631,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1691,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1691,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1610,
									"end": 1691,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1687,
									"end": 1688,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1673,
									"end": 1689,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1673,
									"end": 1689,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1654,
									"end": 1655,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1643,
									"end": 1656,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1691,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1610,
									"end": 1691,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1610,
									"end": 1691,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1610,
									"end": 1691,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1614,
									"end": 1617,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1614,
									"end": 1617,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1280,
									"end": 1701,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1280,
									"end": 1701,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1189,
									"end": 1707,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1189,
									"end": 1707,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1189,
									"end": 1707,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1189,
									"end": 1707,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1883,
									"end": 3182,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1883,
									"end": 3182,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2003,
									"end": 2013,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2003,
									"end": 2013,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2025,
									"end": 2055,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2025,
									"end": 2055,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 2058,
									"end": 2076,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2087,
									"end": 2184,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2177,
									"end": 2183,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2137,
									"end": 2175,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 2169,
									"end": 2173,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2163,
									"end": 2174,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2137,
									"end": 2175,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 2137,
									"end": 2175,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2137,
									"end": 2175,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 2137,
									"end": 2175,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2131,
									"end": 2135,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2087,
									"end": 2184,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 2087,
									"end": 2184,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2087,
									"end": 2184,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2087,
									"end": 2184,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2233,
									"end": 2237,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2264,
									"end": 2266,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2253,
									"end": 2267,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2253,
									"end": 2267,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2281,
									"end": 2282,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2276,
									"end": 2925,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2276,
									"end": 2925,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 2276,
									"end": 2925,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 2276,
									"end": 2925,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2969,
									"end": 2970,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2986,
									"end": 2992,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2983,
									"end": 3072,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2983,
									"end": 3072,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 2983,
									"end": 3072,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3038,
									"end": 3057,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3038,
									"end": 3057,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3038,
									"end": 3057,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3032,
									"end": 3058,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2983,
									"end": 3072,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 2983,
									"end": 3072,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1840,
									"end": 1841,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1836,
									"end": 1847,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1836,
									"end": 1847,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1836,
									"end": 1847,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1832,
									"end": 1856,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1828,
									"end": 1857,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1818,
									"end": 1858,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1864,
									"end": 1865,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1860,
									"end": 1871,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1860,
									"end": 1871,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1860,
									"end": 1871,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1815,
									"end": 1872,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 3085,
									"end": 3166,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3085,
									"end": 3166,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2246,
									"end": 3176,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 2246,
									"end": 3176,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2276,
									"end": 2925,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 2276,
									"end": 2925,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1136,
									"end": 1137,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1129,
									"end": 1143,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1129,
									"end": 1143,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1129,
									"end": 1143,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1173,
									"end": 1177,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1160,
									"end": 1178,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1160,
									"end": 1178,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2312,
									"end": 2332,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2312,
									"end": 2332,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2312,
									"end": 2332,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2430,
									"end": 2652,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 2430,
									"end": 2652,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2444,
									"end": 2451,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2441,
									"end": 2442,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2438,
									"end": 2452,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2430,
									"end": 2652,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2430,
									"end": 2652,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 2430,
									"end": 2652,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2526,
									"end": 2545,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 2526,
									"end": 2545,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2526,
									"end": 2545,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2520,
									"end": 2546,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2505,
									"end": 2547,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2505,
									"end": 2547,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2633,
									"end": 2637,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2618,
									"end": 2638,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 2618,
									"end": 2638,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2618,
									"end": 2638,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2618,
									"end": 2638,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 2586,
									"end": 2587,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2574,
									"end": 2588,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2574,
									"end": 2588,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2574,
									"end": 2588,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2574,
									"end": 2588,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2460,
									"end": 2472,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2430,
									"end": 2652,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 2430,
									"end": 2652,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2430,
									"end": 2652,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 2430,
									"end": 2652,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2434,
									"end": 2437,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2680,
									"end": 2686,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2671,
									"end": 2678,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2668,
									"end": 2687,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2665,
									"end": 2866,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2665,
									"end": 2866,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 2665,
									"end": 2866,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2741,
									"end": 2760,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2741,
									"end": 2760,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2741,
									"end": 2760,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2735,
									"end": 2761,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2824,
									"end": 2825,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2820,
									"end": 2834,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 2820,
									"end": 2834,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2820,
									"end": 2834,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2836,
									"end": 2839,
									"name": "PUSH",
									"source": 6,
									"value": "F8"
								},
								{
									"begin": 2816,
									"end": 2840,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2812,
									"end": 2849,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2808,
									"end": 2850,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2793,
									"end": 2851,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2778,
									"end": 2852,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2778,
									"end": 2852,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2665,
									"end": 2866,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 2665,
									"end": 2866,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2912,
									"end": 2913,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2896,
									"end": 2910,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2896,
									"end": 2910,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2896,
									"end": 2910,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2892,
									"end": 2914,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2879,
									"end": 2915,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2879,
									"end": 2915,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1883,
									"end": 3182,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1883,
									"end": 3182,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1883,
									"end": 3182,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 705,
									"end": 7090,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 705,
									"end": 7090,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 705,
									"end": 7090,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 705,
									"end": 7090,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 705,
									"end": 7090,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 705,
									"end": 7090,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 705,
									"end": 7090,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122072c8ca44da9b9415eaac567ca24e1061546afef935c7b424d196eaf8bdc0ada464736f6c634300081b0033",
									".code": [
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH",
											"source": 5,
											"value": "443CB4BC"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH",
											"source": 5,
											"value": "9C8F9F23"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH",
											"source": 5,
											"value": "9C8F9F23"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH",
											"source": 5,
											"value": "9CD441DA"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH",
											"source": 5,
											"value": "D21220A7"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH",
											"source": 5,
											"value": "443CB4BC"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH",
											"source": 5,
											"value": "5A76F25E"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH",
											"source": 5,
											"value": "43264349"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH",
											"source": 5,
											"value": "54D50D4"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH",
											"source": 5,
											"value": "DFE1681"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 705,
											"end": 7090,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5035,
											"end": 5351,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 5035,
											"end": 5351,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5035,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 5035,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5035,
											"end": 5351,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5035,
											"end": 5351,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5035,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 5035,
											"end": 5351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5035,
											"end": 5351,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5035,
											"end": 5351,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5035,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 5035,
											"end": 5351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5035,
											"end": 5351,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 5035,
											"end": 5351,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5035,
											"end": 5351,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5035,
											"end": 5351,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 631,
											"end": 656,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 631,
											"end": 656,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 631,
											"end": 656,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 619,
											"end": 621,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 622,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5035,
											"end": 5351,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 5035,
											"end": 5351,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5035,
											"end": 5351,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5035,
											"end": 5351,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5035,
											"end": 5351,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5035,
											"end": 5351,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5035,
											"end": 5351,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5035,
											"end": 5351,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5035,
											"end": 5351,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1777,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1763,
											"end": 1777,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1778,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1738,
											"end": 1779,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1738,
											"end": 1779,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1726,
											"end": 1728,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1711,
											"end": 1729,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1598,
											"end": 1785,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 755,
											"end": 775,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 755,
											"end": 775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 755,
											"end": 775,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 755,
											"end": 775,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 755,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 755,
											"end": 775,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 755,
											"end": 775,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 755,
											"end": 775,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 755,
											"end": 775,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 755,
											"end": 775,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 755,
											"end": 775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 755,
											"end": 775,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 755,
											"end": 775,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1968,
											"end": 2000,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2000,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1968,
											"end": 2000,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 2001,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 2001,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1938,
											"end": 1940,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 755,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1790,
											"end": 2007,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2667,
											"end": 2703,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2667,
											"end": 2703,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2655,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2640,
											"end": 2658,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2525,
											"end": 2709,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 7087,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 5555,
											"end": 7087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5555,
											"end": 7087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 5555,
											"end": 7087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 5555,
											"end": 7087,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5555,
											"end": 7087,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5555,
											"end": 7087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 5555,
											"end": 7087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5555,
											"end": 7087,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 5555,
											"end": 7087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5555,
											"end": 7087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 5555,
											"end": 7087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5555,
											"end": 7087,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 5555,
											"end": 7087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5555,
											"end": 7087,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5555,
											"end": 7087,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5555,
											"end": 7087,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3408,
											"end": 3433,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3408,
											"end": 3433,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3408,
											"end": 3433,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3469,
											"end": 3501,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3469,
											"end": 3501,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3469,
											"end": 3501,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3464,
											"end": 3466,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3449,
											"end": 3467,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3449,
											"end": 3467,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3442,
											"end": 3502,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3381,
											"end": 3399,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 7087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 3220,
											"end": 3508,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 835,
											"end": 855,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 835,
											"end": 855,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 835,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 835,
											"end": 855,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 835,
											"end": 855,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 835,
											"end": 855,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 835,
											"end": 855,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 862,
											"end": 882,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 862,
											"end": 882,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 862,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 862,
											"end": 882,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 862,
											"end": 882,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 862,
											"end": 882,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 862,
											"end": 882,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3805,
											"end": 4729,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 3805,
											"end": 4729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3805,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 3805,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 3805,
											"end": 4729,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3805,
											"end": 4729,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3805,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 3805,
											"end": 4729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3805,
											"end": 4729,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 3805,
											"end": 4729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3805,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 3805,
											"end": 4729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3805,
											"end": 4729,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 3805,
											"end": 4729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3805,
											"end": 4729,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3805,
											"end": 4729,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3805,
											"end": 4729,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4170,
											"end": 4195,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4170,
											"end": 4195,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4170,
											"end": 4195,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4226,
											"end": 4228,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4211,
											"end": 4229,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4211,
											"end": 4229,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4238,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4238,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4238,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4238,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3805,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 3996,
											"end": 4244,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2299,
											"end": 3635,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2299,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 2299,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2299,
											"end": 3635,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 3635,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2299,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2299,
											"end": 3635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 3635,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2299,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2299,
											"end": 3635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 782,
											"end": 802,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 782,
											"end": 802,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 782,
											"end": 802,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 782,
											"end": 802,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 782,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 782,
											"end": 802,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 782,
											"end": 802,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 782,
											"end": 802,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 782,
											"end": 802,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5035,
											"end": 5351,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 5035,
											"end": 5351,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5126,
											"end": 5140,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5172,
											"end": 5173,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5161,
											"end": 5169,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5161,
											"end": 5173,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 5153,
											"end": 5197,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5197,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5153,
											"end": 5197,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5153,
											"end": 5197,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5197,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5195,
											"end": 5197,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5153,
											"end": 5197,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5153,
											"end": 5197,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5197,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5198,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5234,
											"end": 5236,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 5214,
											"end": 5232,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5214,
											"end": 5232,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5214,
											"end": 5232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5207,
											"end": 5237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125394D551919250D251539517D05353D55395"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5253,
											"end": 5271,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5253,
											"end": 5271,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5253,
											"end": 5271,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5246,
											"end": 5295,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5312,
											"end": 5330,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5312,
											"end": 5330,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5153,
											"end": 5197,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5153,
											"end": 5197,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5197,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5153,
											"end": 5197,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5197,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5197,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5197,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5197,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5197,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5197,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 5153,
											"end": 5197,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5228,
											"end": 5229,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5216,
											"end": 5225,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5216,
											"end": 5229,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5216,
											"end": 5247,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5216,
											"end": 5247,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5216,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 5216,
											"end": 5247,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5216,
											"end": 5247,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5246,
											"end": 5247,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5233,
											"end": 5243,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5233,
											"end": 5247,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5216,
											"end": 5247,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 5216,
											"end": 5247,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5208,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 5208,
											"end": 5274,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5208,
											"end": 5274,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5208,
											"end": 5274,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5208,
											"end": 5274,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5208,
											"end": 5274,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5543,
											"end": 5545,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5208,
											"end": 5274,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5208,
											"end": 5274,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5208,
											"end": 5274,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5525,
											"end": 5546,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5584,
											"name": "PUSH",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 5562,
											"end": 5580,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5562,
											"end": 5580,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5562,
											"end": 5580,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5585,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "494E53554646494349454E545F4C4951554944495459"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5601,
											"end": 5619,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5601,
											"end": 5619,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5601,
											"end": 5619,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5594,
											"end": 5646,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5663,
											"end": 5681,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5663,
											"end": 5681,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5208,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5341,
											"end": 5687,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5208,
											"end": 5274,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 5208,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5322,
											"end": 5342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 5334,
											"end": 5342,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5322,
											"end": 5331,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5322,
											"end": 5342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 5322,
											"end": 5342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5322,
											"end": 5342,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 5322,
											"end": 5342,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5297,
											"end": 5318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 5308,
											"end": 5318,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5297,
											"end": 5305,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5297,
											"end": 5318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 5297,
											"end": 5318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5297,
											"end": 5318,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 5297,
											"end": 5318,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5297,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 5297,
											"end": 5343,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5297,
											"end": 5343,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5297,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 5297,
											"end": 5343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5297,
											"end": 5343,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 5297,
											"end": 5343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5285,
											"end": 5343,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5035,
											"end": 5351,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5035,
											"end": 5351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5555,
											"end": 7087,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 5555,
											"end": 7087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5637,
											"end": 5651,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5653,
											"end": 5668,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5699,
											"end": 5700,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5688,
											"end": 5696,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5688,
											"end": 5700,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5680,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 5680,
											"end": 5731,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5680,
											"end": 5731,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5680,
											"end": 5731,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5680,
											"end": 5731,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5680,
											"end": 5731,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5680,
											"end": 5731,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5680,
											"end": 5731,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5680,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5680,
											"end": 5731,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5680,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 5680,
											"end": 5731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5680,
											"end": 5731,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 5680,
											"end": 5731,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5761,
											"end": 5767,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 5761,
											"end": 5767,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5750,
											"end": 5767,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5750,
											"end": 5767,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5750,
											"end": 5767,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5761,
											"end": 5767,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5761,
											"end": 5767,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5750,
											"end": 5767,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5750,
											"end": 5767,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5750,
											"end": 5788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 5750,
											"end": 5788,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5782,
											"end": 5788,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 5782,
											"end": 5788,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5771,
											"end": 5788,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5771,
											"end": 5788,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5771,
											"end": 5788,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5782,
											"end": 5788,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5782,
											"end": 5788,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5771,
											"end": 5788,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5750,
											"end": 5788,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 5750,
											"end": 5788,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5742,
											"end": 5806,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 5742,
											"end": 5806,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5742,
											"end": 5806,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5742,
											"end": 5806,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5742,
											"end": 5806,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5742,
											"end": 5806,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7291,
											"end": 7293,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5742,
											"end": 5806,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5742,
											"end": 5806,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5742,
											"end": 5806,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7273,
											"end": 7294,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7330,
											"end": 7332,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 7310,
											"end": 7328,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7310,
											"end": 7328,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7310,
											"end": 7328,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7303,
											"end": 7333,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24A72B20A624A22FAA27A5A2A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7349,
											"end": 7367,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7349,
											"end": 7367,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7349,
											"end": 7367,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7342,
											"end": 7385,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7402,
											"end": 7420,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7402,
											"end": 7420,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5742,
											"end": 5806,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 7089,
											"end": 7426,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5742,
											"end": 5806,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 5742,
											"end": 5806,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5849,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 5843,
											"end": 5849,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5868,
											"end": 5872,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 2001,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5827,
											"end": 5840,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5827,
											"end": 5840,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5843,
											"end": 5849,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5859,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 5843,
											"end": 5859,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 5843,
											"end": 5874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 5843,
											"end": 5874,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5907,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 5901,
											"end": 5907,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5926,
											"end": 5930,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 2001,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5827,
											"end": 5874,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5827,
											"end": 5874,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5885,
											"end": 5898,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5885,
											"end": 5898,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5901,
											"end": 5907,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5907,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5907,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5907,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5917,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 5901,
											"end": 5917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 5901,
											"end": 5932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 5901,
											"end": 5932,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5959,
											"end": 5965,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 5959,
											"end": 5965,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5885,
											"end": 5932,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5885,
											"end": 5932,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5959,
											"end": 5965,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5959,
											"end": 5965,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5959,
											"end": 5965,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5948,
											"end": 5965,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5948,
											"end": 5965,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5948,
											"end": 5965,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5948,
											"end": 5965,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 5945,
											"end": 6852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6036,
											"end": 6042,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 6036,
											"end": 6042,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6036,
											"end": 6042,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6036,
											"end": 6042,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6119,
											"end": 6161,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 6132,
											"end": 6140,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6142,
											"end": 6150,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6152,
											"end": 6160,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6119,
											"end": 6131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 6119,
											"end": 6161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6119,
											"end": 6161,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 6119,
											"end": 6161,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6107,
											"end": 6161,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6107,
											"end": 6161,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6196,
											"end": 6208,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6184,
											"end": 6193,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6184,
											"end": 6208,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6176,
											"end": 6239,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 6176,
											"end": 6239,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6176,
											"end": 6239,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6176,
											"end": 6239,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6176,
											"end": 6239,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6176,
											"end": 6239,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6176,
											"end": 6239,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6176,
											"end": 6239,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6176,
											"end": 6239,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6176,
											"end": 6239,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6176,
											"end": 6239,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 6176,
											"end": 6239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6176,
											"end": 6239,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 6176,
											"end": 6239,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6283,
											"end": 6303,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6303,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6303,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 6283,
											"end": 6303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6304,
											"end": 6314,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6304,
											"end": 6314,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6324,
											"end": 6328,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 6324,
											"end": 6328,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6331,
											"end": 6339,
											"name": "DUP13",
											"source": 5
										},
										{
											"begin": 6331,
											"end": 6339,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 6283,
											"end": 6340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 6283,
											"end": 6340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 6283,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6373,
											"end": 6383,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8660,
											"end": 8711,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8727,
											"end": 8745,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8727,
											"end": 8745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8727,
											"end": 8745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8720,
											"end": 8754,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8720,
											"end": 8754,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8720,
											"end": 8754,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6355,
											"end": 6372,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6372,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6372,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6372,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 6355,
											"end": 6372,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8633,
											"end": 8651,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 8633,
											"end": 8651,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 6355,
											"end": 6395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6355,
											"end": 6395,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 5945,
											"end": 6852,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 6852,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 5945,
											"end": 6852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6481,
											"end": 6487,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 6481,
											"end": 6487,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6481,
											"end": 6487,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6481,
											"end": 6487,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6564,
											"end": 6606,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 6577,
											"end": 6585,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6587,
											"end": 6595,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6597,
											"end": 6605,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6564,
											"end": 6576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 6564,
											"end": 6606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6564,
											"end": 6606,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 6564,
											"end": 6606,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6606,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6606,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6641,
											"end": 6653,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6629,
											"end": 6638,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6629,
											"end": 6653,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6621,
											"end": 6684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 6621,
											"end": 6684,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6621,
											"end": 6684,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6621,
											"end": 6684,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6621,
											"end": 6684,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6621,
											"end": 6684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6621,
											"end": 6684,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6621,
											"end": 6684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6621,
											"end": 6684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6621,
											"end": 6684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6621,
											"end": 6684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 6621,
											"end": 6684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6621,
											"end": 6684,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 6621,
											"end": 6684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6728,
											"end": 6748,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6748,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6748,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6748,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 6728,
											"end": 6748,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6749,
											"end": 6759,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6749,
											"end": 6759,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6769,
											"end": 6773,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 6769,
											"end": 6773,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6776,
											"end": 6784,
											"name": "DUP13",
											"source": 5
										},
										{
											"begin": 6776,
											"end": 6784,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 6728,
											"end": 6785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 6728,
											"end": 6785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 6728,
											"end": 6785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6818,
											"end": 6828,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8660,
											"end": 8711,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8727,
											"end": 8745,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8727,
											"end": 8745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8727,
											"end": 8745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8720,
											"end": 8754,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8720,
											"end": 8754,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8720,
											"end": 8754,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6800,
											"end": 6817,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6817,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6817,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6817,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 6800,
											"end": 6817,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8633,
											"end": 8651,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 8633,
											"end": 8651,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 6800,
											"end": 6840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6800,
											"end": 6840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 6852,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 5945,
											"end": 6852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6909,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 6903,
											"end": 6909,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6928,
											"end": 6932,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 2001,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6903,
											"end": 6909,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6909,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6909,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6909,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6919,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 6903,
											"end": 6919,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 6903,
											"end": 6934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 6903,
											"end": 6934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6892,
											"end": 6900,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 6892,
											"end": 6934,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6962,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 6956,
											"end": 6962,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6981,
											"end": 6985,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 2001,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6956,
											"end": 6962,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6962,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6962,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6962,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6972,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 6956,
											"end": 6972,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 6956,
											"end": 6987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 6956,
											"end": 6987,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6945,
											"end": 6953,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 6945,
											"end": 6987,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7005,
											"end": 7079,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7005,
											"end": 7079,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7005,
											"end": 7079,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8996,
											"end": 9021,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8996,
											"end": 9021,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8996,
											"end": 9021,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9057,
											"end": 9089,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9057,
											"end": 9089,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 9057,
											"end": 9089,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9052,
											"end": 9054,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9037,
											"end": 9055,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9037,
											"end": 9055,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9030,
											"end": 9090,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9106,
											"end": 9124,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9106,
											"end": 9124,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9106,
											"end": 9124,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9099,
											"end": 9133,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9099,
											"end": 9133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9099,
											"end": 9133,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9169,
											"end": 9201,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9169,
											"end": 9201,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9169,
											"end": 9201,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9164,
											"end": 9166,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 9149,
											"end": 9167,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9149,
											"end": 9167,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9142,
											"end": 9202,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7010,
											"end": 7020,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 7010,
											"end": 7020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7005,
											"end": 7079,
											"name": "PUSH",
											"source": 5,
											"value": "24043855BFBFEA0CCEA141E5A73D7116BF0BFE083EA900A791F4B407FF03E525"
										},
										{
											"begin": 7005,
											"end": 7079,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8983,
											"end": 8986,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 8968,
											"end": 8987,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7005,
											"end": 7079,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7005,
											"end": 7079,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7005,
											"end": 7079,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7005,
											"end": 7079,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7005,
											"end": 7079,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7005,
											"end": 7079,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7005,
											"end": 7079,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 5669,
											"end": 7087,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5669,
											"end": 7087,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5555,
											"end": 7087,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5555,
											"end": 7087,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5555,
											"end": 7087,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5555,
											"end": 7087,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5555,
											"end": 7087,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5555,
											"end": 7087,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5555,
											"end": 7087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3805,
											"end": 4729,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 3805,
											"end": 4729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3950,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3944,
											"end": 3950,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3969,
											"end": 3973,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 2001,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3864,
											"end": 3876,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3864,
											"end": 3876,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3864,
											"end": 3876,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3864,
											"end": 3876,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3864,
											"end": 3876,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3864,
											"end": 3876,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3944,
											"end": 3950,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3950,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3960,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 3944,
											"end": 3960,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 3944,
											"end": 3975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 3944,
											"end": 3975,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4008,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 4002,
											"end": 4008,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4027,
											"end": 4031,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 2001,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3928,
											"end": 3975,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 3975,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3986,
											"end": 3999,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3986,
											"end": 3999,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4002,
											"end": 4008,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4008,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4008,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4008,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4018,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 4002,
											"end": 4018,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 4002,
											"end": 4033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 4002,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3986,
											"end": 4033,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3986,
											"end": 4033,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4101,
											"end": 4118,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4121,
											"end": 4134,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4121,
											"end": 4134,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 4121,
											"end": 4134,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4101,
											"end": 4134,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4101,
											"end": 4134,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4155,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 4167,
											"end": 4175,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4155,
											"end": 4164,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4155,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 4155,
											"end": 4175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4155,
											"end": 4175,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 4155,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4155,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 4155,
											"end": 4190,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4155,
											"end": 4190,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4155,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 4155,
											"end": 4190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4155,
											"end": 4190,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 4155,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4145,
											"end": 4190,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4234,
											"end": 4246,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4211,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 4223,
											"end": 4231,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4211,
											"end": 4220,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4211,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 4211,
											"end": 4231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4211,
											"end": 4231,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 4211,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4211,
											"end": 4246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 4211,
											"end": 4246,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4211,
											"end": 4246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4211,
											"end": 4246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 4211,
											"end": 4246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4211,
											"end": 4246,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 4211,
											"end": 4246,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4201,
											"end": 4246,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4201,
											"end": 4246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4296,
											"end": 4303,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4296,
											"end": 4307,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4296,
											"end": 4322,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4296,
											"end": 4322,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4296,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 4296,
											"end": 4322,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4296,
											"end": 4322,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4321,
											"end": 4322,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4311,
											"end": 4318,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4311,
											"end": 4322,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4296,
											"end": 4322,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 4296,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4288,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 4288,
											"end": 4356,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4288,
											"end": 4356,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4288,
											"end": 4356,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4288,
											"end": 4356,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4288,
											"end": 4356,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9415,
											"end": 9417,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4288,
											"end": 4356,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4288,
											"end": 4356,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4288,
											"end": 4356,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9397,
											"end": 9418,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9454,
											"end": 9456,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 9434,
											"end": 9452,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9434,
											"end": 9452,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9434,
											"end": 9452,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9427,
											"end": 9457,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9493,
											"end": 9524,
											"name": "PUSH",
											"source": 6,
											"value": "494E53554646494349454E545F4C49515549444954595F4255524E4544000000"
										},
										{
											"begin": 9473,
											"end": 9491,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 9473,
											"end": 9491,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9473,
											"end": 9491,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9466,
											"end": 9525,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9542,
											"end": 9560,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 9542,
											"end": 9560,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 9213,
											"end": 9566,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4288,
											"end": 4356,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 4288,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4388,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 4394,
											"end": 4404,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4406,
											"end": 4415,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4388,
											"end": 4393,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 4388,
											"end": 4416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4388,
											"end": 4416,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 4388,
											"end": 4416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4458,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4452,
											"end": 4458,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4468,
											"end": 4478,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8660,
											"end": 8711,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8727,
											"end": 8745,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8727,
											"end": 8745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8727,
											"end": 8745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8720,
											"end": 8754,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8720,
											"end": 8754,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8720,
											"end": 8754,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4452,
											"end": 4458,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4458,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4458,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4458,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4467,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 4452,
											"end": 4467,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8633,
											"end": 8651,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 8633,
											"end": 8651,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4452,
											"end": 4488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 4452,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4499,
											"end": 4505,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 4499,
											"end": 4505,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4515,
											"end": 4525,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8660,
											"end": 8711,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8727,
											"end": 8745,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8727,
											"end": 8745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8727,
											"end": 8745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8720,
											"end": 8754,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8720,
											"end": 8754,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8720,
											"end": 8754,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4499,
											"end": 4505,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4505,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4505,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4505,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4514,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 4499,
											"end": 4514,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8633,
											"end": 8651,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 8633,
											"end": 8651,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4499,
											"end": 4535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 4499,
											"end": 4535,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4585,
											"end": 4591,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4585,
											"end": 4591,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4614,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 2001,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4585,
											"end": 4591,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4591,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4591,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4591,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4601,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 4585,
											"end": 4601,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 4585,
											"end": 4616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 4585,
											"end": 4616,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4582,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 4574,
											"end": 4616,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4644,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 4638,
											"end": 4644,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4663,
											"end": 4667,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 2001,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4638,
											"end": 4644,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4644,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4644,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4644,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4654,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 4638,
											"end": 4654,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 4638,
											"end": 4669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 4638,
											"end": 4669,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4627,
											"end": 4635,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 4627,
											"end": 4669,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4687,
											"end": 4721,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4687,
											"end": 4721,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4687,
											"end": 4721,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4170,
											"end": 4195,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4170,
											"end": 4195,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4170,
											"end": 4195,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4226,
											"end": 4228,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4211,
											"end": 4229,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4211,
											"end": 4229,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4238,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4238,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4238,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4692,
											"end": 4702,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4692,
											"end": 4702,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4687,
											"end": 4721,
											"name": "PUSH",
											"source": 5,
											"value": "49995E5DD6158CF69AD3E9777C46755A1A826A446C6416992167462DAD033B2A"
										},
										{
											"begin": 4687,
											"end": 4721,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4687,
											"end": 4721,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4687,
											"end": 4721,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4687,
											"end": 4721,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4687,
											"end": 4721,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4687,
											"end": 4721,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4687,
											"end": 4721,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4687,
											"end": 4721,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 4729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 4729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 4729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3805,
											"end": 4729,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3805,
											"end": 4729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3805,
											"end": 4729,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3805,
											"end": 4729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 3635,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2299,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2491,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2485,
											"end": 2491,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2378,
											"end": 2392,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2392,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2485,
											"end": 2491,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2491,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2504,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 2485,
											"end": 2504,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2525,
											"end": 2529,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2525,
											"end": 2529,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2532,
											"end": 2546,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2532,
											"end": 2546,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2485,
											"end": 2547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 2485,
											"end": 2547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 2485,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2558,
											"end": 2564,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2558,
											"end": 2564,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2558,
											"end": 2564,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2564,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2564,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2564,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2577,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 2558,
											"end": 2577,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2578,
											"end": 2588,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2578,
											"end": 2588,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2602,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2602,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2605,
											"end": 2619,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2605,
											"end": 2619,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2558,
											"end": 2620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 2558,
											"end": 2620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2620,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2668,
											"end": 2685,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2701,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2701,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 2688,
											"end": 2701,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2668,
											"end": 2701,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2668,
											"end": 2701,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2716,
											"end": 2728,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2732,
											"end": 2733,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2733,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2712,
											"end": 3192,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 2712,
											"end": 3192,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 2884,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 2901,
											"end": 2915,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2898,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2884,
											"end": 2915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2915,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 2884,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 2879,
											"end": 2916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2916,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 2879,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2867,
											"end": 2916,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2867,
											"end": 2916,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2712,
											"end": 3192,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 2712,
											"end": 3192,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2712,
											"end": 3192,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 2712,
											"end": 3192,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3138,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3130,
											"end": 3138,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 3094,
											"end": 3180,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 3115,
											"end": 3127,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3112,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 3098,
											"end": 3127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3127,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 3098,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 3098,
											"end": 3138,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3138,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 3098,
											"end": 3138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3138,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 3098,
											"end": 3138,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3171,
											"end": 3179,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 3171,
											"end": 3179,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3140,
											"end": 3169,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 3157,
											"end": 3169,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3140,
											"end": 3154,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3140,
											"end": 3169,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 3140,
											"end": 3169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3140,
											"end": 3169,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 3140,
											"end": 3169,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3140,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 3140,
											"end": 3179,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3140,
											"end": 3179,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3140,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 3140,
											"end": 3179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3140,
											"end": 3179,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 3140,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 3094,
											"end": 3180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3180,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 3094,
											"end": 3180,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3082,
											"end": 3180,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3082,
											"end": 3180,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2712,
											"end": 3192,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 2712,
											"end": 3192,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3260,
											"end": 3261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3257,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3248,
											"end": 3261,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3240,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 3240,
											"end": 3295,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3240,
											"end": 3295,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3240,
											"end": 3295,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3240,
											"end": 3295,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3240,
											"end": 3295,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9773,
											"end": 9775,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3240,
											"end": 3295,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3240,
											"end": 3295,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3240,
											"end": 3295,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9755,
											"end": 9776,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9812,
											"end": 9814,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 9792,
											"end": 9810,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9792,
											"end": 9810,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9792,
											"end": 9810,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9785,
											"end": 9815,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9851,
											"end": 9882,
											"name": "PUSH",
											"source": 6,
											"value": "494E53554646494349454E545F4C49515549444954595F4D494E544544000000"
										},
										{
											"begin": 9831,
											"end": 9849,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 9831,
											"end": 9849,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9831,
											"end": 9849,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9824,
											"end": 9883,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9900,
											"end": 9918,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 9900,
											"end": 9918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3240,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 9571,
											"end": 9924,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3240,
											"end": 3295,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 3240,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3353,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3347,
											"end": 3353,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3376,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 2001,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3347,
											"end": 3353,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3353,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3353,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3353,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3363,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 3347,
											"end": 3363,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 3347,
											"end": 3378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 3347,
											"end": 3378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3336,
											"end": 3344,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3336,
											"end": 3378,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3406,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3400,
											"end": 3406,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3425,
											"end": 3429,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 2001,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3400,
											"end": 3406,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3406,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3406,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3406,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3416,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 3400,
											"end": 3416,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 3400,
											"end": 3431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 3400,
											"end": 3431,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3389,
											"end": 3397,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 3389,
											"end": 3431,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3525,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 3531,
											"end": 3541,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3543,
											"end": 3552,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3525,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 3525,
											"end": 3553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3525,
											"end": 3553,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 3525,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 3627,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3579,
											"end": 3627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 3627,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4170,
											"end": 4195,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4170,
											"end": 4195,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4170,
											"end": 4195,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4226,
											"end": 4228,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4211,
											"end": 4229,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4211,
											"end": 4229,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4238,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4238,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4238,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3584,
											"end": 3594,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3584,
											"end": 3594,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 3627,
											"name": "PUSH",
											"source": 5,
											"value": "4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F"
										},
										{
											"begin": 3579,
											"end": 3627,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3579,
											"end": 3627,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3579,
											"end": 3627,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 3627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 3627,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 3627,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 3627,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 3627,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 2393,
											"end": 3635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 3635,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 3635,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 3635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 3635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 3635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10149,
											"end": 10181,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10149,
											"end": 10181,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10131,
											"end": 10182,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10198,
											"end": 10216,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 10198,
											"end": 10216,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10198,
											"end": 10216,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10191,
											"end": 10225,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10191,
											"end": 10225,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10191,
											"end": 10225,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10241,
											"end": 10259,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 10241,
											"end": 10259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10241,
											"end": 10259,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10234,
											"end": 10268,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10234,
											"end": 10268,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10234,
											"end": 10268,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9929,
											"end": 10274,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 2001,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1790,
											"end": 2007,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 2001,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1790,
											"end": 2007,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 2001,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1790,
											"end": 2007,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8247,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1659,
											"end": 1962,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 1659,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1704,
											"end": 1710,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1731,
											"end": 1732,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1727,
											"end": 1728,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1727,
											"end": 1732,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1955,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 1723,
											"end": 1955,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1753,
											"end": 1754,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1769,
											"end": 1775,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1778,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 1782,
											"end": 1783,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1753,
											"end": 1754,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1778,
											"end": 1783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1783,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 1778,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 1778,
											"end": 1787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1786,
											"end": 1787,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1778,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1778,
											"end": 1787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1787,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 1778,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1769,
											"end": 1787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1769,
											"end": 1787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1802,
											"end": 1894,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 1802,
											"end": 1894,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1813,
											"end": 1814,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1810,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1814,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1802,
											"end": 1894,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1802,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 1802,
											"end": 1894,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1839,
											"end": 1840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1839,
											"end": 1840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1877,
											"end": 1878,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1839,
											"end": 1840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 1839,
											"end": 1840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1864,
											"end": 1869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1869,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 1864,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1873,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 1864,
											"end": 1873,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1873,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1873,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1864,
											"end": 1873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1873,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 1864,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 1863,
											"end": 1878,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1878,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1863,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1878,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 1863,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1859,
											"end": 1878,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1859,
											"end": 1878,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1802,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 1802,
											"end": 1894,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1802,
											"end": 1894,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 1802,
											"end": 1894,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1734,
											"end": 1905,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1659,
											"end": 1962,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1659,
											"end": 1962,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1659,
											"end": 1962,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1659,
											"end": 1962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1955,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 1723,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1911,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 1911,
											"end": 1955,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1942,
											"end": 1943,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1911,
											"end": 1955,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 1911,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1659,
											"end": 1962,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1659,
											"end": 1962,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1659,
											"end": 1962,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1659,
											"end": 1962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1429,
											"end": 1525,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 1429,
											"end": 1525,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1487,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1508,
											"end": 1509,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1505,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1509,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 1504,
											"end": 1517,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1516,
											"end": 1517,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 1504,
											"end": 1517,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1517,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 1504,
											"end": 1517,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1513,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1517,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 1504,
											"end": 1517,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 1517,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1429,
											"end": 1525,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1429,
											"end": 1525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 2001,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1790,
											"end": 2007,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 2001,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1790,
											"end": 2007,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 2001,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1923,
											"end": 1941,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1790,
											"end": 2007,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 656,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 631,
											"end": 656,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 619,
											"end": 621,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 622,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 604,
											"end": 622,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 485,
											"end": 662,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10149,
											"end": 10181,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10149,
											"end": 10181,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10131,
											"end": 10182,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10198,
											"end": 10216,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 10198,
											"end": 10216,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10198,
											"end": 10216,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10191,
											"end": 10225,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10191,
											"end": 10225,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10191,
											"end": 10225,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10241,
											"end": 10259,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 10241,
											"end": 10259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10241,
											"end": 10259,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10234,
											"end": 10268,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10234,
											"end": 10268,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10234,
											"end": 10268,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 10104,
											"end": 10122,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9929,
											"end": 10274,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 656,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 631,
											"end": 656,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 619,
											"end": 621,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 622,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 604,
											"end": 622,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 485,
											"end": 662,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 480,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 14,
											"end": 480,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 91,
											"end": 97,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 99,
											"end": 105,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 113,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 160,
											"end": 162,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 148,
											"end": 157,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 139,
											"end": 146,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 135,
											"end": 158,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 131,
											"end": 163,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 128,
											"end": 180,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 128,
											"end": 180,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 128,
											"end": 180,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 176,
											"end": 177,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 173,
											"end": 174,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 178,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 128,
											"end": 180,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 128,
											"end": 180,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 221,
											"end": 244,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 221,
											"end": 244,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 221,
											"end": 244,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 341,
											"end": 343,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 326,
											"end": 344,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 326,
											"end": 344,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 313,
											"end": 345,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 313,
											"end": 345,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 444,
											"end": 446,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 429,
											"end": 447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 429,
											"end": 447,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 429,
											"end": 447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 416,
											"end": 448,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 416,
											"end": 448,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14,
											"end": 480,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 667,
											"end": 1085,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 667,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 816,
											"end": 818,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 805,
											"end": 814,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 798,
											"end": 819,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 779,
											"end": 783,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 854,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 842,
											"end": 855,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 891,
											"end": 897,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 886,
											"end": 888,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 875,
											"end": 884,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 871,
											"end": 889,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 864,
											"end": 898,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 950,
											"end": 956,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 945,
											"end": 947,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 943,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 933,
											"end": 948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 928,
											"end": 930,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 917,
											"end": 926,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 913,
											"end": 931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 907,
											"end": 957,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1007,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1003,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 992,
											"end": 998,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 981,
											"end": 990,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 977,
											"end": 999,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1004,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 966,
											"end": 1008,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1078,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1069,
											"end": 1071,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1065,
											"end": 1072,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1060,
											"end": 1062,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1063,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1073,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1033,
											"end": 1042,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1074,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1079,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 1079,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 1079,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 1079,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 667,
											"end": 1085,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 667,
											"end": 1085,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 667,
											"end": 1085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 667,
											"end": 1085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 667,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1221,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 1090,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1165,
											"end": 1196,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1155,
											"end": 1197,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1155,
											"end": 1197,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1145,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 1145,
											"end": 1215,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1212,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1208,
											"end": 1209,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1213,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1145,
											"end": 1215,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 1145,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1221,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1226,
											"end": 1593,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1226,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1294,
											"end": 1300,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1308,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1355,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1352,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1334,
											"end": 1341,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1330,
											"end": 1353,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1326,
											"end": 1358,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1323,
											"end": 1375,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1323,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 1323,
											"end": 1375,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1371,
											"end": 1372,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1361,
											"end": 1373,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1323,
											"end": 1375,
											"name": "tag",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 1323,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1419,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1397,
											"end": 1420,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1429,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 1454,
											"end": 1459,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1429,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 1429,
											"end": 1460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1429,
											"end": 1460,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 1429,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1479,
											"end": 1484,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1557,
											"end": 1559,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1542,
											"end": 1560,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1542,
											"end": 1560,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1542,
											"end": 1560,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1542,
											"end": 1560,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1529,
											"end": 1561,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1529,
											"end": 1561,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1226,
											"end": 1593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2520,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2012,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2089,
											"end": 2095,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2097,
											"end": 2103,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2111,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2158,
											"end": 2160,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2146,
											"end": 2155,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2144,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2156,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2161,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2178,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2178,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 2126,
											"end": 2178,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2175,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2171,
											"end": 2172,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2164,
											"end": 2176,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2126,
											"end": 2178,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 2126,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2213,
											"end": 2222,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2223,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 2257,
											"end": 2262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 2232,
											"end": 2263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2263,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 2232,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2282,
											"end": 2287,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2339,
											"end": 2341,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2324,
											"end": 2342,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2324,
											"end": 2342,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2311,
											"end": 2343,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 2311,
											"end": 2343,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 2352,
											"end": 2385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2385,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 2352,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2520,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2520,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 2404,
											"end": 2411,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2404,
											"end": 2411,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2484,
											"end": 2486,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2469,
											"end": 2487,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2487,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2487,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2487,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2456,
											"end": 2488,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2456,
											"end": 2488,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2714,
											"end": 3215,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2714,
											"end": 3215,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2811,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2813,
											"end": 2819,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2821,
											"end": 2827,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2874,
											"end": 2876,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2862,
											"end": 2871,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2853,
											"end": 2860,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2872,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2845,
											"end": 2877,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2842,
											"end": 2894,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2842,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 2842,
											"end": 2894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2890,
											"end": 2891,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2887,
											"end": 2888,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2880,
											"end": 2892,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2842,
											"end": 2894,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 2842,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2935,
											"end": 2958,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2935,
											"end": 2958,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2935,
											"end": 2958,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3034,
											"end": 3036,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3037,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3037,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3006,
											"end": 3038,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3047,
											"end": 3080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 3006,
											"end": 3038,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3047,
											"end": 3080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 3047,
											"end": 3080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 3760,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 3513,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 3578,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3625,
											"end": 3627,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3613,
											"end": 3622,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3604,
											"end": 3611,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3600,
											"end": 3623,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3628,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3645,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 3593,
											"end": 3645,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3641,
											"end": 3642,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3639,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3631,
											"end": 3643,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3645,
											"name": "tag",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 3593,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3680,
											"end": 3689,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3667,
											"end": 3690,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3699,
											"end": 3730,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 3724,
											"end": 3729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3699,
											"end": 3730,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 3699,
											"end": 3730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3991,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 3765,
											"end": 3991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3824,
											"end": 3830,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3879,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3865,
											"end": 3874,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3856,
											"end": 3863,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3852,
											"end": 3875,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3848,
											"end": 3880,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3845,
											"end": 3897,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3845,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 3845,
											"end": 3897,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3893,
											"end": 3894,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3890,
											"end": 3891,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3895,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3845,
											"end": 3897,
											"name": "tag",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 3845,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3938,
											"end": 3961,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3938,
											"end": 3961,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3991,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3765,
											"end": 3991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4249,
											"end": 4595,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 4249,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4317,
											"end": 4323,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4325,
											"end": 4331,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4380,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4364,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4353,
											"end": 4376,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4349,
											"end": 4381,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4346,
											"end": 4398,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4346,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 4346,
											"end": 4398,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4394,
											"end": 4395,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4392,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4384,
											"end": 4396,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4346,
											"end": 4398,
											"name": "tag",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 4346,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4439,
											"end": 4462,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4439,
											"end": 4462,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4439,
											"end": 4462,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4559,
											"end": 4561,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4544,
											"end": 4562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4562,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4531,
											"end": 4563,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4531,
											"end": 4563,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4249,
											"end": 4595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4600,
											"end": 4988,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 4600,
											"end": 4988,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4668,
											"end": 4674,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4676,
											"end": 4682,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4729,
											"end": 4731,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4717,
											"end": 4726,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4708,
											"end": 4715,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4704,
											"end": 4727,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4700,
											"end": 4732,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4697,
											"end": 4749,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4697,
											"end": 4749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 4697,
											"end": 4749,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4745,
											"end": 4746,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4742,
											"end": 4743,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4735,
											"end": 4747,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4697,
											"end": 4749,
											"name": "tag",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 4697,
											"end": 4749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4784,
											"end": 4793,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4771,
											"end": 4794,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4803,
											"end": 4834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 4828,
											"end": 4833,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4803,
											"end": 4834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 4803,
											"end": 4834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4803,
											"end": 4834,
											"name": "tag",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 4803,
											"end": 4834,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 4858,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4910,
											"end": 4912,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4895,
											"end": 4913,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4895,
											"end": 4913,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4882,
											"end": 4914,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 4882,
											"end": 4914,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 4923,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4956,
											"name": "tag",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 4923,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4975,
											"end": 4982,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 4982,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 4982,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 4982,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4600,
											"end": 4988,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4600,
											"end": 4988,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4600,
											"end": 4988,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4600,
											"end": 4988,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4600,
											"end": 4988,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4600,
											"end": 4988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5692,
											"end": 5819,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 5692,
											"end": 5819,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5763,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 5748,
											"end": 5751,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 5744,
											"end": 5764,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 5741,
											"end": 5742,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5734,
											"end": 5765,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5784,
											"end": 5788,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 5781,
											"end": 5782,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5774,
											"end": 5789,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5808,
											"end": 5812,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5805,
											"end": 5806,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5798,
											"end": 5813,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5824,
											"end": 5949,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 5824,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5889,
											"end": 5898,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5889,
											"end": 5898,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5889,
											"end": 5898,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5910,
											"end": 5920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5910,
											"end": 5920,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5910,
											"end": 5920,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5907,
											"end": 5943,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5907,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 5907,
											"end": 5943,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5923,
											"end": 5941,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 5923,
											"end": 5941,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 5923,
											"end": 5941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5954,
											"end": 6122,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 5954,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6027,
											"end": 6036,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6027,
											"end": 6036,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6027,
											"end": 6036,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6058,
											"end": 6067,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6058,
											"end": 6067,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6075,
											"end": 6090,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6075,
											"end": 6090,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6075,
											"end": 6090,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6069,
											"end": 6091,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6069,
											"end": 6091,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6055,
											"end": 6092,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6045,
											"end": 6116,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 6045,
											"end": 6116,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6096,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 6096,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 6096,
											"end": 6114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6127,
											"end": 6344,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 6127,
											"end": 6344,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6167,
											"end": 6168,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6193,
											"end": 6194,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6183,
											"end": 6315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 6183,
											"end": 6315,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6237,
											"end": 6247,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 6232,
											"end": 6235,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 6228,
											"end": 6248,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6226,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6218,
											"end": 6249,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6272,
											"end": 6276,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 6269,
											"end": 6270,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6262,
											"end": 6277,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6300,
											"end": 6304,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6297,
											"end": 6298,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6290,
											"end": 6305,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6183,
											"end": 6315,
											"name": "tag",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 6183,
											"end": 6315,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6329,
											"end": 6338,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6329,
											"end": 6338,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6127,
											"end": 6344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6349,
											"end": 6729,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 6349,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6429,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6436,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6424,
											"end": 6436,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6424,
											"end": 6436,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 6424,
											"end": 6436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6471,
											"end": 6483,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6471,
											"end": 6483,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6471,
											"end": 6483,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6492,
											"end": 6553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 6492,
											"end": 6553,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 6550,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 6538,
											"end": 6544,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6534,
											"end": 6551,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6524,
											"end": 6551,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6524,
											"end": 6551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6492,
											"end": 6553,
											"name": "tag",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 6492,
											"end": 6553,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6599,
											"end": 6601,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6591,
											"end": 6597,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6588,
											"end": 6602,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6568,
											"end": 6586,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6603,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6562,
											"end": 6723,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 6562,
											"end": 6723,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6645,
											"end": 6655,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 6640,
											"end": 6643,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 6636,
											"end": 6656,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6633,
											"end": 6634,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6626,
											"end": 6657,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6680,
											"end": 6684,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 6677,
											"end": 6678,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6670,
											"end": 6685,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6708,
											"end": 6712,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6705,
											"end": 6706,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6698,
											"end": 6713,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6734,
											"end": 7084,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 6734,
											"end": 7084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6936,
											"end": 6938,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6918,
											"end": 6939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6918,
											"end": 6939,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6918,
											"end": 6939,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6975,
											"end": 6977,
											"name": "PUSH",
											"source": 6,
											"value": "1A"
										},
										{
											"begin": 6955,
											"end": 6973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6955,
											"end": 6973,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6955,
											"end": 6973,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6948,
											"end": 6978,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7014,
											"end": 7042,
											"name": "PUSH",
											"source": 6,
											"value": "494E53554646494349454E545F4F55545055545F414D4F554E54000000000000"
										},
										{
											"begin": 7009,
											"end": 7011,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6994,
											"end": 7012,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6994,
											"end": 7012,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6987,
											"end": 7043,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7075,
											"end": 7077,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7060,
											"end": 7078,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7060,
											"end": 7078,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6734,
											"end": 7084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7639,
											"end": 7823,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 7639,
											"end": 7823,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7709,
											"end": 7715,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7762,
											"end": 7764,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7750,
											"end": 7759,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7741,
											"end": 7748,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7737,
											"end": 7760,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 7765,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 7730,
											"end": 7782,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7730,
											"end": 7782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 7730,
											"end": 7782,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7778,
											"end": 7779,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7775,
											"end": 7776,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7780,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7730,
											"end": 7782,
											"name": "tag",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 7730,
											"end": 7782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7801,
											"end": 7817,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7801,
											"end": 7817,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7639,
											"end": 7823,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7639,
											"end": 7823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7828,
											"end": 8199,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 7828,
											"end": 8199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8048,
											"end": 8080,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8048,
											"end": 8080,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8048,
											"end": 8080,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8030,
											"end": 8081,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8030,
											"end": 8081,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8117,
											"end": 8149,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8117,
											"end": 8149,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8117,
											"end": 8149,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8117,
											"end": 8149,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8112,
											"end": 8114,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8097,
											"end": 8115,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8097,
											"end": 8115,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8090,
											"end": 8150,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8181,
											"end": 8183,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8166,
											"end": 8184,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8166,
											"end": 8184,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8159,
											"end": 8193,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8159,
											"end": 8193,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8159,
											"end": 8193,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8159,
											"end": 8193,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8018,
											"end": 8020,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 8003,
											"end": 8021,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8003,
											"end": 8021,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7828,
											"end": 8199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8204,
											"end": 8481,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 8204,
											"end": 8481,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8271,
											"end": 8277,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8324,
											"end": 8326,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8312,
											"end": 8321,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8303,
											"end": 8310,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8299,
											"end": 8322,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8295,
											"end": 8327,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 8292,
											"end": 8344,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8292,
											"end": 8344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 8292,
											"end": 8344,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8340,
											"end": 8341,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8337,
											"end": 8338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8330,
											"end": 8342,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8292,
											"end": 8344,
											"name": "tag",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 8292,
											"end": 8344,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8372,
											"end": 8381,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8366,
											"end": 8382,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8425,
											"end": 8430,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8418,
											"end": 8431,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8411,
											"end": 8432,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8404,
											"end": 8409,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8401,
											"end": 8433,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8391,
											"end": 8451,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 8391,
											"end": 8451,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8447,
											"end": 8448,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8444,
											"end": 8445,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8437,
											"end": 8449,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"TinTinCourse/AMM/amm.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidity(uint256,uint256)": "9cd441da",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"name()": "06fdde03",
							"removeLiquidity(uint256)": "9c8f9f23",
							"reserve0()": "443cb4bc",
							"reserve1()": "5a76f25e",
							"swap(uint256,address,uint256)": "43264349",
							"symbol()": "95d89b41",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token1\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TinTinCourse/AMM/amm.sol\":\"AMM\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"TinTinCourse/AMM/amm.sol\":{\"keccak256\":\"0x7e79279f3efa81c8f4f1cfea664afef6f480accbf5186cc059e042e859545c66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e81f473caac275544dff244b9f4b56ec41f08c2c028f29f7d8bf493e990c539\",\"dweb:/ipfs/QmUqc9iB4yKBnCxzbQ6cMH8JxhWydYUE9ak6Ez33KTbZPL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "TinTinCourse/AMM/amm.sol:AMM",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "TinTinCourse/AMM/amm.sol:AMM",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "TinTinCourse/AMM/amm.sol:AMM",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "TinTinCourse/AMM/amm.sol:AMM",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "TinTinCourse/AMM/amm.sol:AMM",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 793,
								"contract": "TinTinCourse/AMM/amm.sol:AMM",
								"label": "token0",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IERC20)729"
							},
							{
								"astId": 796,
								"contract": "TinTinCourse/AMM/amm.sol:AMM",
								"label": "token1",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(IERC20)729"
							},
							{
								"astId": 798,
								"contract": "TinTinCourse/AMM/amm.sol:AMM",
								"label": "reserve0",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 800,
								"contract": "TinTinCourse/AMM/amm.sol:AMM",
								"label": "reserve1",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)729": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1428:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1428:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1437:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1445:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1461:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1419:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1480:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1496:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1540:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1556:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1583:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1630:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1665:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1691:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1952:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1962:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1970:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1985:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1995:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1908:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1929:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:1"
									},
									"scope": 651,
									"src": "1896:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2134:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2151:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "2144:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2119:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:1"
									},
									"scope": 651,
									"src": "2074:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2338:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2348:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2323:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:1"
									},
									"scope": 651,
									"src": "2276:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3058:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "3068:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3051:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:1"
									},
									"scope": 651,
									"src": "3002:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3205:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "3222:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "3215:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3196:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:1"
									},
									"scope": 651,
									"src": "3144:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3373:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3390:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3400:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3383:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3318:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3364:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:1"
									},
									"scope": 651,
									"src": "3299:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3685:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3695:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3711:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3743:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3750:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3754:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3733:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3770:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3628:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3640:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3679:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:1"
									},
									"scope": 651,
									"src": "3610:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3935:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3952:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3964:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3971:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3945:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3865:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3880:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:1"
									},
									"scope": 651,
									"src": "3846:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4372:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4382:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4398:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4436:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4445:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4420:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4461:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4310:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4327:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4366:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:1"
									},
									"scope": 651,
									"src": "4293:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "5132:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "5142:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "5160:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5198:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5204:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5213:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5182:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5239:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "5245:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5249:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "5229:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5265:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5061:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5075:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5087:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5126:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:1"
									},
									"scope": 651,
									"src": "5039:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5725:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5739:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5735:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5759:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5780:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5773:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5834:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5830:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5852:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5873:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5866:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5933:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5939:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5943:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5925:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5675:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5689:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5701:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:1"
									},
									"scope": 651,
									"src": "5656:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6346:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6360:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6534:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6548:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6570:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6580:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6603:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6617:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6599:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6624:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6674:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6680:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6693:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6649:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6834:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6844:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6852:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6866:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6356:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6380:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6496:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6512:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6910:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "7125:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7284:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7294:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7301:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6906:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6928:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "7073:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7089:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7355:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7361:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7346:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7341:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6288:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6302:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6314:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:1"
									},
									"scope": 651,
									"src": "6271:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7777:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7791:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7787:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7814:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7835:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7828:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7907:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7916:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7887:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7736:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7753:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:1"
									},
									"scope": 651,
									"src": "7721:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8303:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8313:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8340:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8361:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8354:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8419:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8411:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8262:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8279:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:1"
									},
									"scope": 651,
									"src": "8247:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "9063:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9082:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9089:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "9098:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "9073:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9007:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9022:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9039:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:1"
									},
									"scope": 651,
									"src": "8989:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "10047:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "10061:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "10057:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "10082:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10103:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "10096:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "10159:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "10155:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "10182:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "10203:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "10196:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10254:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10266:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10273:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10284:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10303:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10299:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10314:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10342:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10349:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10358:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10333:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10328:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9967:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9999:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10014:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:1"
									},
									"scope": 651,
									"src": "9949:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10752:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10762:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10799:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10806:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10789:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10828:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10824:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10867:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10885:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10904:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10881:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10911:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10963:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10972:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10990:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10936:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "11061:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "11068:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "11077:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "11096:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "11052:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10688:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10703:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10720:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:1"
									},
									"scope": 651,
									"src": "10663:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1401:9741:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:11038:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 729,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 729,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 729,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 729,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 729,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 729,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"305:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "305:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 755,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 755,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 755,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "277:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:558:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"TinTinCourse/AMM/amm.sol": {
				"ast": {
					"absolutePath": "TinTinCourse/AMM/amm.sol",
					"exportedSymbols": {
						"AMM": [
							1357
						],
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 1358,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1358,
							"sourceUnit": 652,
							"src": "61:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 789,
										"name": "ERC20",
										"nameLocations": [
											"721:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "721:5:5"
									},
									"id": 790,
									"nodeType": "InheritanceSpecifier",
									"src": "721:5:5"
								}
							],
							"canonicalName": "AMM",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1357,
							"linearizedBaseContracts": [
								1357,
								651,
								41,
								755,
								729,
								785
							],
							"name": "AMM",
							"nameLocation": "714:3:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0dfe1681",
									"id": 793,
									"mutability": "mutable",
									"name": "token0",
									"nameLocation": "769:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 1357,
									"src": "755:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$729",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 792,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 791,
											"name": "IERC20",
											"nameLocations": [
												"755:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 729,
											"src": "755:6:5"
										},
										"referencedDeclaration": 729,
										"src": "755:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$729",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d21220a7",
									"id": 796,
									"mutability": "mutable",
									"name": "token1",
									"nameLocation": "796:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 1357,
									"src": "782:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$729",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 795,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 794,
											"name": "IERC20",
											"nameLocations": [
												"782:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 729,
											"src": "782:6:5"
										},
										"referencedDeclaration": 729,
										"src": "782:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$729",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "443cb4bc",
									"id": 798,
									"mutability": "mutable",
									"name": "reserve0",
									"nameLocation": "847:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1357,
									"src": "835:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 797,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "835:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5a76f25e",
									"id": 800,
									"mutability": "mutable",
									"name": "reserve1",
									"nameLocation": "874:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1357,
									"src": "862:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 799,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "862:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f",
									"id": 808,
									"name": "Mint",
									"nameLocation": "917:4:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "938:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "922:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "922:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "951:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "946:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "946:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "965:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "960:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "960:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "921:52:5"
									},
									"src": "911:63:5"
								},
								{
									"anonymous": false,
									"eventSelector": "49995e5dd6158cf69ad3e9777c46755a1a826a446c6416992167462dad033b2a",
									"id": 816,
									"name": "Burn",
									"nameLocation": "986:4:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1007:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "991:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1020:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "1015:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1015:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1034:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "1029:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 813,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1029:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "990:52:5"
									},
									"src": "980:63:5"
								},
								{
									"anonymous": false,
									"eventSelector": "24043855bfbfea0ccea141e5a73d7116bf0bfe083ea900a791f4b407ff03e525",
									"id": 828,
									"name": "Swap",
									"nameLocation": "1055:4:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1086:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "1070:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1070:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1108:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "1103:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 819,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1103:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "1135:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "1127:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1127:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1158:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "1153:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1153:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "1186:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "1178:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:146:5"
									},
									"src": "1049:157:5"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "1326:62:5",
										"statements": [
											{
												"expression": {
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 841,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "1337:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 842,
														"name": "_token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "1346:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "1337:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"id": 844,
												"nodeType": "ExpressionStatement",
												"src": "1337:16:5"
											},
											{
												"expression": {
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 845,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "1364:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 846,
														"name": "_token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "1373:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "1364:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "1364:16:5"
											}
										]
									},
									"id": 850,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "53696d706c6553776170",
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1306:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_a0f41d54f2f2b7966a90e9cd39ab4f298f5040988f380cfafec39a85446da985",
														"typeString": "literal_string \"SimpleSwap\""
													},
													"value": "SimpleSwap"
												},
												{
													"hexValue": "5353",
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1320:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8535e3db6464e317fd034d686701432ec45f68985b6a58376f7d984274c3141b",
														"typeString": "literal_string \"SS\""
													},
													"value": "SS"
												}
											],
											"id": 839,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 836,
												"name": "ERC20",
												"nameLocations": [
													"1300:5:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "1300:5:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1300:25:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "_token0",
												"nameLocation": "1275:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "1268:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$729",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 830,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 829,
														"name": "IERC20",
														"nameLocations": [
															"1268:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 729,
														"src": "1268:6:5"
													},
													"referencedDeclaration": 729,
													"src": "1268:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "_token1",
												"nameLocation": "1291:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "1284:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$729",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 833,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 832,
														"name": "IERC20",
														"nameLocations": [
															"1284:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 729,
														"src": "1284:6:5"
													},
													"referencedDeclaration": 729,
													"src": "1284:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:32:5"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1326:0:5"
									},
									"scope": 1357,
									"src": "1256:132:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "1489:36:5",
										"statements": [
											{
												"expression": {
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 859,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "1500:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 860,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 852,
																"src": "1504:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 861,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 854,
																"src": "1508:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1504:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"id": 864,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "1516:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 865,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "1504:13:5",
														"trueExpression": {
															"id": 863,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "1512:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1500:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 867,
												"nodeType": "ExpressionStatement",
												"src": "1500:17:5"
											}
										]
									},
									"id": 869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "1438:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1447:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "1442:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1442:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1455:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "1450:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1450:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1441:16:5"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "1486:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "1481:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1481:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1480:8:5"
									},
									"scope": 1357,
									"src": "1429:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 922,
										"nodeType": "Block",
										"src": "1712:250:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 876,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "1727:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "33",
														"id": 877,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1731:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "1727:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 912,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "1915:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1920:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1915:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 920,
													"nodeType": "IfStatement",
													"src": "1911:44:5",
													"trueBody": {
														"id": 919,
														"nodeType": "Block",
														"src": "1923:32:5",
														"statements": [
															{
																"expression": {
																	"id": 917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 915,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 874,
																		"src": "1938:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 916,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1942:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1938:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 918,
																"nodeType": "ExpressionStatement",
																"src": "1938:5:5"
															}
														]
													}
												},
												"id": 921,
												"nodeType": "IfStatement",
												"src": "1723:232:5",
												"trueBody": {
													"id": 911,
													"nodeType": "Block",
													"src": "1734:171:5",
													"statements": [
														{
															"expression": {
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 879,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 874,
																	"src": "1749:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 880,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 871,
																	"src": "1753:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1749:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 882,
															"nodeType": "ExpressionStatement",
															"src": "1749:5:5"
														},
														{
															"assignments": [
																884
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 884,
																	"mutability": "mutable",
																	"name": "x",
																	"nameLocation": "1774:1:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 911,
																	"src": "1769:6:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 883,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "1769:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 890,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 885,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 871,
																		"src": "1778:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1782:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "1778:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1786:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1778:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1769:18:5"
														},
														{
															"body": {
																"id": 909,
																"nodeType": "Block",
																"src": "1816:78:5",
																"statements": [
																	{
																		"expression": {
																			"id": 896,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 894,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 874,
																				"src": "1835:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 895,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 884,
																				"src": "1839:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1835:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 897,
																		"nodeType": "ExpressionStatement",
																		"src": "1835:5:5"
																	},
																	{
																		"expression": {
																			"id": 907,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 898,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 884,
																				"src": "1859:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 906,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 903,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 901,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 899,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 871,
																									"src": "1864:1:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"id": 900,
																									"name": "x",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 884,
																									"src": "1868:1:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "1864:5:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"id": 902,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 884,
																								"src": "1872:1:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "1864:9:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 904,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1863:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 905,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1877:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "1863:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1859:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 908,
																		"nodeType": "ExpressionStatement",
																		"src": "1859:19:5"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 891,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "1809:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 892,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 874,
																	"src": "1813:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1809:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 910,
															"nodeType": "WhileStatement",
															"src": "1802:92:5"
														}
													]
												}
											}
										]
									},
									"id": 923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "1668:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1678:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "1673:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1673:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1672:8:5"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "1709:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "1704:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1704:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1703:8:5"
									},
									"scope": 1357,
									"src": "1659:303:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1030,
										"nodeType": "Block",
										"src": "2393:1242:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 935,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2505:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2509:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2505:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 939,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2525:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AMM_$1357",
																		"typeString": "contract AMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AMM_$1357",
																		"typeString": "contract AMM"
																	}
																],
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2517:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 937,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2517:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2517:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 941,
															"name": "amount0Desired",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "2532:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 932,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "2485:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 934,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2492:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "2485:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2485:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 943,
												"nodeType": "ExpressionStatement",
												"src": "2485:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 947,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2578:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2582:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2578:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 951,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2598:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AMM_$1357",
																		"typeString": "contract AMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AMM_$1357",
																		"typeString": "contract AMM"
																	}
																],
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2590:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 949,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2590:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2590:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 953,
															"name": "amount1Desired",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "2605:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 944,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "2558:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2565:12:5",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 728,
														"src": "2558:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2558:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 955,
												"nodeType": "ExpressionStatement",
												"src": "2558:62:5"
											},
											{
												"assignments": [
													957
												],
												"declarations": [
													{
														"constant": false,
														"id": 957,
														"mutability": "mutable",
														"name": "_totalSupply",
														"nameLocation": "2673:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 1030,
														"src": "2668:17:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 956,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2668:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 960,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 958,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "2688:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2688:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2668:33:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 961,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "2716:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 962,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2732:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2716:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 988,
													"nodeType": "Block",
													"src": "2934:258:5",
													"statements": [
														{
															"expression": {
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 973,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "3082:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 979,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 977,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 975,
																					"name": "amount0Desired",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 925,
																					"src": "3098:14:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 976,
																					"name": "_totalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 957,
																					"src": "3115:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3098:29:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 978,
																				"name": "reserve0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 798,
																				"src": "3130:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3098:40:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 984,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 982,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 980,
																					"name": "amount1Desired",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 927,
																					"src": "3140:14:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 981,
																					"name": "_totalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 957,
																					"src": "3157:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3140:29:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 983,
																				"name": "reserve1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 800,
																				"src": "3171:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3140:39:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 974,
																		"name": "min",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 869,
																		"src": "3094:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3094:86:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3082:98:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 987,
															"nodeType": "ExpressionStatement",
															"src": "3082:98:5"
														}
													]
												},
												"id": 989,
												"nodeType": "IfStatement",
												"src": "2712:480:5",
												"trueBody": {
													"id": 972,
													"nodeType": "Block",
													"src": "2735:193:5",
													"statements": [
														{
															"expression": {
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 964,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "2867:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 968,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 966,
																				"name": "amount0Desired",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 925,
																				"src": "2884:14:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 967,
																				"name": "amount1Desired",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 927,
																				"src": "2901:14:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2884:31:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 965,
																		"name": "sqrt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 923,
																		"src": "2879:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2879:37:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2867:49:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 971,
															"nodeType": "ExpressionStatement",
															"src": "2867:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 991,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "3248:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3260:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3248:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "494e53554646494349454e545f4c49515549444954595f4d494e544544",
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3263:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_56a253623294f4f4de6a9841388f033e113a22d6b37d1e786db69a7172923f8c",
																"typeString": "literal_string \"INSUFFICIENT_LIQUIDITY_MINTED\""
															},
															"value": "INSUFFICIENT_LIQUIDITY_MINTED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_56a253623294f4f4de6a9841388f033e113a22d6b37d1e786db69a7172923f8c",
																"typeString": "literal_string \"INSUFFICIENT_LIQUIDITY_MINTED\""
															}
														],
														"id": 990,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3240:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3240:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 996,
												"nodeType": "ExpressionStatement",
												"src": "3240:55:5"
											},
											{
												"expression": {
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 997,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "3336:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1002,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "3372:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AMM_$1357",
																			"typeString": "contract AMM"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_AMM_$1357",
																			"typeString": "contract AMM"
																		}
																	],
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3364:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1000,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3364:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1003,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3364:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 998,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "3347:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3354:9:5",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 686,
															"src": "3347:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3347:31:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3336:42:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "3336:42:5"
											},
											{
												"expression": {
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1007,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "3389:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1012,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "3425:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AMM_$1357",
																			"typeString": "contract AMM"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_AMM_$1357",
																			"typeString": "contract AMM"
																		}
																	],
																	"id": 1011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3417:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1010,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3417:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3417:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1008,
																"name": "token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "3400:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3407:9:5",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 686,
															"src": "3400:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3400:31:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3389:42:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1016,
												"nodeType": "ExpressionStatement",
												"src": "3389:42:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1018,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3531:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3535:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3531:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1020,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "3543:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1017,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "3525:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3525:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1022,
												"nodeType": "ExpressionStatement",
												"src": "3525:28:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1024,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3584:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3588:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3584:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1026,
															"name": "amount0Desired",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "3596:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1027,
															"name": "amount1Desired",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "3612:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1023,
														"name": "Mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "3579:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3579:48:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1029,
												"nodeType": "EmitStatement",
												"src": "3574:53:5"
											}
										]
									},
									"functionSelector": "9cd441da",
									"id": 1031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "2308:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "amount0Desired",
												"nameLocation": "2326:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "2321:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2321:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "amount1Desired",
												"nameLocation": "2347:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "2342:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:42:5"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "2383:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "2378:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2378:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2377:16:5"
									},
									"scope": 1357,
									"src": "2299:1336:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1141,
										"nodeType": "Block",
										"src": "3892:837:5",
										"statements": [
											{
												"assignments": [
													1041
												],
												"declarations": [
													{
														"constant": false,
														"id": 1041,
														"mutability": "mutable",
														"name": "balance0",
														"nameLocation": "3933:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 1141,
														"src": "3928:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1040,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3928:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1049,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1046,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3969:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AMM_$1357",
																		"typeString": "contract AMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AMM_$1357",
																		"typeString": "contract AMM"
																	}
																],
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3961:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1044,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3961:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3961:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1042,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "3944:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1043,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3951:9:5",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 686,
														"src": "3944:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3944:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3928:47:5"
											},
											{
												"assignments": [
													1051
												],
												"declarations": [
													{
														"constant": false,
														"id": 1051,
														"mutability": "mutable",
														"name": "balance1",
														"nameLocation": "3991:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 1141,
														"src": "3986:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1050,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3986:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1059,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1056,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4027:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AMM_$1357",
																		"typeString": "contract AMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AMM_$1357",
																		"typeString": "contract AMM"
																	}
																],
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4019:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1054,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4019:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4019:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1052,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "4002:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1053,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4009:9:5",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 686,
														"src": "4002:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4002:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3986:47:5"
											},
											{
												"assignments": [
													1061
												],
												"declarations": [
													{
														"constant": false,
														"id": 1061,
														"mutability": "mutable",
														"name": "_totalSupply",
														"nameLocation": "4106:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 1141,
														"src": "4101:17:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1060,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4101:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1064,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1062,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4121:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4121:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4101:33:5"
											},
											{
												"expression": {
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1065,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "4145:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1070,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1066,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1033,
																"src": "4155:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1067,
																"name": "balance0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1041,
																"src": "4167:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4155:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1069,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "4178:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4155:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4145:45:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1072,
												"nodeType": "ExpressionStatement",
												"src": "4145:45:5"
											},
											{
												"expression": {
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1073,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "4201:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1078,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1074,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1033,
																"src": "4211:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1075,
																"name": "balance1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1051,
																"src": "4223:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4211:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1077,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "4234:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4211:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4201:45:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "4201:45:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1082,
																	"name": "amount0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1036,
																	"src": "4296:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4306:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4296:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1087,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1085,
																	"name": "amount1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1038,
																	"src": "4311:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4321:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4311:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4296:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "494e53554646494349454e545f4c49515549444954595f4255524e4544",
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4324:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a55a580cbbe51d1e48353bfb37fc6a99ecd7f296c4c5225073f3a94978458cd3",
																"typeString": "literal_string \"INSUFFICIENT_LIQUIDITY_BURNED\""
															},
															"value": "INSUFFICIENT_LIQUIDITY_BURNED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a55a580cbbe51d1e48353bfb37fc6a99ecd7f296c4c5225073f3a94978458cd3",
																"typeString": "literal_string \"INSUFFICIENT_LIQUIDITY_BURNED\""
															}
														],
														"id": 1081,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4288:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4288:68:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1091,
												"nodeType": "ExpressionStatement",
												"src": "4288:68:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1093,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4394:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4398:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4394:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1095,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "4406:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1092,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "4388:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4388:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1097,
												"nodeType": "ExpressionStatement",
												"src": "4388:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1101,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4468:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4472:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4468:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1103,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "4480:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1098,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "4452:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4459:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 696,
														"src": "4452:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4452:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1105,
												"nodeType": "ExpressionStatement",
												"src": "4452:36:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1109,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4515:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4519:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4515:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1111,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "4527:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1106,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "4499:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4506:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 696,
														"src": "4499:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4499:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1113,
												"nodeType": "ExpressionStatement",
												"src": "4499:36:5"
											},
											{
												"expression": {
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1114,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4574:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1119,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4610:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AMM_$1357",
																			"typeString": "contract AMM"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_AMM_$1357",
																			"typeString": "contract AMM"
																		}
																	],
																	"id": 1118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4602:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1117,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4602:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4602:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1115,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "4585:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4592:9:5",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 686,
															"src": "4585:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4585:31:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4574:42:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1123,
												"nodeType": "ExpressionStatement",
												"src": "4574:42:5"
											},
											{
												"expression": {
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1124,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "4627:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1129,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4663:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AMM_$1357",
																			"typeString": "contract AMM"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_AMM_$1357",
																			"typeString": "contract AMM"
																		}
																	],
																	"id": 1128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4655:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1127,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4655:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4655:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1125,
																"name": "token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "4638:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4645:9:5",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 686,
															"src": "4638:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4638:31:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4627:42:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1133,
												"nodeType": "ExpressionStatement",
												"src": "4627:42:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1135,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4692:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4696:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4692:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1137,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "4704:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1138,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "4713:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1134,
														"name": "Burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 816,
														"src": "4687:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4687:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1140,
												"nodeType": "EmitStatement",
												"src": "4682:39:5"
											}
										]
									},
									"functionSelector": "9c8f9f23",
									"id": 1142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "3814:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3835:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "3830:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3830:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3829:16:5"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3869:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "3864:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3864:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3883:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "3878:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3878:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3863:28:5"
									},
									"scope": 1357,
									"src": "3805:924:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1182,
										"nodeType": "Block",
										"src": "5142:209:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1154,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1144,
																"src": "5161:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5172:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5161:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "494e53554646494349454e545f414d4f554e54",
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5175:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e8788a811b2f03c33c54d190798bfa174d3e97deda56c09c1df2080dcc8d5158",
																"typeString": "literal_string \"INSUFFICIENT_AMOUNT\""
															},
															"value": "INSUFFICIENT_AMOUNT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e8788a811b2f03c33c54d190798bfa174d3e97deda56c09c1df2080dcc8d5158",
																"typeString": "literal_string \"INSUFFICIENT_AMOUNT\""
															}
														],
														"id": 1153,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5153:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5153:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1159,
												"nodeType": "ExpressionStatement",
												"src": "5153:44:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1161,
																	"name": "reserveIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1146,
																	"src": "5216:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5228:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5216:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1164,
																	"name": "reserveOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1148,
																	"src": "5233:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5246:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5233:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5216:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "494e53554646494349454e545f4c4951554944495459",
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5249:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e8d3230d72418d9aed77f45ee412f45396c3f3cd599a1a457d8130d57af1a83e",
																"typeString": "literal_string \"INSUFFICIENT_LIQUIDITY\""
															},
															"value": "INSUFFICIENT_LIQUIDITY"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e8d3230d72418d9aed77f45ee412f45396c3f3cd599a1a457d8130d57af1a83e",
																"typeString": "literal_string \"INSUFFICIENT_LIQUIDITY\""
															}
														],
														"id": 1160,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5208:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5208:66:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1170,
												"nodeType": "ExpressionStatement",
												"src": "5208:66:5"
											},
											{
												"expression": {
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1171,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "5285:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1172,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1144,
																"src": "5297:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1173,
																"name": "reserveOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1148,
																"src": "5308:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5297:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1175,
																		"name": "reserveIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1146,
																		"src": "5322:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1176,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1144,
																		"src": "5334:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5322:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1178,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5321:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5297:46:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5285:58:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1181,
												"nodeType": "ExpressionStatement",
												"src": "5285:58:5"
											}
										]
									},
									"functionSelector": "054d50d4",
									"id": 1183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "5044:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "5062:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "5057:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5057:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "5077:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "5072:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1145,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5072:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "5093:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "5088:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5088:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5056:48:5"
									},
									"returnParameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "5131:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "5126:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:16:5"
									},
									"scope": 1357,
									"src": "5035:316:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1355,
										"nodeType": "Block",
										"src": "5669:1418:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1199,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1185,
																"src": "5688:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1200,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5699:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5688:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "494e53554646494349454e545f4f55545055545f414d4f554e54",
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5702:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bbbb4868217c0daeb6721d77d471da8aa8a80672b4258dd2de9d7ccde9bf2146",
																"typeString": "literal_string \"INSUFFICIENT_OUTPUT_AMOUNT\""
															},
															"value": "INSUFFICIENT_OUTPUT_AMOUNT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bbbb4868217c0daeb6721d77d471da8aa8a80672b4258dd2de9d7ccde9bf2146",
																"typeString": "literal_string \"INSUFFICIENT_OUTPUT_AMOUNT\""
															}
														],
														"id": 1198,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5680:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5680:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1204,
												"nodeType": "ExpressionStatement",
												"src": "5680:51:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																},
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1206,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1188,
																	"src": "5750:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1207,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "5761:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																"src": "5750:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																},
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1209,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1188,
																	"src": "5771:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1210,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 796,
																	"src": "5782:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																"src": "5771:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5750:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "494e56414c49445f544f4b454e",
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5790:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_436b5627177a9781148596ddddd93f72d53dd82575a018216d5aaf2a8219ec9e",
																"typeString": "literal_string \"INVALID_TOKEN\""
															},
															"value": "INVALID_TOKEN"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_436b5627177a9781148596ddddd93f72d53dd82575a018216d5aaf2a8219ec9e",
																"typeString": "literal_string \"INVALID_TOKEN\""
															}
														],
														"id": 1205,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5742:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5742:64:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "5742:64:5"
											},
											{
												"assignments": [
													1217
												],
												"declarations": [
													{
														"constant": false,
														"id": 1217,
														"mutability": "mutable",
														"name": "balance0",
														"nameLocation": "5832:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 1355,
														"src": "5827:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1216,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5827:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1225,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1222,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5868:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AMM_$1357",
																		"typeString": "contract AMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AMM_$1357",
																		"typeString": "contract AMM"
																	}
																],
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5860:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1220,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5860:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5860:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1218,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "5843:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5850:9:5",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 686,
														"src": "5843:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5843:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5827:47:5"
											},
											{
												"assignments": [
													1227
												],
												"declarations": [
													{
														"constant": false,
														"id": 1227,
														"mutability": "mutable",
														"name": "balance1",
														"nameLocation": "5890:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 1355,
														"src": "5885:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1226,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5885:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1235,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1232,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5926:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AMM_$1357",
																		"typeString": "contract AMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AMM_$1357",
																		"typeString": "contract AMM"
																	}
																],
																"id": 1231,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5918:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1230,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5918:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5918:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1228,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "5901:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$729",
																"typeString": "contract IERC20"
															}
														},
														"id": 1229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5908:9:5",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 686,
														"src": "5901:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5901:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5885:47:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1236,
														"name": "tokenIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "5948:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1237,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "5959:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$729",
															"typeString": "contract IERC20"
														}
													},
													"src": "5948:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1318,
													"nodeType": "Block",
													"src": "6411:441:5",
													"statements": [
														{
															"expression": {
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1279,
																	"name": "tokenOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "6470:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1280,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "6481:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																"src": "6470:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1282,
															"nodeType": "ExpressionStatement",
															"src": "6470:17:5"
														},
														{
															"expression": {
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1283,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1193,
																	"src": "6552:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1285,
																			"name": "amountIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1185,
																			"src": "6577:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1286,
																			"name": "balance1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1227,
																			"src": "6587:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1287,
																			"name": "balance0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1217,
																			"src": "6597:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1284,
																		"name": "getAmountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1183,
																		"src": "6564:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6564:42:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6552:54:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1290,
															"nodeType": "ExpressionStatement",
															"src": "6552:54:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1292,
																			"name": "amountOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1193,
																			"src": "6629:9:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"id": 1293,
																			"name": "amountOutMin",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1190,
																			"src": "6641:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6629:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "494e53554646494349454e545f4f55545055545f414d4f554e54",
																		"id": 1295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6655:28:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_bbbb4868217c0daeb6721d77d471da8aa8a80672b4258dd2de9d7ccde9bf2146",
																			"typeString": "literal_string \"INSUFFICIENT_OUTPUT_AMOUNT\""
																		},
																		"value": "INSUFFICIENT_OUTPUT_AMOUNT"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_bbbb4868217c0daeb6721d77d471da8aa8a80672b4258dd2de9d7ccde9bf2146",
																			"typeString": "literal_string \"INSUFFICIENT_OUTPUT_AMOUNT\""
																		}
																	],
																	"id": 1291,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6621:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6621:63:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1297,
															"nodeType": "ExpressionStatement",
															"src": "6621:63:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1301,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6749:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6753:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6749:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1305,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "6769:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_AMM_$1357",
																					"typeString": "contract AMM"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_AMM_$1357",
																					"typeString": "contract AMM"
																				}
																			],
																			"id": 1304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6761:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1303,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6761:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6761:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1307,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1185,
																		"src": "6776:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1298,
																		"name": "tokenIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1188,
																		"src": "6728:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6736:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 728,
																	"src": "6728:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 1308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6728:57:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1309,
															"nodeType": "ExpressionStatement",
															"src": "6728:57:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1313,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6818:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6822:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6818:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1315,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1193,
																		"src": "6830:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1310,
																		"name": "tokenOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1196,
																		"src": "6800:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6809:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 696,
																	"src": "6800:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6800:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1317,
															"nodeType": "ExpressionStatement",
															"src": "6800:40:5"
														}
													]
												},
												"id": 1319,
												"nodeType": "IfStatement",
												"src": "5945:907:5",
												"trueBody": {
													"id": 1278,
													"nodeType": "Block",
													"src": "5966:441:5",
													"statements": [
														{
															"expression": {
																"id": 1241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1239,
																	"name": "tokenOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "6025:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1240,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 796,
																	"src": "6036:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																},
																"src": "6025:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1242,
															"nodeType": "ExpressionStatement",
															"src": "6025:17:5"
														},
														{
															"expression": {
																"id": 1249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1243,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1193,
																	"src": "6107:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1245,
																			"name": "amountIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1185,
																			"src": "6132:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1246,
																			"name": "balance0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1217,
																			"src": "6142:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1247,
																			"name": "balance1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1227,
																			"src": "6152:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1244,
																		"name": "getAmountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1183,
																		"src": "6119:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6119:42:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6107:54:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1250,
															"nodeType": "ExpressionStatement",
															"src": "6107:54:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1252,
																			"name": "amountOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1193,
																			"src": "6184:9:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"id": 1253,
																			"name": "amountOutMin",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1190,
																			"src": "6196:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6184:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "494e53554646494349454e545f4f55545055545f414d4f554e54",
																		"id": 1255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6210:28:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_bbbb4868217c0daeb6721d77d471da8aa8a80672b4258dd2de9d7ccde9bf2146",
																			"typeString": "literal_string \"INSUFFICIENT_OUTPUT_AMOUNT\""
																		},
																		"value": "INSUFFICIENT_OUTPUT_AMOUNT"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_bbbb4868217c0daeb6721d77d471da8aa8a80672b4258dd2de9d7ccde9bf2146",
																			"typeString": "literal_string \"INSUFFICIENT_OUTPUT_AMOUNT\""
																		}
																	],
																	"id": 1251,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6176:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6176:63:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1257,
															"nodeType": "ExpressionStatement",
															"src": "6176:63:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1261,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6304:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6308:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6304:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1265,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "6324:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_AMM_$1357",
																					"typeString": "contract AMM"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_AMM_$1357",
																					"typeString": "contract AMM"
																				}
																			],
																			"id": 1264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6316:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1263,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6316:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6316:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1267,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1185,
																		"src": "6331:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1258,
																		"name": "tokenIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1188,
																		"src": "6283:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6291:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 728,
																	"src": "6283:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 1268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6283:57:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1269,
															"nodeType": "ExpressionStatement",
															"src": "6283:57:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1273,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6373:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6377:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6373:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1275,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1193,
																		"src": "6385:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1270,
																		"name": "tokenOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1196,
																		"src": "6355:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$729",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6364:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 696,
																	"src": "6355:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6355:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1277,
															"nodeType": "ExpressionStatement",
															"src": "6355:40:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1320,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "6892:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1325,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "6928:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AMM_$1357",
																			"typeString": "contract AMM"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_AMM_$1357",
																			"typeString": "contract AMM"
																		}
																	],
																	"id": 1324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6920:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1323,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6920:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6920:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1321,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "6903:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6910:9:5",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 686,
															"src": "6903:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6903:31:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6892:42:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1329,
												"nodeType": "ExpressionStatement",
												"src": "6892:42:5"
											},
											{
												"expression": {
													"id": 1338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1330,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "6945:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1335,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "6981:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AMM_$1357",
																			"typeString": "contract AMM"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_AMM_$1357",
																			"typeString": "contract AMM"
																		}
																	],
																	"id": 1334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6973:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1333,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6973:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6973:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1331,
																"name": "token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "6956:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$729",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6963:9:5",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 686,
															"src": "6956:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6956:31:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6945:42:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1339,
												"nodeType": "ExpressionStatement",
												"src": "6945:42:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1341,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7010:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7014:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7010:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1343,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1185,
															"src": "7022:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1346,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1188,
																	"src": "7040:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7032:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1344,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7032:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7032:16:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1348,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "7050:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1351,
																	"name": "tokenOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "7069:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$729",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7061:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1349,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7061:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7061:17:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1340,
														"name": "Swap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "7005:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address,uint256,address)"
														}
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7005:74:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1354,
												"nodeType": "EmitStatement",
												"src": "7000:79:5"
											}
										]
									},
									"functionSelector": "43264349",
									"id": 1356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "5564:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "5574:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "5569:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1184,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5569:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "5591:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "5584:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$729",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1187,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1186,
														"name": "IERC20",
														"nameLocations": [
															"5584:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 729,
														"src": "5584:6:5"
													},
													"referencedDeclaration": 729,
													"src": "5584:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "5605:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "5600:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5600:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5568:50:5"
									},
									"returnParameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "5642:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "5637:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1192,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5637:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "5660:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "5653:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$729",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1195,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1194,
														"name": "IERC20",
														"nameLocations": [
															"5653:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 729,
														"src": "5653:6:5"
													},
													"referencedDeclaration": 729,
													"src": "5653:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$729",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5636:33:5"
									},
									"scope": 1357,
									"src": "5555:1532:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1358,
							"src": "705:6385:5",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672,
								808,
								816,
								828
							]
						}
					],
					"src": "33:7057:5"
				},
				"id": 5
			}
		}
	}
}